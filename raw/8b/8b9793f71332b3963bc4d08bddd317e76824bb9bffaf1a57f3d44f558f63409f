%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: coworking.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Антон
%%CreationDate: 2/9/2015
%%BoundingBox: 0 0 1150 880
%%HiResBoundingBox: 0 0 1150 880
%%CropBox: 0 0 1150 880
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">coworking</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-02-09T07:17:17+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-02-09T07:17:17+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-02-09T07:17:17+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9S4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWndUX&#xA;kxoMjKQiLKrEuIXagbftXauQjmiTQKqmWq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FVGW6jjbjuT3plGTURiaVfFKki1X6RlmPIJCwq/Jq7FXYq7FXYq7FXYq7FUNd/aj5V4V+Lwz&#xA;E1PMXyVbc+jRPTpzqKcfDI5+Dbhq0IsVoK9e+ZgSoxhpFEhcipqAOlK5TAGQ4rVyh5Az8ypqQoHQ&#xA;UwRBkCbVb6zULV+0gIH+VWmR8U1ffH7VcJHAWpqUDF/fjtiJnbyu/grZ9RYhLzJbZiO2/bCbEeK9&#xA;1akekklXYEU4AeNME5eo7nyVp5nRhX7RjG3YGu5wSymJ3/mqqfErxLyJrWp8dst3BiLVSWV/RYMf&#xA;i6q3tWmUjIeE2hUY8nfkxVEoNvE5aTZNmgEqkZBQEHkPHLYGxztVsrNVUU0LmlfYb5DITsB1VbKr&#xA;JExDsdxTxG+RyAxidyrTVELlWeu32q+PvkZbRJBPxVsSMzIpNG+IOB4gYRMkge+1ciH1WHNqLQjf&#xA;xxjH1EWdqVqL4m3Z68j48djgx7nmefwVYXNWo7epyIVeo65AzO9E8VoRWZiUvkBjmcMK8q0PzzWT&#xA;9MzaFaxU/E/RTsMv0kTueiorMxLsVdirsVdirsVdirsVadVZSrCoPUZGUQRRVDWvBpGpHxp0Ph9+&#xA;YunoyO1KiszFUhC67K/FK1pTf78pGMjkdlcYW+IK/FW3IpXr1picZ3o7FW2gU8KbBOg8cJxA15K2&#xA;IVDu3XntT9eEYwCT3qt9BqBC9Yx+zTfbtXI+Eaon0quaENzqft0+igyRxg35q4R/HyJqePE4iG9n&#xA;upWlh48PiqErT5HBHHVb8laNupjVK7ruGwHCDEDuVc0bcyyNxJ+1tUGmSMDdg0q5E4KFrWnfJQjQ&#xA;pWpE5gb0INVPgcE4cSrTE7KwZ6k0ptQChrkTjJBBKtmN2QqzVr7UwmBIolXGIGUSVoRsR44nGOLi&#xA;VsJR2av2qbfLJCNEnvVasbqdn+GtaU8TXIRgR1VxhHEitDy5A+BricW3xtVTLVQt6rEqwWo6VzD1&#xA;UTsaQrwKViUEUIG4zIxCogFK/LFdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVWyvwWvftiqh68ntiqvG/Na9++KrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVadiqEjtiqFMkhNeRxVXgdmBr274qqYq7FXYq06B1ocVUvqw/m/DFVSNeK08MVX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVOSYKaAVPfFV0cgcVH0jFV2KuxV2KuxV2KrA6&#xA;yR8o2Dq32WBqD9IwRkCLCSK5tCCOm+FC9VCigFBireKuxV2KuxV2KsN/M780vL/5faRHe6kr3F3d&#xA;FksNPiIEkrKKkknZUWo5NvSvQ9MlGNsZSphf5b/85M6B5u16LQ9R01tEvLtglhI04uIZZD0jZ+EJ&#xA;R26JsanataVlLHTCOUF7Nlba7FWnbiteuKrRI3IB1pXpiq/FXYq7FXYq7FXYqseZFNOp9sVckqPs&#xA;OvgcVX4q7FXYqh5gVfkOjYqqQKQvI/tYqqYq7FXYq7FWBeb/ADLeSXcun2rmG3hPB5EqGZwKMGI/&#xA;Z7Uzke2O1JmZxQNRj8z+x3mh0ceETluS15P8xS2txHp87c7SZwsXcxu52p/ksxyPY3aRhIYpfSeX&#xA;kf1J1+kEgZjmObPs7B0TsVWSuVoF+03TFVhaVCCxBBO+Kq2KuxV2Kvlv8zbWLzd+cerrfzRNpujW&#xA;50+NJmASJhAsnJvjj3eSaXj8Q3Xr0yOXIYgAbFlhxiUiZbgbfjl5vHPMPlrUPL1xFdxNLHD6zLbS&#xA;ScYrlHiNQXjVnKV+0jftDcZfhzCY83Hz4DjPWvN95+VNWk1nyto+ryKFk1Kxtrt1HQGeFZCP+Gys&#xA;jdtBsJlISEJHXAlQbj8NHJ8fbFVRAXIZmrx6DFVXFXYq7FXYq7FXYqh3gfkeO4OKtxRlZBy2PUYq&#xA;wfzz+aS6Ffvpmn2yXF5EoM80pPpoWAYLxWhb4TUnkKe52zA1Ot8M8IFl6DszsM6iHiTPDE8u8oPy&#xA;T+bc2rawulavbwwyzsUt7iDkqc+ioyuzn4jtUHrTbuIafXccuGQ5t3aXYAxYzPGSeHmD9+z0vNk8&#xA;yslj5gb0IxVco4qB4Yq1KKr0riqyv+X+BxVsE1HxV+g4qqYq8r8wPJa6/q7RwQTQo0c8gllKStzL&#xA;Bo4V4/E5I2HIdRnPy7NjLJMmt5Xv9ru8eo4IRG/JC6HdTapeaTMbKOyt5rpWEDyUvYwg5cLiGjBW&#xA;rRT8exOCXZsQYEcP1g7DemUtTYkN+RevZ0LonYqslQtQr9pemKrKSSGjUAHXFVbFXYqwjXfMWv6V&#xA;5nSL1FbTndOELgfGsgA+0AWFGqBTw775iZck45AP4S52HFjliJ/iDwrzRpvmK1/PXUtW0aENpeoP&#xA;C1y8rBV9KWOP1VYVJDh1JWnsehy/VCMsRB5hez9HqDPxIR9HU9K6/gJf+bGmeYtVsLSx063aa1tp&#xA;HmuEYr6pcDihWtKqAzbLmH2Zwgknm52u0WfPH92OIR5976h8jWYsfJegWIkWb6np1rbNJGwZWMMK&#xA;xkhl2O65sSbLpDAx2IohO8CFrxqwp071xVqOPgDvUnFV+KuqK0rv4Yq7FXYq7FXYq7FXEA/Rirw7&#xA;zF5J1XUdf1e7SRHiN1O6xgkyMVclYwG4L4Uq1N+ozR58BMyb5l7bRdrQjhjAA3GI+5T1ny3FoOhp&#xA;fRT+nPps63MV0WBkaRwFccAAF+MKR8TdMhKHDEEcw2afVyzZTGQ9MhVeT2jRdZ0/WdMg1LT5RLa3&#xA;ChlYEVB7qw7Mp2IzewmJCw8XnwSxTMJCiFpvZn1L6mooq/EzDrQCu/XqaZV4hM+Fs8EDHxo/L3FY&#xA;t5q/NH8v/KtwLXXtagtLpqVtQHmlUEAgvHCsjqCDtyArgMgG2GCc+QTLy55p8seZbM3mg6hb6hAt&#xA;BIYWBZCa0EiGjoTTowGINsZ45RNEUm3FR2GFg3irEfMUtlLdC80+VJ7mMeldRRmoZOoPJf2hmvzz&#xA;hI+k2Xa6ITAojZjvlnzRo1hqU0vmLUoYI7aOFLK5uaRKWnd1PqOaJz+Ab/CN+m1cjpiBMiXw+1v1&#xA;0JHGOAc7v4V+t6dHJHLGskbB43AZHUgqykVBBHUHNk6NdirsVWRxcCTWtcVX4q7FWJfmBpTz2QvY&#xA;lFYQBK9fiADAxsK/ylm998xtWP3d9Ru5eiP7yuh2eY+YVWS4g1FaKbmMJKo6+rCSG/BlphGQTiJd&#xA;71fYR4YzxH+E38D/AGfal1zMZ5C52qAD92VYsXAKdtg0/hxIHV6T+WMGo+Xpbny3qsgMpcy2yg1R&#xA;TSrBSezj4vvycM/7wwIp5DtfJDPWWA26qf58fmPqvkTydFfaMkUmrX10tpbCVS4RfTeSSUIKcuKx&#xA;99t9/DLsk+EW6jBj45UXkH5Q/wDORn5g6r520vQ/MBh1Gw1S4+rtKsCRTRNIp4cDGY04qwBbkpPG&#xA;uVwykmi5GXTxEbD6mzIcF2Kqcn2hXp2pT+OKraJ4H8MVXx03oD9NP4YqvxV2KuxV2KvHPP2u3mgS&#xA;6daw3EM+szagqytTgJI5mYSsQK8VLMBSux6E0rmHDSTycRvaPMuyz9q4sHDGvVkoRjfLcC7/ABaX&#xA;efbyzkg0mw1Oc6ZY6ld/6TMFMjiONCS/ECpVXZf15Xg0cs9gdG/UdtQ7PlGUhfFY93n9w+L2Dyzp&#xA;mkaZoVnZ6QQdPjjBhkBqX5fEXY7VLE1OZuOAgKHR1uo1Es0zOXOX4CF8vwaj+ldVu5p1msriRfqw&#xA;ofUXjWq9AAoUgDr+vMbSzlKUiRW/z/AcvWyh4cIgVIDfuT7Mx1r4X1Tyf+YPne8vPOtlpMlzZa1c&#xA;XF1EYpIyVQzOoXhIwk+HjQbdMw5ZBb0OL0xA7k7/AOcb7rVdM/N/TLMrLax3wvbK8jdSocwW8kzR&#xA;nkPtRvEhI6jvlmM7tGto4y+zcyHSsA/NDV7uCSxsIyyW0gMs5FQHoeIWvenUj5Zp+1cpFRHIuw0M&#xA;BvJiltczW8olhYqw8OhHgc0kJmJsO1QsPlfy95q0G9i1Cw4TTyXCpK31gGMQyvHGwLOU5DhX4SR9&#xA;BzaY4UfEr1HzP62+eolw8IPp90f1X+llf5WarMt5caQin6gsQe3QVKxenRAB/KGX9WWdl5pGRieX&#xA;N0uugCOJ6Tm7dalWt6o9qY7eFuM0u/KlSBv0rtvQ5jZ8pjsGWPFLJLhHxSldVvID6vrMQoq4cs4I&#xA;HWoJP4ZixykH+0/f+hzMnZ1C4E359WT21wtxbpMuwcVp4HoR9BzYwlxC3ABsKmSShtSslvrC4tGb&#xA;gJ0KcwK8Sehp3ochkhxRI72eOfBIS7nlHnby5JoXkh5rsw/pKTUVMU8QqfTMfHhyYA0IQtTKMGEw&#xA;jR73peyNT4mq9PLg3+bGfyxH6Q862FveESwD1JPSYCjNHGzLX5EVy4B3HbGWUNNIxNHb73q/mmMy&#xA;eadHjthxu6hmcdeAeor7Di2YepF5Y1zeS0hrDMn6WPfnVo+nX1xoNzqT3Nva2huhBeWxT93czIgT&#xA;mHjmFDGrgfD+rB2jIAASHpP7EdnDc1zYNZ6D5ZvPMGiSaZcX15qFrfWlxZWrGLj69tKGkd+MCn0/&#xA;TD1PMbb0G+a7SyxxmPDBMvx9jn6gSMDxEV+Ptei/m7+Y2u+VLa0s9A0qTUdWv1kdJTFJJDDHFTkz&#xA;BPtN8Wwrt1PYHoiQObz4iTyFvDbP87/zmjvlu2umuI6gtaS2kQhZf5fgRHA91YH3yVMLfTnkzzKv&#xA;mXyzY60Lc2r3SH1bZiGMciMUdajqOS7HwyLIJrLeWkTcJZ442pXizKpp40JxVpbyzdkVZ42aQ0jU&#xA;OpLEAttvvsCcVVsVdirsVQWrX31S2LD+8eoQ+HicpzZOEebkabDxy8g+aPzV1OK98x8EHL6tH6bS&#xA;DqWDEkV/yTmd2HPixz6jir40Lef9sIcGfH0l4d/DiNfcUq83+Y3168sp2qRaWkcXEbL6hoZSAe/I&#xA;0+QzYaPSjCD5k/Lo6XtbtI6uUT/NiPn/ABfb9z6Q02K+bSLW9sGL2l9bxzCNacgsqBgKdDseoznM&#xA;mCcCRE2H0LBqseWMTMUaCfaVavbWSJIKSMSzjrQnt9Ay7DDhjRcbU5BOZI5IfzJr2n6HpM19fTei&#xA;gHCKgqzSMDxVV7nIarURxQMpGmei0s8+QQiL/U8Q8itpVno7xaXNbH9E3N3Z6Y07BXjheVpAklZ4&#xA;+R4mv2RUcTXwxomEhxXzdlkGWEuGhsi31jyrpHnvQZGYGHR7e5vYY7ajcZr1kgaRuMkv2onloCdz&#xA;U+ByGbUwwDiJNWywaTLqbjQunudrc291bxXNtIssEyh4pFNQysKgjNlGQkARuC6OcDGRjIUQxzzj&#xA;FDM9tHKiyLxY8WAI6jxzC1gBq3ZdnDYvGvzC1/8AwvDqtwpCiB2W0hIFC7n92gB7Cv3Zpvy/FmMR&#xA;yv7HLhIkIL8m77XIdNsX1By51BjxhJb7M71WRgTTm7MXJ9/HJk8Oeokkcq6fBycmpBhwmIFder2b&#xA;TPRsb5ZoI0gi5UmhReIAOzbDw65sMREJWBTiZcfFj4fkzPNq6J53r/mby3qeqxWMWoRzXUtxPYRp&#xA;bylZAFtzI/xIeakMjAMpHtmJqccxvIVvt7qH6XJ7L1EZznEEGvx+tL9RiXTtOiv7mRhBpdnMbtjd&#xA;3LABYq1KsaT/AGT8UvxD78xHcM08o6/oupW81rpt5Dc/UigKROHZUdFYM1D3bl9NR1GbOGOcR6hQ&#xA;6e55mGeOSUqI2PRkGTbXYq8O/P3zpp8Or2Pl2W5SIwxfXJVY0BaQsiVPQFVVv+Cx4JEbB6DsLVaf&#xA;CZHJMRme/u+7+xgXlPzVptlq631rej6zaRvMhhHqkKqkOSqhtuJPbKM8MoHpG7tO0O09NPHwicZA&#xA;8930H5YF1eufMuqKkaPbRm0l5LxMLJzMuxbjVT398hgxTM+KY9XJ5jPlhwCGM7c2EfmL+ZGk65os&#xA;+kaXbfWop6VvJgVC03DQrswbwLU+WbPVdkZZ4TVGXd+OrPSY+GYkTTz78sNUl8pa2+oSWcV4jL6J&#xA;JUQuiio5Rcfh5n9piN+m2a7srsvLknxSjwxF87u/JzdWBKPCC9f1PzVZeZIrK60makdtI0eoWcqD&#xA;1V9ZeUbV50A/dn7PKtcs7S00sVcTj6CJjIh5/rHlC0nudTisIeF3EsNxBGDReD8gyhf8oxtT3zGx&#xA;6kir5Ln0MTxcP1bEM9/K/T7218qWyekVnd5JmQoA61cqOor0XM27dVRGxZQ13d9DK48QCR+rFWpI&#xA;DJbvJMSFhaC4JqS3GGeOUmgIPRP9vFQyDFXYqk11cXUN3KBK3XYdgDuBTp0xVDT20lxGbiSJSgb4&#xA;pAqqSf8AKoATkJ4xLm2Y80oXTA/ze0bTbrypcalKiR3tgENtMAFNGkVShpSoNdvfM7R5DGVDkXS9&#xA;s4ITxGcvqjyPxeJaHanUtas7FnDC5kSEcVCbtRQNgNwe/fL+0c+THhuBo8UR85AF1PYWkxZtUI5B&#xA;ceCZrvMYEj7R8X1ZMqwSNbwgJBGeMcIA4Kq7ABegA7ZrXrAKaSKQxtMsEZRSCz+nGd/HcVxV41+Z&#xA;HmO81rzFJa+oZLbT2NvAi95B/emgHXmOP+xzju2tSZ5eH+GH39XvewNNHDp/ElsZ735dP1sCb8v9&#xA;U1HX5LzQdRGk+YlVUmimQMkkLhQHXZiCOh28OmZvZWe8XDLeuTq9dqcWXOfDPx7/AHL9I8kw+X59&#xA;QtradtUuo5ANSv1TirTbllRQSeKEkV8d8wO1s5nMD+EOb2NrcETKEiBO+vV7P+SPmSVzdeXZ2LLG&#xA;purKv7K8gsqCp6cnVgB/lHNl2DqSQcZ6bhxPabSASjlH8Wx/R+PJ6JrmmT3Yilt+JkirVW25A07+&#xA;2bnUYjKqdBpNQIWJci8P/MDyr5a896tHY2+sQxanot0w1TSw6t6pQhGVwDyVlpxDjbcjNeQYWQPU&#xA;dnaxoix1ZPYeVYLGSynkuaTRTwngi1j+2oVB360FcxIafhIJO9hhkj6S9Lk0WxuZxdOjxu1C8VQA&#xA;SP5gK/gc3hwRkbLrI6qcBwggsT/OjzbPoHlMwWbmO/1V/qsUimjJHxLTOKd+Pwg9iwObDSYuOe/I&#xA;Oi7V1Rw4SR9R2D530fQ9S1G/tv0dOtle2ki3NpdP0SSI7UX9vYkFe4rl/aeow8BgT6u4OH7N9n62&#xA;OQZowIxHYylsCPLv/Atnl5pH5ieZ9Pm0/Ujb2GlXVxAt+Fn9c3AaVVMFuFggaKJuVW9Rnc/Zr1Oc&#xA;/i4OIW9xqDMQJjz/AEdfs5PYl0rS9OuuNpY20JgHpQssMfJYxSihuPKmw75sSSXRiIHIIxr+Z/ti&#xA;vb4WkT/iLLgZNxXvptyVWLf5UsrD7nZhirCfN35VeRfNeqzavq9lK+pThVkuI7iRNkUIoCA8BQDs&#xA;MnHJIbBrlijI2XjGqflLYQxeYdK0zWljlmuf9B0+WORnMdqWYLJKvw7tXoDsA3egxsvacIzEDz/X&#xA;8GH5OcY8QHpJZxqvnbUI/wAsfK3l23k+rXS2ItdajX+8UWf+i+iT2EjxMXoa7U+yxzd6HTcUuM8h&#xA;ycvTwuj3JN+Vi2ereYjaui3FvaNK8iMAykFKioPUB3GZmqz8OOXCd7pyJ5PSae02/ljRJ5PTj0yz&#xA;5UrvBF0H+xzSfmcn86XzLjeJLvKG1Dy5ZR2l5Bp9na2l44+GVIhGPUT7BdouD0B8DXKsxOQVIkss&#xA;eaUTdpDcaPLoDrqGp3y3t/fxL6oiT00VYyeEUUZZzRS7fETUk/IDUa6UMEQSdnY4daKlKfPZj41X&#xA;VrPVH1S1llt5HYUHMsoAAHHiarQ0qRSlc5qXaGQz4omqdZmzeJMyZyvmKT/DMuu3ypEyRSTy/aCU&#xA;Un4jQOwXapoDtnWafVSlp/EkN6Z6fF4kxHvKD0DzTa+cNG1uxjlt5TPp0kJNs0jKPVhZPi9aOOla&#xA;Gmx/DI6TVHMJRNfC/wBIDsddoRpjGUb3PXh6f1ZH9CUfkt5o1OTUpdEuJ2uLFoDNbBzyMTIVFEJ6&#xA;Iynp0r06nNZ2Jq5ykccjYqx5O49o9DjjAZYijdGur2HOkeQSLUUZb6Yno5Vl+XED9YxVDHUJoyLP&#xA;/dUu9ffwH04q+cf+ckvzA1KPzFa+WrF/TtrGNbm7BAPOaUHgDXskfT/WOMc0oG4t47Px6jHWQWL7&#xA;yHlOm+fNfsdVstSjdDNYzQzxqVFCYHVlBrXb4cZ6ychRqk4ewNNjkJAS4h5l9xQ3sd9DHex19O6U&#xA;TJXrxkHIV+g4tBFFGo831IxqaKWJI8QAK/RuMUPDtMjkS8eUqXlupJGlYCprIxau3if1559qbnkk&#xA;Rvufvdh2lrDl4YRPohECvOtyu1KBRcPqFslxFqVqoRZo0eqgtTpQg/aPbJaeWWBFcnW45yibCI0r&#xA;TrSxM1tZwSp8XOXmrmhpT7TD2ynKMktyGBso7yIsw/MDSLhEKiZ7hLgUoQhtpWXl/slUfPNn2MeH&#xA;UAeRdtj1hOmlhkeRBj9xH483pX5k/mBpHkjy1capeSp9cZGTTLMsA889PhVVrXipILnsPozr5zEX&#xA;F0+A5JUOT4/8sfmfZ6U99JqGnvd3uoXD3N7qKSAySyOxNSpCjqxPXvmJqey55akJfBul2nASMa9I&#xA;Zfpv55veXNlpWn2kq85VVXuCgVAG51+HmzUIrTb55DH2VkFcUhQYT7UiRQD62tbhLm2iuIyGjmRZ&#xA;EYbgqwqD9xzYuK8Z/wCcgUeXWNBVgfRhguXHTjyd4x8/2Bleo1XhYpAfVLb4dXM7K7J/N6yEpi8W&#xA;K5HuJ/hH6fg8xhkdeLqxV0OzDYhh3Gc4+nVYost8r6tq2teZdA0yeatvHfQTmNaAO0Egm5PX7RAj&#xA;/pvmXpZGWSILou1dNjw6bJKI3NfaRye3XzA3cxH8xH3bZvHglFQCwDbCu59sVTHU4rJIY/R4h67c&#xA;TWq074qhLm2MSo38wHIeDUBxV8t+ZvN+gTalqBuZLiS7+vXTtHHCnpgLdyGJBIZRyBjVOR4jqfnm&#xA;q1HZuSWQygRv3/2N8e1TECHDcRz91937V3n3zVazwW2o2kbK+tWyXKPQALJyaK4rQ9RLG23uPnmw&#xA;0UM2HKZcXpI3Hn/buzy9oY/C4QDxdPco/lB538ueTb/ULvVJbi5N1Hwj9GFSQSwZi3Jx/KMzpTJg&#xA;Y+duthmABBeor/zkd5FQ8ki1FW8RFGD/AMncp4Cy8eLX/QxfkIryMV/U9VMMdf8Ak7TBwFfHipad&#xA;5hj1/S7TUEZmjk9fgZBSnO5lcgd6AtTfOK7ZnKWoEJGzEAfPf9NfBtnMZJenYJ/qlpZR2JHAA7BS&#xA;BuakDfLtZpsccRIFEO41emxxxEgVTGPM35p+XX8t6z5cltLna2l0+8lQIixi4jMVU3YtTlttnSaW&#xA;OTJphPGB9I61TrNNPHfFMnhjXIX+kfpeffld598s/lxFqA06K4v7jURCZJJWARGg9QKAoRCQfVNd&#xA;8ow/mhfFGP8Apq/RJ2Orz6GdCM57f0b/AExTz8sPzX8o+WNXlvNQF28f1Q20fpxqzEl0apq6jpHm&#xA;P2Z2Zkw5JTnW46OR2x25h1GKMIcWx6jyrvfR/nKPzNJ5Zvk8sSrBrzKv1GWQIVVua8q+orp9ivUZ&#xA;uQ6CV1s8G8yf9DL6dbXF/qd/H9UsojLPdxR2XFY1HIk8Igx4/LLo44nqB83ByZ8sD9Mj7uH9aGsb&#xA;X/nJLUbG2v7Wf17S6iSe2m4WfxRyqHRhyjrupByXhR/nD7f1MBqcx/gn/sf1vHPzTsvNtv5pkfzW&#xA;3PV5kX1n+D9n4QP3YCbAdswsvCJERN/jzej7OnkljucTHfa63HwSLy75f1TzBrNro+lwme+u24RR&#xA;ggVoCTuaDYDK4iyBdObnyGEDIC6HJ9BWHl//AJyYsLSO0tncQRDjGr/VJCB2HKRWag7b7ZsBhgP4&#xA;h9v6nkZarMTZhL5Q/WyN9Y83xTrpt9q86q0Z+uRzLbIFerK6M8UKkKrnfjmr1JMomN/J7nD2Phnh&#xA;Exx2Ry26i+5PPI0N/a30kc1uyW93bieOcjaqsAF9jR60OazsvAcOaUf4SNj7v7XSarRHFKW9xBr8&#xA;fJnVtb+vL6fMJsTVvbN+4SmwoxFQaGlR0xV59Lp2ualr13qNuotPRuCLadyV5CE8EdaAnfjXpnI5&#xA;8GXLnlOPp9Wx92zmHQZL6cgfmLeHfn5c+dp9Qs4PNd8t+sDXC6Y4SGMrFIIzJUQJHvsn2s3+LMZg&#xA;X9Vb+/8Abzb9FhkBITHWh8nlJNFqPDN6Ds87Ieosq8la7oXlzUbmbX9NNzcRyJDFUkNCylvU2G3L&#xA;Yb9vpzV9p+KREY/PrTuuxY4eKXieVeni+x7lpXmb88tcs7O+8qXyWPlqeJV0/wCtJZkhIv3Rrzik&#xA;lpyQgdcGnmI4Qckhx/Enn7mvW4py1Mo4Ynw9t/SByHnfNKvMt75ye7EfnC+W+1S2TiJY1jSP02JZ&#xA;QgiSIHr1K1zVazJ4mTbl0e47B04waa5EcRJMj+PJjUd3KGYg1BNaHMjtHRDBwDqY7+9wvZrtyWv8&#xA;af8ADHJ6f6tCvnRPx7nof5RaTeT+ZNN12QhbS1uZogo6u31Kcnx+zVfv9sr0EPXbZ7RaqsXh9TT2&#xA;NmLMWPUmp+nNw8SslfhE7/ygkfPt+OKsX836/rWj+TtZ1jS447i/0+D6xFHcKzR8EPKUsEZG2jDH&#xA;7WSiLLGZIFh5H5T/AOckvPOt6skOoWGmPbrJFGbeBZ4riUzTLGRDyllUsqsXNVpxU7jLJYwGmOUl&#xA;B/mBokUf5E+UvNcdbbV7m8lW7lGzzpdtPKpdhu3ARLxr2y2OWXERbjS0mLhB4QyvyT5K/wAY/kBa&#xA;rJxs9ViN5Jp+qMpLFobl3PI9eLqGjNP5Qe2U5dRKFyttho8c4iPCFmkflnoOmWoW5aXUJiB6s07k&#xA;An/JVSAozSntrUX6TXwB+92WPsjTx/hBKaN+Xvl+aIhbAKGFKiRwwBHUb7ZZ/Kurr6vsj+pyP5Gw&#xA;19EWWeSdJ/Le70o20umWUj6aRaPcSRhnd4hwf1CwqZAR8fvmVg1+QishouBLsnEfohfwW6xo2lxa&#xA;1CdHjjj0tVDtFGvBVkUnZVoNiaNtmj1mm8TVeLzHX3jb9TnaPs8wkNqiEs126X1YoFO5O/yH9uYn&#xA;amSocPe5XaeSoCPewvXPKmrza2Ybay+vSXsCXscVvR3MRPCrqeNCrqfHxzeaGGoj2WTCR4pSHDvy&#xA;HNdB+UPD4sI8NHi2+o9L+xh1hpd/qvnMaRpunyT3UAnt7ixARCs9u1JA3qMiApXepynH+d/LkGUv&#xA;E4tt+jLLj7M/ORIhDwhA36evufQPkD8o9L03S5H8xafa3Wo3LBvSKrKsCKKKgYjdjUliNu29KnY6&#xA;LxscPXMykfN1naOPS5cl48UYQHlzekZe0sV/NX/yW3mX/tnXH/Js4RzYZPpLENXTzG/5LeVv0Mk8&#xA;ijTrD9IR2tTKYDZqD8K/Gy8qcgu/0VzXdqwyyxEY+d7+52/YWTDHKDl5VtfK3zH54c32rR2cq8Bb&#xA;HhAApSRjIqclYN3DCg2ynsbRxjjsk8cuY9xNOT292tk8YiIHhQ5So9wJ3utkPoUGo6NNJPbWfqSy&#xA;Lw5TIzFVrUheJXr3zZarsfxgBLjAHd/Y6TTe1ngkmJxk+d/8U9I0H89vzO0XTTp8Frb3EIP7l7mK&#xA;aR4hQDih9UDjtsCDTLtP2dLFHhHEff8A2OHqe3ceafGfDHkLAP2pfL+a/nmXUW1B9OtDdOWZm9GW&#xA;lWPI/D6lOu+SloCeYLlx9qiIcAOPh+P/ABSaWn57fmDDNzl0u0lXjx4enOu9ftV9U4IdnGJsCTiZ&#xA;e3ozFEw/HxRv/Qwfnf8A6sVr903/ADXl35WfcXG/lTF/Oj83f9DCed/+rFa/dN/zXj+Vn3Ff5Uxf&#xA;zo/NK0/PD8xgCGsLRyTWrQz1+W0ozG/kvyl+Pg5v+iId8Px8WIeete8w+dJbOXVLGOB7JXVDaxyJ&#xA;z9Qgln9RpN/hAFKYYdmcJJAlv+i/1sR7QgfxQ5/jqxb/AAzcUp6M33f2Zm+Hk7nXHW4ib4o/NHQa&#xA;fcxajLfNYCdpXZzDNGZI1LPz+EHfbp16Zj6nRTzQ4TxR92xcvRds49PPjBhI1Xq3H3vTNL/Ozzrp&#xA;mm2+nWvl7S1traMRRgQXS7ADeiXCLU07DK49m0AKkfe25PaDikZcUBZ6ckr1v8wtW1u4+tah5ctf&#xA;rPARs8Bu4wVBJXb1m6dOuGPZ3DISETYZT9ozLDLCZx4JCjy5Hn80APM0w6eXIf8Ag7r/AKqZdqtL&#xA;LPXGCacbsvteGhEhglGPHV9eXvRln+YfmPToJo9L0lLJ5aMJUa4Yq61AdQ7kBqEivgadMx4dmcP0&#xA;iQc7N7UHLXiShKu/9lFMNJ/OPz9as5v7d9RDU4KzzRcfH+7YVy/8pKqouvPa2MyJ4o0enQe7r8yU&#xA;0H57eaQpUaEvE0JDTXD9P9ctiNJPuKT2riPWKVa/+b3nPVbKWxXS4be0uYnhuo6TN6iSqVZWIdNu&#xA;J+fvkhppjoWB7Txn+KLDtMvtU0qC8h0zTEsvr0ZiuJYTdCQqVZdnaZiNnNR0PfJnDPuLWNfiH8Uf&#xA;mr+Zdf8AM3mDy9oXl+7t/R0zy/CYbOKBXXmSADLMXZ+T/D2oBU0ArgGGY6FJ7QxH+KPzZf5f/Onz&#xA;xoXliz8t2OiaeNNsovRTlDcmRgal3ZhOBykLMzUFKnYDIT0spXYO7OPaeOPKUVT/AJXP5noQfL1o&#xA;wPiLj+EmYw7Jj/MP2tw7bj/Pi2n50eZ0JKeXbQE9T/pNT/yVw/yWP5p+1l/Lo/nj5qUX5w+b4UMF&#xA;h5fsYFkcvxWK5JMkjFmICzKtWZt/h64Zdm30LPH2/wAOwlFlnljzp52u4rw6/pf6OZDELUNbzW/M&#xA;MH9T+9LcuPFenjmh7VmNOI8O/FfN2mLtXIeYH2oo3Mk92sslKkgUHQDptnMZ8pyEyLjZ8pyEyKV3&#xA;fnjzdpXm23udFsWv72ONrGOzt4muWkt1QyfZi5tUH4jTpTfvnd6QZR2Zj4a4ibHu+bl4TgHAJ3wH&#xA;nXfXuYxpGuedtC/MSXWbXy3frrWoG8vpNPmtLgyMbt6zSRxcFf0wV22NPHKgdT4Rvh47+z5pI0Q1&#xA;Ari8PhN87v8A0v6H0l+V/mvVfNXlKDWdSt4reWeSRYhC4ZXjRuPIgFuDBgylTvtl2nOQx/eD1NWr&#xA;GHj/AHRJhXX8Bk/1mD+f9eHx4d7jMW/NO4hb8uPMoDVJ064p1/32clDNAkAFhk+koj8uriEfl95Y&#xA;BbcaTYg9f+WZMZZoAkWmHIPm3/nLvX3vfOul6QknK102x9bjSlJ7mRue/f8AdxR5EzEuTtNFH0ks&#xA;q81W9ra/lD+VscSIjPcabNIEWlTLb+oS2wqatv75ZinHcB1eslcv859E/WYP5/15X48O9k76zB/P&#xA;+vHx4d6vkP8AOj88PO17rlzo+nX0ul2EDOjxWrGJyORXi7ijE8QOW/XoBmFiySykyl9NkAfpPffy&#xA;eiGmx4oxERciAST59B3V83kr+ZvMjqUfVrxkPVWuJSPuLZYNLi58MfkGk4o3yCpD5v8ANkMqSx61&#xA;fLJGQyMLmWoI6H7WI02IbiMQfcmGOINgD5Poz/nHf85fNWuaimga9OdQX4lS7kH71KRvKGZxuw/d&#xA;lTXxX6YRzSx5BEm4SB+FMdZpsZwnIPTKJHuN+XQ+575e2eiX0kEl7bQXUls3O2eaJZGjbb4kLA8T&#xA;sNxmZ48O90okRyfnt5vg9DzNrMG37m+uU+H7PwzMNum2bIG4264813m3TH0vzZrWnsKG1vriGnX7&#xA;ErDr3+eOM2LCZ833j+XjQ2/kDyzAZORh0mxjLUIrxtkFaZr554cR3c2HIMK/Pj8ztb8qafZ2uiFY&#xA;bi/WRmvSAzKIyi8YwwIr8e5I27eIyNOYTBPOnC1eaYlGEduK7PufLOr63rOr3LXeq39xfXB6zXEr&#xA;yNTwBYmgyZ3REkJerEnZyfapyNBlxy72Y+RvzM85eVb23XTNSl+pcwH0+ZmltmDMOX7pjRSfFKN7&#xA;5ZCIJALTlyyjEyB3At9A/mnrS6v5S8g6m0foSXmvaTcvATXh6kUjla0FaVzG44iRAPK3M4+KEZcr&#xA;p6z9Zg/n/XlPjw73IeI/85Y28U/kXTbtCGa21FVbtRJYZKn/AIJFzJ02aJkQD0cfUDYe95r+Weip&#xA;5m/PHSpZV/0TQrDTrm4Kt+3p1hbwRkEgdblUNKdK/PJZMgjGyURFye6/nvqUf+Am0mKTjPrt5a6d&#xA;HxrWjyCSQCm+8cTD6cx4ZYk7FtyHZOvzRgsbz8v/ADDzP7yDTbyWJgNwywOafTSmVSljmRvuCKbD&#xA;MiJ9zw3yj5r0/RvJOlQyBp7po3YQptQGV6cmPStMw8uhnmyyPKLfh1EYY4jqyWL8/tat7SG2tdKt&#xA;kEMapykaR6lRQmi8OubaGARAA6OLLLZtI/Mf5sa35ge2+u2ltHHbc+CwiRSS/GtSzv8Ay+GYmt7M&#xA;hqAOIkV3ebHxEDbea7MlTNG8bV3Ioyj9R/DNHl9ncg+iQPv2/WniCdflk0R/MTSr1W/cXNxqDRkj&#xA;qDBI4P0iQZ1Zj4OlxQlzjDdsnsID3s81eeL/AJX/AKE3L4RodwCf+er5jjLHhu9mo/WPcr/lZqUd&#xA;vrvnjQpZPjtdamv4Qa7Q6gTIAAe3ONz9OCWWIANpgdyGZZqGbGfzO/8AJeeYv+YCf/iBy3B9Y97C&#xA;f0lb5G1C3h8h+XBu7jS7IFVHf6unfIZ5es+8phyD5I/OnVLjXfzB8xaukLLZ293Hp5fdlV4YzEBy&#xA;pSr/AFd2AzMw7AD4u6wjhxhn+s69rd55f8p6ZcRE6Zp99ZRWs5iKhfSj9NYvUACtRR88wezcuSeT&#xA;JxD071817c0unxQgcZvIT6t/Ln5bvqDF07sVfLX/ADlR5VsdN8x6ZrdnbiE6xHMLxkrR54CnxkdA&#xA;zLIOnWletcycB2p2uhyExIPRiX5bflxpfmrQdV1G5uGjn06eCIRBWIZZwxBqHToUPbJyjIyAEq+T&#xA;dm1Ix1ceK/MoT82vIOn+S9V0yxs7g3BvrGO+kqpUr6jsoG7P/IcGLi3s3uyw5hkFgcL6A/5xr8mW&#xA;mkeRIdblgUaprLPKZyPjW2DcIowT0U8Oe3Wu/QZTmNyddrMpMuHoHruVOG+DPzOt/q/5g+Z4qBQN&#xA;UvCoXoFadmUfcc6PCbxx9wcGX1FEfmqQfzL80UNf9yVyPukODTf3cfcuT6i+3tDhMOi6fCTyMdtC&#xA;nLx4xgZz8zuXNHJK/PXkvS/N2gT6Xexr6pVmsrkj4oZqfC6kb0r9odxk8WUwNhjOAlzfGepadd6Z&#xA;qNxp97EYrq0kaGeJuzIaEZu4yBFhwiOidebvLml6NHZPZXX1oXqmWI8Ah9Kg4saM32uWHj4ulI8A&#xA;w3MjK2ZfkL+XNr5l1ifV9WtxPo2m0VYn+xNcmhVWH7SovxMP9Wu1cxNVnMBQ5ltx4xLnyet/nSAu&#xA;n+VFUUA8yaeAB0A4y5habnL+qW/J0970OWaKIVkcKPc5i22pbe6doPmaCTS9Rs4761FJfSuFBQup&#xA;ABAbuK5kaWpS+HuZRNfi0TBptlpbsqRQwIFWOP0wqkIg+FNgOgy3VYwACEymTzeb/mIJvMPnjy7p&#xA;lnF60WimLVrvkQFH+mQhDRv+K4Zh475VjmIwJ79vsaJCynfn/UbuTyVr4dxHGdOugQuwNYWFKnx6&#xA;ZRhJM4+8Mp8i+cdFdpNLi5b8QVHbYdM6IBojyRNnb3NzzkWTgoNNxXemZWDSnICQXIxYDMWiW027&#xA;P+7x/wADTMj+Tpd7Z+UPet/RV0djcbHrscH8nS7wv5Q971jydpNtp/mTyfp8DerqMNre6jq6Kwb0&#xA;EngjhhDU+zy2AB980GszymDxfw1EfBqlImQHcnWq/wDk99D/AO2LP/ydfMSP9yfewP1j3OttNudD&#xA;/OCa/eMJY+aVkhjcFfimtrW3dNhuNoJ+vjXATxY6/msqqT0Q17GmY7Nin5nQE/l/5hZmJpYTkDt9&#xA;g5ZgHrHvYT+kteTkt7f8u9AupTRV0qyYmldzboB09zlepNGR97LELoMA88/kppV15AuNI8prFBfX&#xA;epx6nKbqV26K0TDmecnFVcsB8R3PjlsdQAeI8qdoZfvq6V+1Nvz7dJNM8rSIao+s27KfEFGIy7R8&#xA;z7nTZunverZiNzsVeOf85TaMbz8vINQQfHpl7E7t4RTK0Tf8OyZdhO7maGVTrvDz7/nF+G2vpvM+&#xA;lXBISeG0uKKQDWCSRe//ABmzKj9Yb9eNgUv/AOcg7f8AS35t6foVk4aWO1sdNjBIPF5XZkBpv/u4&#xA;HK4HYlno/Tjt9VaXp1tpmmWmm2q8Layhjt4FHZIlCKPuGYhNuqkbNorAh8OfnXF6P5o+ZE9Mxcrt&#xA;n4k8q81VuVRT7VeVO1c6DTH91H3OHMeosau9K1HT9cn0rU4WF/b3BguoealvUDcWXn8S1r3y2EgY&#xA;2OTGQ3foOteIqOJpuB2zmnObxV8//wDOSPkThLD5wso/gk422qhR0bpDMfmPgP8AsfHNjosv8Jcb&#xA;NDq8Sur64v3s4H3a3hW2h9x6jMP+J0zP5NJNvsjyboOn+U/LNlolrSVrdK3EyinqTNvI5r4t08BQ&#xA;ZosuXjkS5sY0KSX8yNG1nzFbaLFYIlbDV7W+mDNxpFCHDEE9T8fTDgyiJN9Qicbpkf1aSQ8jUk9z&#xA;mNTNctlQ17+2EClVPq3fv44TZ5qhYtDsYtQuNRjhC3t0kcU81SSyQ8uC7mgA5t0wkmq6Ip57+fV4&#xA;9p5SS0SQo17IweMftRxoWNfk3HM7s+I4iaY5D6S8X8rwXk9hcSxxM9raKhmlA+FDIxVQx8WPT5Zt&#xA;OIA13tMBszzyZVfLPmO2hihe61G60vTrZ5kWQRtfTtCXVX2JVXLD3AzH1EyJCiRzPybIk0z5f+ce&#xA;fJnEc77U2enxN60S1Pc0EIA+jMT+UMvf97Lg8y4/848+Sj/x+6nt0/fx/wDVLH+UMvevB5lNvyl0&#xA;mz0nTtY0uK3hW40vUpbGa8jhWGS4REjmheUKACwjnA22798pzyMiD3hYCkVf+WNVm/NHTPMaKn6M&#xA;tdNltJWLfH6ruzCi+FDgEx4Zj1tTH1Wya90ywvpLWS6hEr2UwubViSCkoVkDChH7LsPpyoSIZUrS&#xA;3EMQ+NqHw6n7siSlKNWnh1CynsJbZZrS5QxzJLuGRhQggf1weIQbCkJdHpsn1OGwhUrbQRrDBAn2&#xA;UjReKBR0HEDK53K76qNuSaRaZqEquLh4YvUXixjjIkGxFQeRUNv3B+WY8dGRtxGnI/MlgX5+gDTv&#xA;K4AoBrMAAHSnFs3Ok5n3ODm6e96rmI3KE99aw/bcFv5V3P4YDIKwP837uPUfy28w2ot2dTaPLuRU&#xA;GEiVWp/klK9cOOfqDdpzWQPl/wDKXzZd+WvN8V3bAMZ43gZHJ4HkKguFK8gKeOXayU4x44fVHf39&#xA;P0vR4MWPITDJ9Muu23Xr7qel+Uvy2uta/M/S/NOqS291pV1M1y1uZH9cSW8LmIutOnqRK32txmLp&#xA;cpGEA/Ub+8uH2nqsfHOMPcK5dLfR0+pWsW3Lm3gm/wCPTJGQdEhF1eSSdVIEMJPxPTkwHt0GMDZo&#xA;7BUJqXlL8sNTnmur/RbK7vJ/766ntYHmc041aQpyqANjXbtm1jqIRFCWyOEIa18nflxMTe6potnd&#xA;6pPI0txdT20U0rOTsTJIrPsAKb7ZXg1ERAAyXhDKS8Dbw8uH+WKHMXKIg+k7JQk2qWcRoX5t4IK/&#xA;j0ygyCvLfznv/MmpaZFpthE6aNdfu71ol5vz5L6fqU3CV8O/U9M2XZ08PqM/qrb8d7r9ZHPKcBj+&#xA;knf8dzxXTvy781Q3BvLjTpfStJeEXBfU9WVX4j01AbmoPU9MzsWow8YEzt+Oqdbo9THEZYxuK99H&#xA;qA+stEt9Qk0iyk1NVj1B4I2u0WlBKVBcbbdfDNHkEeI8P03t7nLxcXCOL6q396YC2iHbIU2LvRXG&#xA;ld6K40rvRXGld6K40r51/wCcgNcW78xvpq1EWl2/pneoMs6iRiP9iVH0Zt9FCoX3tOUsx/L3yzZS&#xA;fkU0VvCv1nUree5mc7F5o5G9Op/yfTUDMfJkIze5OMelg/kG4Mur2NgjKyXOtaZIyUBJ+rJdXHIE&#xA;9l9Pfv0zK1Q2vyP6EB9KZp252KsS8qj0fOvnO3Aor3NldqKU/vrJIya96tActn9Mfx1YjmWW5Uyd&#xA;iqGNkhNcFK2tlCOor7Y0quiIgooAHthVp5EQVZgMVeTfn3cq9j5aCA/DrEBqf9VsytGd5e5pzdPe&#xA;9Emlupdmchf5RsMwSS3If6t7YKVKvM9tp0+j3WnXzARahDJblSpbaReJagp9nlXrlWTPDFRkUxnw&#xA;kF5F5E/JeLQPO+majbavHqsUSzsyyW7W7RyeiyxsFLyhqM1euXHtDHlPDA8w5mXWicTGqemaB5T1&#xA;ix1NZbm5kaziDslv6zyRc3BHII3Q/Ed8xcOLKD6j6feXCtlX1b2zKpVyWbuaKpONKrLpsajlM4Ue&#xA;A64eFV3rW8P+88QLfzt/nXG1Qs73M3945K/yjYfdgKqP1b2wUqWa95Zi1q1W1lvp7BUdZUaD06O6&#xA;mqiQSJIGUGh47VzK0+GMutFuwZvDN0Ck9p5U8zembKbUrZLWJ+a3scREjFXJQrEW9OOg6le9abZX&#xA;PR5ZyIEgI33b37uTucfaGnjAExlKdEVe1e/mfd+l6Pau726M/wBqlCaUrTatO1euGceE06E1eyrk&#xA;UOxV2KrZZYoozJK6xxr9p2IAHzJwgEmgiUgBZY15g/MXyxo8DOblbyYD4YLYiQk+7LVR+v2zNwdn&#xA;ZZ8xwjvLrtR2rhx7A8Uu4fr5B5DZ+StI1Kz84eaZb5754dNvbyKzmiKmO4u4Jmq5Ynk0dDSg+1vt&#xA;TMrMJ4+GJFWfsFNuLVYc1+HLiob7ciel9fe9A/LLWLDSfyf0a6vGXgsEvGIkcpG9aT4FB61zFOnl&#xA;lzmMf7FzaqGDFxyP7WAeV72zi8/eW4bLTEtLcXNzcXMUbM/L07eWJJWMpZgIxcEgV/EjNjr9MMeM&#xA;kyPlfw+9wtD2mdRIARA4QLrvPv7vvt7p+m7Pwf7h/XOd4w7pw1u0JoFkr8h/XHjCpBpT+n+Z2sgI&#xA;yLf6TYT/ABChLQT3UR7+Dr1zIJvGPef0MerL8qZOxV2KtEnsK4qsYSt3oPbAqkbYnc9cFKwz8yvI&#xA;mq+Z7bSItOkgiawv47uY3DOoMaAgheCP8W/emZGDIIXfUMMkbZmLUd8x6ZrhbLhpVr2EEhq8asR0&#xA;LAH9eIVpdPtkYMsSKw6EKAcJ9w+Sqn1YYKVsQxL2qcaVzGQiijiMVUTbsxqdz4nBSu+q+2NK76r7&#xA;Y0rvqvtjSrhZqftdPDCAqqtvCtKIKjoSKnCDSqmKuxVxIHXFVCW6C7IOR8e2AlUn1nTBrVnJZXvJ&#xA;7eUqWRCV+ywYUI9xksWaeOXFE7tWbBDLHhmLiUnt/wAqPK6NznikZafZM8v/ABqy5m/ynqP532Bw&#xA;f5G0v8z7ZfrVr7ybpNr5c13S/L9sLa41mzltXlllmdCzRPHGW5mQgAyGvEfflM9ZOcgZm6Lk4dHj&#xA;xAjGOG2O6L+VrJ5c0rT9VvJVu9PhaBvqbgwkNK8gI9WOv7fgMyMfamTGTwVRN7uNqeysWcg5LsCu&#xA;aead5D0KwvLa9ggJvLVJI47h2JcibjzLdiT6Y+W9OpzEz6rJlPrNuXp9Jjwx4YCgnf1P2zFpyFa2&#xA;s7hW5RfB/lkD+OEBVaLRLNdXGsPV9RFubT1iaD0S4k48Rt9oZaCapFJhgS7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVrIG674q16SeGClXBVHQUwq0Y1PXfFWvSTwwUrvSTw&#xA;xpXeknhjStiJB2wquxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:645082c0-fd78-2b41-8505-c8bdb8f821c9</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:645082c0-fd78-2b41-8505-c8bdb8f821c9</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b1986330-6257-413d-9f9c-12b70395a00e</stRef:instanceID>
            <stRef:documentID>xmp.did:35f11cf9-ad7e-2541-b687-72ddbf278de0</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea3a206a-cb7b-a343-b301-ed43e6ba1134</stEvt:instanceID>
                  <stEvt:when>2015-01-21T11:01:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:645082c0-fd78-2b41-8505-c8bdb8f821c9</stEvt:instanceID>
                  <stEvt:when>2015-02-09T07:17:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1150.000000</stDim:w>
            <stDim:h>880.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -880 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 880 li
1150 880 li
1150 0 li
cp
clp
1150 880 mo
0 880 li
0 0 li
1150 0 li
1150 880 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.988235 .988235 .988235 rgb
f
1150 880 mo
0 880 li
0 603.504 li
1150 603.504 li
1150 880 li
cp
.917647 .956863 .764706 rgb
f
850.432 709.571 mo
956.559 666.071 li
946.559 653.071 li
952.559 615.571 li
895.559 615.571 li
872.186 625.071 li
864.657 625.071 li
659.018 705.763 li
850.432 709.571 li
cp
level3{
gsave
clp
[4.16579e-009 -92.5743 92.5743 4.16579e-009 807.789 701.571 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .956863 .764706 ]
/C1 [.917647 .956863 .764706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.768627 .815686 .564706 ]
/C1 [.917647 .956863 .764706 ]
/N 1.11544 
>>
]
/Bounds [.0158103 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.16579e-009 -92.5743 92.5743 4.16579e-009 807.789 701.571 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lK[["lKRQtl07Eqkih6okND$kkND!ik2tggjlPUcjlPRajQ,C_jQ#:\j5]1Zio8tWio/kTiSibRi8EPO
i8<GLhr!>JhVR,GhVI#Dh;-oBgt^]?gt^Z=gY:K;g=k97g=k65g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'
e^`4#e^`1!eC<!te'ldpe'ldodaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\c-=MXc-=MWbfn;T
bfn8RbKJ)PbK@uMb0%lLaiVZHaiVZHaN2HDaN2HCa2c6@a2c6?`l?$<`l?$;`Pog8`Pog7`5KU4`5KU4
~>
<~o^qeJo^h\GoCMSEo()ABo'u8?naZ/=nF5r:nF5o8n*f`6mdBN2mdBN1mHs<.mHj3+m-O*)lg*m&lg*j$
lK[["l07Hsl07Hrkih6oki_-lkND$kk2tggk2tdejlPUcjlGL`jQ,C_j5]1[j5].Yio8tWio/kTiSibS
i8EPOi8EPNhr!>Khr!;IhVR,Gh;-oCh;-oBgt^]?gt^Z=gY:K;gY1B8g=k97g=b04g"G'3f\"j/f\"j.
f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC2mqe'ldpe'c[mdaHRldaHOjdF$@hdF$=fd*U.dd*U.d
~>
<~_o'C0_ns:-_SO()_8*k%^qd_"^V@Ls^:q=p]tM+l]Y(ni]=Y\e]"5Ja]",A^\[]/Z\@B#W\$rfS[^NWP
[C*EM['[3IZa7!EZa-mBZE^[>Z*CO;Yct@8YHP.4Y-+q1Xf\_-XfSV*XK/D&X/i8#WiE(uWMukrW2QYn
Vl-GjVl$>gVP^2dV5:#aUnjf^USFTZUS=KWU7n9STqS-PTV.sMT:_aJSt;OFSt2FCSXl=AS=H+>S"#n:
S!oe7R[TY4R@0J1R$a8.R$X/+Q^=#(QBmi&Q'IW"Q'@MtPa%DrPEV2oPEM)lP*1ujOcbcgOcYZdOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
777.927 630.893 mo
547.559 715.2 li
634.559 715.2 li
816.141 645.14 li
802.559 621.905 li
777.927 630.893 li
cp
level3{
gsave
clp
[4.33515e-009 -96.3379 96.3379 4.33515e-009 681.85 718.571 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.33515e-009 -96.3379 96.3379 4.33515e-009 681.85 718.571 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
97.0065 665.2 mo
167.141 638.14 li
153.559 624.571 li
128.927 623.893 li
16.0557 665.2 li
97.0065 665.2 li
cp
level3{
gsave
clp
[1.79998e-009 -40 40 1.79998e-009 91.5982 667.571 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79998e-009 -40 40 1.79998e-009 91.5982 667.571 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1.22096 757.567 mo
143.141 695.14 li
141.541 678.487 li
104.927 680.893 li
1.58895 721.571 li
1.22096 757.567 li
cp
level3{
gsave
clp
[2.16176e-009 -48.0399 48.0399 2.16176e-009 72.1808 740.954 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.16176e-009 -48.0399 48.0399 2.16176e-009 72.1808 740.954 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
548.432 792.571 mo
654.559 749.071 li
644.559 736.071 li
650.559 698.571 li
593.559 698.571 li
570.186 708.071 li
562.657 708.071 li
355.657 792.571 li
548.432 792.571 li
cp
level3{
gsave
clp
[4.09717e-009 -91.0494 91.0494 4.09717e-009 505.108 790.571 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.09717e-009 -91.0494 91.0494 4.09717e-009 505.108 790.571 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
293.559 693.905 mo
267.622 703.405 li
260.093 703.405 li
32.2045 787.2 li
243.886 787.2 li
314.65 760.678 li
349.559 740.571 li
350.559 693.905 li
293.559 693.905 li
cp
level3{
gsave
clp
[25.0086 -92.6638 92.6638 4.16981e-009 184.499 787.536 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.0086 -92.6638 92.6638 4.16981e-009 184.499 787.536 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
446.559 687.905 mo
420.622 697.405 li
413.093 697.405 li
185.204 781.2 li
335.559 781.2 li
517.141 711.14 li
503.559 687.905 li
446.559 687.905 li
cp
level3{
gsave
clp
[25.0086 -92.6638 92.6638 4.16981e-009 341.628 781.536 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.0086 -92.6638 92.6638 4.16981e-009 341.628 781.536 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
765.764 812.2 mo
877.559 758.571 li
813.559 758.571 li
701.764 812.2 li
765.764 812.2 li
cp
806.408 812.2 mo
913.359 759.571 li
941.812 759.571 li
976.359 742.571 li
1059.56 742.571 li
1016.88 763.571 li
1063.56 763.571 li
964.737 812.2 li
806.408 812.2 li
cp
level3{
gsave
clp
[2.97541e-009 -66.1211 66.1211 2.97541e-009 882.661 805.571 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.97541e-009 -66.1211 66.1211 2.97541e-009 882.661 805.571 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
167.253 632.351 mo
167.253 639.777 158.323 645.044 145.513 645.044 cv
132.703 645.044 120.864 640.151 120.864 632.351 cv
120.864 627.361 131.765 623.316 144.058 623.316 cv
156.352 623.316 167.253 627.361 167.253 632.351 cv
cp
.498039 .152941 0 rgb
f
166.318 631.186 mo
166.318 636.979 157.672 640.91 145.379 640.91 cv
133.085 640.91 121.799 636.979 121.799 631.186 cv
121.799 625.393 131.765 620.698 144.058 620.698 cv
156.352 620.698 166.318 625.393 166.318 631.186 cv
cp
.909804 .317647 .0196078 rgb
f
140.444 570.66 mo
140.444 628.351 li
140.444 631.173 147.809 631.011 147.809 628.351 cv
147.809 570.66 li
140.444 570.66 li
cp
.878431 .878431 .878431 rgb
f
138.753 568.454 mo
138.753 596.927 li
138.753 601.044 149.499 600.808 149.499 596.927 cv
149.499 568.454 li
138.753 568.454 li
cp
.607843 .603922 .603922 rgb
f
194.798 554.771 mo
194.798 571.015 172.081 575.517 144.058 575.517 cv
116.035 575.517 93.3182 571.834 93.3182 554.771 cv
93.3182 543.855 117.165 535.006 144.058 535.006 cv
170.951 535.006 194.798 543.855 194.798 554.771 cv
cp
.498039 .152941 0 rgb
f
192.753 554.771 mo
192.753 565.686 170.951 570.606 144.058 570.606 cv
117.165 570.606 95.3642 565.686 95.3642 554.771 cv
95.3642 543.855 117.165 535.006 144.058 535.006 cv
170.951 535.006 192.753 543.855 192.753 554.771 cv
cp
.909804 .317647 .0196078 rgb
f
194.798 470.204 mo
194.798 522.549 172.081 537.052 144.058 537.052 cv
116.035 537.052 93.3182 525.186 93.3182 470.204 cv
93.3182 435.032 117.165 406.519 144.058 406.519 cv
170.951 406.519 194.798 435.032 194.798 470.204 cv
cp
.498039 .152941 0 rgb
f
192.753 470.972 mo
192.753 508.486 170.951 525.395 144.058 525.395 cv
117.165 525.395 95.3642 508.486 95.3642 470.972 cv
95.3642 433.457 117.165 403.046 144.058 403.046 cv
170.951 403.046 192.753 433.457 192.753 470.972 cv
cp
.909804 .317647 .0196078 rgb
f
900.015 506.531 mo
892.263 506.531 li
892.263 568.209 li
900.015 568.209 li
900.015 506.531 li
cp
.0784314 .172549 .176471 rgb
f
934.511 562.499 mo
934.511 564.833 932.62 566.724 930.286 566.724 cv
858.181 566.724 li
855.848 566.724 853.956 564.833 853.956 562.499 cv
853.956 556.584 li
853.956 554.251 855.848 552.359 858.181 552.359 cv
930.286 552.359 li
932.62 552.359 934.511 554.251 934.511 556.584 cv
934.511 562.499 li
cp
f
861.256 575.492 mo
862.034 572.088 867.096 569.374 872.557 569.374 cv
917.104 569.374 li
922.565 569.374 927.628 572.088 928.406 575.492 cv
946.673 653.855 li
951.433 653.855 li
932.409 575.189 li
931.191 570.153 924.268 566.303 916.876 566.303 cv
872.786 566.303 li
865.394 566.303 858.471 570.153 857.253 575.189 cv
838.229 653.855 li
843.509 653.855 li
861.256 575.492 li
cp
f
938.425 511.222 mo
936.637 522.777 923.661 531.463 909.311 531.463 cv
881.362 531.463 li
867.012 531.463 854.036 522.777 852.248 511.222 cv
845.084 464.938 li
842.412 447.669 856.129 432.261 875.992 432.261 cv
914.681 432.261 li
934.544 432.261 948.261 447.669 945.589 464.938 cv
938.425 511.222 li
cp
.0392157 .0980392 .0980392 rgb
f
937.755 507.623 mo
935.995 518.536 923.22 526.74 909.094 526.74 cv
881.579 526.74 li
867.453 526.74 854.678 518.536 852.918 507.623 cv
845.866 463.91 li
843.235 447.6 856.739 433.049 876.293 433.049 cv
914.38 433.049 li
933.934 433.049 947.438 447.6 944.807 463.91 cv
937.755 507.623 li
cp
.0784314 .172549 .176471 rgb
f
853.956 558.86 mo
853.956 562.499 li
853.956 564.833 855.848 566.724 858.181 566.724 cv
930.286 566.724 li
932.62 566.724 934.511 564.833 934.511 562.499 cv
934.511 558.86 li
853.956 558.86 li
cp
.0392157 .0980392 .0980392 rgb
f
862.336 575.648 mo
862.706 572.256 867.401 569.494 872.802 569.494 cv
916.859 569.494 li
922.261 569.494 926.956 572.256 927.326 575.648 cv
934.209 636.177 li
937.824 636.177 li
931.239 575.349 li
930.692 570.292 924.268 566.303 916.876 566.303 cv
872.786 566.303 li
865.394 566.303 858.97 570.292 858.422 575.349 cv
851.837 636.177 li
855.848 636.177 li
862.336 575.648 li
cp
.0784314 .172549 .176471 rgb
f
1091.32 506.531 mo
1083.57 506.531 li
1083.57 568.209 li
1091.32 568.209 li
1091.32 506.531 li
cp
f
1125.82 562.499 mo
1125.82 564.833 1123.93 566.724 1121.6 566.724 cv
1049.49 566.724 li
1047.16 566.724 1045.27 564.833 1045.27 562.499 cv
1045.27 556.584 li
1045.27 554.251 1047.16 552.359 1049.49 552.359 cv
1121.6 552.359 li
1123.93 552.359 1125.82 554.251 1125.82 556.584 cv
1125.82 562.499 li
cp
.909804 .317647 .0196078 rgb
f
1052.57 575.492 mo
1053.34 572.088 1058.41 569.374 1063.87 569.374 cv
1108.41 569.374 li
1113.87 569.374 1118.94 572.088 1119.72 575.492 cv
1137.98 653.855 li
1142.74 653.855 li
1123.72 575.189 li
1122.5 570.153 1115.58 566.303 1108.19 566.303 cv
1064.1 566.303 li
1056.7 566.303 1049.78 570.153 1048.56 575.189 cv
1029.54 653.855 li
1034.82 653.855 li
1052.57 575.492 li
cp
.0784314 .172549 .176471 rgb
f
1129.73 511.222 mo
1127.95 522.777 1114.97 531.463 1100.62 531.463 cv
1072.67 531.463 li
1058.32 531.463 1045.35 522.777 1043.56 511.222 cv
1036.39 464.938 li
1033.72 447.669 1047.44 432.261 1067.3 432.261 cv
1105.99 432.261 li
1125.85 432.261 1139.57 447.669 1136.9 464.938 cv
1129.73 511.222 li
cp
.498039 .152941 0 rgb
f
1129.06 507.623 mo
1127.3 518.536 1114.53 526.74 1100.4 526.74 cv
1072.89 526.74 li
1058.76 526.74 1045.99 518.536 1044.23 507.623 cv
1037.18 463.91 li
1034.54 447.6 1048.05 433.049 1067.6 433.049 cv
1105.69 433.049 li
1125.24 433.049 1138.75 447.6 1136.12 463.91 cv
1129.06 507.623 li
cp
.909804 .317647 .0196078 rgb
f
1045.27 558.86 mo
1045.27 562.499 li
1045.27 564.833 1047.16 566.724 1049.49 566.724 cv
1121.6 566.724 li
1123.93 566.724 1125.82 564.833 1125.82 562.499 cv
1125.82 558.86 li
1045.27 558.86 li
cp
.498039 .152941 0 rgb
f
1053.65 575.648 mo
1054.02 572.256 1058.71 569.494 1064.11 569.494 cv
1108.17 569.494 li
1113.57 569.494 1118.27 572.256 1118.64 575.648 cv
1125.52 636.177 li
1129.13 636.177 li
1122.55 575.349 li
1122 570.292 1115.58 566.303 1108.19 566.303 cv
1064.1 566.303 li
1056.7 566.303 1050.28 570.292 1049.73 575.349 cv
1043.15 636.177 li
1047.16 636.177 li
1053.65 575.648 li
cp
.0784314 .172549 .176471 rgb
f
276.848 503.596 mo
276.609 505.89 274.824 507.749 272.852 507.749 cv
175.333 507.749 li
172.955 507.749 171.232 505.696 171.496 503.162 cv
178.535 435.496 li
178.798 432.962 180.934 431.042 183.296 431.206 cv
280.115 437.931 li
282.072 438.067 283.46 440.037 283.221 442.331 cv
276.848 503.596 li
cp
.0784314 0 .00392157 rgb
f
278.088 503.596 mo
277.849 505.89 276.063 507.749 274.092 507.749 cv
176.573 507.749 li
174.194 507.749 172.472 505.696 172.736 503.162 cv
179.774 435.496 li
180.038 432.962 182.174 431.042 184.535 431.206 cv
281.355 437.931 li
283.312 438.067 284.699 440.037 284.461 442.331 cv
278.088 503.596 li
cp
.878431 .878431 .878431 rgb
f
182.305 435.008 mo
182.305 435.008 191.685 465.6 174.2 505.766 cv
173.611 504.278 174.782 490.642 176.458 474.526 cv
180.518 435.496 180.504 437.771 182.305 435.008 cv
cp
1 1 1 rgb
f
280.571 438.987 mo
280.571 438.987 236.469 443.45 183.388 432.541 cv
185.539 431.94 205.998 433.568 228.465 435.117 cv
250.56 436.64 274.176 438.492 280.571 438.987 cv
cp
f
245.483 467.864 mo
245.026 472.26 241.772 476.402 237.582 477.244 cv
232.475 478.27 227.968 474.17 228.623 467.864 cv
229.279 461.558 234.639 457.458 239.533 458.484 cv
243.548 459.325 245.94 463.468 245.483 467.864 cv
cp
f
242.384 483.699 mo
228.158 482.991 li
227.787 482.991 226.112 505.843 214.496 511.604 cv
194.9 511.604 li
194.216 511.604 193.661 512.159 193.661 512.843 cv
193.677 513.03 li
239.533 513.03 li
243.686 513.03 242.806 483.699 242.384 483.699 cv
cp
f
242.508 483.699 mo
228.658 482.908 li
228.287 482.908 227.218 506.634 214.573 512.212 cv
194.614 512.336 li
193.93 512.336 193.661 512.159 193.661 512.843 cv
193.677 513.03 li
239.657 513.03 li
243.81 513.03 242.93 483.699 242.508 483.699 cv
cp
.8 .8 .8 rgb
f
50.7421 503.596 mo
50.9808 505.89 52.7665 507.749 54.7375 507.749 cv
152.257 507.749 li
154.635 507.749 156.358 505.696 156.094 503.162 cv
149.055 435.496 li
148.792 432.962 146.656 431.042 144.294 431.206 cv
47.4748 437.931 li
45.5179 438.067 44.1305 440.037 44.3691 442.331 cv
50.7421 503.596 li
cp
.0784314 0 .00392157 rgb
f
49.5024 503.596 mo
49.7411 505.89 51.5268 507.749 53.4978 507.749 cv
151.017 507.749 li
153.396 507.749 155.118 505.696 154.854 503.162 cv
147.816 435.496 li
147.552 432.962 145.416 431.042 143.055 431.206 cv
46.2351 437.931 li
44.2782 438.067 42.8908 440.037 43.1294 442.331 cv
49.5024 503.596 li
cp
.878431 .878431 .878431 rgb
f
145.285 435.008 mo
145.285 435.008 135.905 465.6 153.39 505.766 cv
153.979 504.278 152.808 490.642 151.132 474.526 cv
147.072 435.496 147.086 437.771 145.285 435.008 cv
cp
1 1 1 rgb
f
47.0193 438.987 mo
47.0193 438.987 91.1209 443.45 144.202 432.541 cv
142.051 431.94 121.592 433.568 99.1246 435.117 cv
77.0302 436.64 53.4141 438.492 47.0193 438.987 cv
cp
f
82.1073 467.864 mo
82.5645 472.26 85.8176 476.402 90.008 477.244 cv
95.1148 478.27 99.6224 474.17 98.9666 467.864 cv
98.3109 461.558 92.9505 457.458 88.0571 458.484 cv
84.0417 459.325 81.6502 463.468 82.1073 467.864 cv
cp
f
85.2061 483.699 mo
99.4322 482.991 li
99.8035 482.991 101.478 505.843 113.094 511.604 cv
132.69 511.604 li
133.374 511.604 133.929 512.159 133.929 512.843 cv
133.913 513.03 li
88.0572 513.03 li
83.9042 513.03 84.7842 483.699 85.2061 483.699 cv
cp
f
85.082 483.699 mo
98.9315 482.908 li
99.3028 482.908 100.372 506.634 113.017 512.212 cv
132.976 512.336 li
133.66 512.336 133.929 512.159 133.929 512.843 cv
133.913 513.03 li
87.9331 513.03 li
83.7801 513.03 84.66 483.699 85.082 483.699 cv
cp
.8 .8 .8 rgb
f
798.27 606.142 mo
796.171 617.658 li
807.203 620.517 li
810.095 608.697 li
798.27 606.142 li
cp
.870588 .607843 .439216 rgb
f
795.919 614.889 mo
787.233 634.639 li
787.233 634.639 789.238 645.372 804.662 647.156 cv
819.511 648.753 812.404 638.577 809.079 635.914 cv
805.717 633.221 807.4 621.061 807.4 621.061 cv
795.919 614.889 li
cp
.807843 .807843 .807843 rgb
f
795.919 614.889 mo
788.875 636.032 li
788.875 636.032 794.163 645.383 807.474 645.383 cv
820.538 645.383 808.437 633.506 808.437 633.506 cv
807.887 617.722 li
795.919 614.889 li
cp
.937255 .937255 .937255 rgb
f
797.034 618.86 mo
807.4 621.061 li
806.867 623.244 li
796.584 622.054 li
797.034 618.86 li
cp
.807843 .807843 .807843 rgb
f
796.922 624.563 mo
807.357 625.129 li
806.824 627.312 li
796.474 627.708 li
796.922 624.563 li
cp
f
797.307 629.517 mo
807.971 629.147 li
807.437 631.33 li
796.866 632.633 li
797.307 629.517 li
cp
f
779.819 610.748 mo
780.512 622.432 li
791.907 622.593 li
791.913 610.424 li
779.819 610.748 li
cp
.870588 .607843 .439216 rgb
f
779.067 621.47 mo
775.857 641.049 li
775.857 641.049 780.351 651 795.758 649.074 cv
809.561 647.148 798.968 639.124 798.968 639.124 cv
792.228 623.074 li
779.067 621.47 li
cp
.878431 .878431 .878431 rgb
f
779.067 621.47 mo
777.783 642.012 li
777.783 642.012 783.882 646.827 795.758 645.543 cv
807.635 644.259 798.647 638.161 798.647 638.161 cv
792.228 621.47 li
779.067 621.47 li
cp
1 1 1 rgb
f
781.635 623.395 mo
792.228 623.074 li
792.228 625.321 li
781.956 626.605 li
781.635 623.395 li
cp
.878431 .878431 .878431 rgb
f
782.879 628.963 mo
793.151 627.037 li
793.151 629.284 li
783.19 632.124 li
782.879 628.963 li
cp
f
784.429 633.683 mo
794.7 630.794 li
794.7 633.041 li
784.74 636.815 li
784.429 633.683 li
cp
f
835.881 522.527 mo
834.389 512.081 835.458 479.467 832.029 455.121 cv
830.725 445.862 829.203 430.598 826.248 420.453 cv
821.016 402.49 785.767 395.283 777.141 408.418 cv
755.957 440.677 767.005 462.455 767.005 462.455 cv
777.417 536.037 li
777.417 536.037 774.034 561.255 774.625 570.335 cv
775.318 580.961 780.054 614.709 780.054 614.709 cv
792.067 614.247 li
795.264 545.758 li
801.042 461.5 li
801.042 461.5 802.659 484.491 814.696 524.453 cv
816.93 531.869 813.88 539.148 813.88 539.148 cv
813.88 539.148 808.069 550.188 806.301 553.95 cv
800.252 566.822 800.252 597.717 797.756 608.964 cv
797.756 608.964 808.673 610.811 809.541 611.352 cv
814.548 597.458 828.255 555.517 829.622 551.415 cv
831.255 546.517 837.514 533.957 835.881 522.527 cv
cp
.0470588 .192157 .266667 rgb
f
835.881 522.527 mo
834.389 512.081 835.458 479.467 832.029 455.121 cv
830.804 446.417 829.384 432.411 826.764 422.335 cv
823.567 427.834 802.211 456.055 799.931 459.695 cv
796.656 464.922 791.298 516.37 791.826 527.916 cv
792.013 532.006 794.6 537.383 792.87 541.224 cv
791.966 543.23 789.981 547.002 783.24 548.286 cv
784.249 552.496 787.613 559.921 788.052 564.277 cv
788.56 569.319 788.818 574.388 788.981 579.452 cv
789.287 588.95 789.976 599.663 786.698 608.749 cv
785.987 610.721 785.172 612.651 784.279 614.547 cv
792.067 614.247 li
795.264 545.758 li
801.042 461.5 li
801.042 461.5 802.659 484.491 814.696 524.453 cv
816.93 531.869 813.88 539.148 813.88 539.148 cv
813.88 539.148 808.069 550.188 806.301 553.95 cv
800.252 566.822 800.252 597.717 797.756 608.964 cv
797.756 608.964 808.673 610.811 809.541 611.352 cv
814.548 597.458 828.255 555.517 829.622 551.415 cv
831.255 546.517 837.514 533.957 835.881 522.527 cv
cp
.054902 .137255 .188235 rgb
f
764.782 379.11 mo
768.272 368.64 771.945 346.046 772.313 340.352 cv
765.7 335.576 757.434 334.291 757.434 334.291 cv
757.434 334.291 755.781 349.904 755.597 357.986 cv
755.414 366.068 755.414 383.702 764.782 379.11 cv
cp
.729412 .47451 .337255 rgb
f
831.026 289.013 mo
831.026 319.193 815.649 343.66 796.681 343.66 cv
777.713 343.66 762.336 319.193 762.336 289.013 cv
762.336 258.832 777.713 234.366 796.681 234.366 cv
815.649 234.366 831.026 258.832 831.026 289.013 cv
.054902 .137255 .188235 rgb
f
769.253 318.666 mo
767.234 319.41 759.059 319.492 756.579 340.157 cv
764.018 343.739 776.693 346.219 776.693 346.219 cv
776.693 346.219 774.488 316.737 769.253 318.666 cv
cp
.847059 .247059 .419608 rgb
f
770.613 349.919 mo
821.454 350.989 li
821.454 360.172 li
815.631 368.664 810.363 390.844 825.285 419.25 cv
825.285 419.25 817.585 425.029 797.363 425.51 cv
780.902 425.902 767.717 420.765 767.717 420.765 cv
792.549 375.437 770.613 349.919 770.613 349.919 cv
cp
f
817.458 366.169 mo
779.63 366.169 li
758.453 356.569 781.086 337.644 768.641 318.977 cv
785.568 312.846 li
806.876 312.456 li
806.876 312.456 820.584 315.844 829.159 319.595 cv
817.615 341.297 836.068 357.576 817.458 366.169 cv
cp
.972549 .360784 .517647 rgb
f
806.353 297.987 mo
805.912 312.456 li
808.628 313.161 li
797.709 347.012 li
784.604 312.846 li
787.976 311.38 li
787.474 297.987 li
806.353 297.987 li
cp
.870588 .607843 .439216 rgb
f
806.353 297.987 mo
805.912 312.456 li
808.628 313.161 li
797.709 347.012 li
804.333 320.048 li
796.942 316.969 li
786.768 301.771 li
787.474 297.987 li
806.353 297.987 li
cp
.729412 .47451 .337255 rgb
f
771.003 271.078 mo
771.685 270.948 772.389 271.128 773.068 271.559 cv
773.387 256.813 775.762 239.221 795.851 239.115 cv
814.989 239.013 818.987 257.584 819.391 272.402 cv
820.136 271.849 821.035 271.302 821.798 271.439 cv
824.232 271.875 821.104 288.946 816.229 283.645 cv
816.769 295.23 799.705 309.032 796.218 308.639 cv
792.313 308.2 775.371 296.716 775.791 283.615 cv
771.016 287.938 768.574 271.539 771.003 271.078 cv
.870588 .607843 .439216 rgb
f
782.002 269.119 mo
781.941 269.569 784.701 269.119 788.022 269.262 cv
791.343 269.405 793.923 270.086 794.028 269.638 cv
794.222 268.818 792.066 267.366 788.745 267.223 cv
785.424 267.079 782.121 268.242 782.002 269.119 cv
cp
.729412 .47451 .337255 rgb
f
782.069 268.76 mo
781.887 269.641 784.942 268.401 788.263 268.544 cv
791.584 268.687 793.914 270.16 794.095 269.278 cv
794.276 268.397 791.879 266.848 788.558 266.704 cv
785.237 266.561 782.25 267.878 782.069 268.76 cv
cp
.2 .215686 .227451 rgb
f
810.74 269.039 mo
810.801 269.488 808.04 269.038 804.719 269.182 cv
801.398 269.325 798.819 270.005 798.713 269.557 cv
798.52 268.738 800.676 267.285 803.997 267.142 cv
807.318 266.999 810.62 268.162 810.74 269.039 cv
cp
.729412 .47451 .337255 rgb
f
810.673 268.68 mo
810.854 269.561 807.799 268.32 804.478 268.464 cv
801.157 268.607 798.828 270.08 798.647 269.198 cv
798.465 268.316 800.863 266.767 804.184 266.624 cv
807.505 266.481 810.492 267.798 810.673 268.68 cv
cp
.2 .215686 .227451 rgb
f
801.903 279.027 mo
801.909 280.208 802.872 281.161 804.053 281.155 cv
805.234 281.148 806.187 280.186 806.181 279.004 cv
806.174 277.823 805.212 276.871 804.03 276.877 cv
802.849 276.883 801.896 277.846 801.903 279.027 cv
.184314 .0117647 0 rgb
f
786.048 279.471 mo
786.054 280.652 787.017 281.604 788.198 281.598 cv
789.379 281.592 790.332 280.629 790.326 279.448 cv
790.32 278.267 789.357 277.314 788.175 277.32 cv
786.994 277.327 786.042 278.289 786.048 279.471 cv
f
802.474 278.067 mo
802.557 278.437 802.925 278.67 803.295 278.587 cv
803.666 278.504 803.898 278.136 803.815 277.766 cv
803.732 277.395 803.364 277.163 802.994 277.245 cv
802.623 277.329 802.391 277.696 802.474 278.067 cv
1 1 1 rgb
f
786.448 278.61 mo
786.531 278.981 786.899 279.213 787.269 279.131 cv
787.64 279.047 787.873 278.679 787.79 278.309 cv
787.707 277.939 787.339 277.706 786.968 277.789 cv
786.598 277.872 786.365 278.24 786.448 278.61 cv
f
798.393 288.937 mo
798.227 289.822 797.3 290.503 796.179 290.509 cv
795.057 290.515 794.124 289.844 793.948 288.96 cv
798.393 288.937 li
cp
.729412 .47451 .337255 rgb
f
803.353 294.906 mo
801.051 295.112 800.013 291.626 796.071 293.378 cv
792.396 291.493 791.955 294.683 789.664 294.752 cv
794.211 296.658 799.604 296.072 803.353 294.906 cv
cp
f
800.155 297.839 mo
795.7 299.506 792.996 298.087 790.733 295.943 cv
796.631 302.423 796.627 300.473 800.155 297.839 cv
cp
f
788.697 237.495 mo
788.697 237.495 770.401 240.625 771.604 270.957 cv
775.095 270.837 775.755 281.431 775.755 281.431 cv
775.755 281.431 776.357 259.403 786.949 252.662 cv
797.541 245.922 788.697 237.495 788.697 237.495 cv
.054902 .137255 .188235 rgb
f
793.12 281.293 mo
792.807 281.293 li
793.12 281.293 li
.909804 .317647 .0196078 rgb
f
776.578 275.548 mo
776.091 274.596 791.914 275.483 792.497 276.639 cv
793.49 279.125 792.651 281.973 791.586 283.58 cv
790.352 285.443 781.55 284.563 780.677 284.312 cv
778.283 283.624 777.527 279.473 776.578 275.548 cv
799.445 276.639 mo
800.028 275.483 815.851 274.596 815.365 275.548 cv
814.416 279.473 813.659 283.624 811.266 284.312 cv
810.392 284.563 801.59 285.443 800.356 283.58 cv
799.291 281.973 798.452 279.125 799.445 276.639 cv
775.717 275.937 mo
775.868 276.602 777.2 281.473 778.409 283.602 cv
779.619 285.732 785.942 285.532 789.142 285.332 cv
792.309 285.135 792.795 282.943 793.526 281.073 cv
794.497 278.59 797.387 278.58 798.416 281.073 cv
799.183 282.933 799.633 285.135 802.8 285.332 cv
806 285.532 812.324 285.732 813.533 283.602 cv
814.742 281.473 816.074 276.602 816.225 275.937 cv
817.659 275.937 818.674 274.001 815.65 273.886 cv
810.083 273.676 798.101 274.277 797.464 276.133 cv
797.141 277.074 794.604 276.971 794.236 276.051 cv
793.503 274.22 782.595 273.962 776.293 273.886 cv
773.266 273.85 774.283 275.937 775.717 275.937 cv
0 0 0 rgb
f
gsave
805.694 284.74 mo
803.313 284.74 800.952 284.48 800.356 283.58 cv
799.624 282.475 798.999 280.784 799.002 279.027 cv
799.004 278.228 799.135 277.416 799.445 276.639 cv
799.856 275.826 807.811 275.145 812.321 275.145 cv
814.124 275.145 815.376 275.254 815.376 275.507 cv
815.376 275.52 815.372 275.534 815.365 275.548 cv
814.416 279.473 813.659 283.624 811.266 284.312 cv
810.814 284.442 808.243 284.74 805.694 284.74 cv
812.322 275.637 mo
810.02 275.637 807.267 275.795 804.936 276.02 cv
806.806 279.552 813.922 275.375 812.618 282.452 cv
813.468 281.025 814.007 278.755 814.533 276.529 cv
814.594 276.271 814.655 276.012 814.717 275.755 cv
814.399 275.703 813.718 275.637 812.322 275.637 cv
804.042 276.877 mo
804.038 276.877 804.034 276.877 804.03 276.877 cv
802.849 276.883 801.896 277.846 801.903 279.027 cv
801.909 280.205 802.866 281.155 804.042 281.155 cv
804.045 281.155 804.049 281.155 804.053 281.155 cv
805.234 281.148 806.187 280.186 806.181 279.004 cv
806.174 277.827 805.218 276.877 804.042 276.877 cv
clp
798.999 275.145 mo
815.376 275.145 li
815.376 284.74 li
798.999 284.74 li
cp
.894118 .803922 .721569 rgb
f
grestore
804.042 281.155 mo
802.866 281.155 801.909 280.205 801.903 279.027 cv
801.896 277.846 802.849 276.883 804.03 276.877 cv
804.034 276.877 804.038 276.877 804.042 276.877 cv
805.218 276.877 806.174 277.827 806.181 279.004 cv
806.187 280.186 805.234 281.148 804.053 281.155 cv
804.049 281.155 804.045 281.155 804.042 281.155 cv
803.145 277.229 mo
803.095 277.229 803.044 277.234 802.994 277.245 cv
802.623 277.329 802.391 277.696 802.474 278.067 cv
802.546 278.387 802.829 278.604 803.144 278.604 cv
803.194 278.604 803.244 278.598 803.295 278.587 cv
803.666 278.504 803.898 278.136 803.815 277.766 cv
803.743 277.446 803.46 277.229 803.145 277.229 cv
.54902 .505882 .501961 rgb
f
803.144 278.604 mo
802.829 278.604 802.546 278.387 802.474 278.067 cv
802.391 277.696 802.623 277.329 802.994 277.245 cv
803.044 277.234 803.095 277.229 803.145 277.229 cv
803.46 277.229 803.743 277.446 803.815 277.766 cv
803.898 278.136 803.666 278.504 803.295 278.587 cv
803.244 278.598 803.194 278.604 803.144 278.604 cv
.956863 .996078 1 rgb
f
786.248 284.74 mo
783.699 284.74 781.128 284.442 780.677 284.312 cv
778.283 283.624 777.527 279.473 776.578 275.548 cv
776.57 275.534 776.567 275.52 776.567 275.507 cv
776.566 275.254 777.819 275.145 779.621 275.145 cv
784.131 275.145 792.087 275.826 792.497 276.639 cv
792.807 277.416 792.939 278.228 792.94 279.027 cv
792.944 280.784 792.318 282.475 791.586 283.58 cv
790.99 284.48 788.629 284.74 786.248 284.74 cv
790.325 279.417 mo
791.261 280.085 791.646 281.244 790.948 283.474 cv
791.074 283.342 li
792.142 281.728 792.826 279.112 791.97 276.871 cv
791.255 276.417 785.384 275.662 782.225 275.662 cv
782.014 275.662 781.815 275.665 781.63 275.672 cv
782.518 277.489 784.467 277.971 786.384 278.307 cv
786.169 278.643 786.046 279.042 786.048 279.471 cv
786.054 280.648 787.011 281.598 788.187 281.598 cv
788.191 281.598 788.194 281.598 788.198 281.598 cv
789.379 281.592 790.332 280.629 790.326 279.448 cv
790.326 279.438 790.325 279.427 790.325 279.417 cv
.894118 .803922 .721569 rgb
f
788.187 281.598 mo
787.011 281.598 786.054 280.648 786.048 279.471 cv
786.046 279.042 786.169 278.643 786.384 278.307 cv
786.405 278.311 786.426 278.314 786.446 278.318 cv
786.426 278.412 786.426 278.511 786.448 278.61 cv
786.52 278.93 786.804 279.147 787.118 279.147 cv
787.168 279.147 787.219 279.142 787.269 279.131 cv
787.558 279.066 787.763 278.828 787.8 278.551 cv
788.787 278.734 789.685 278.961 790.325 279.417 cv
790.325 279.427 790.326 279.438 790.326 279.448 cv
790.332 280.629 789.379 281.592 788.198 281.598 cv
788.194 281.598 788.191 281.598 788.187 281.598 cv
.54902 .505882 .501961 rgb
f
787.118 279.147 mo
786.804 279.147 786.52 278.93 786.448 278.61 cv
786.426 278.511 786.426 278.412 786.446 278.318 cv
786.905 278.398 787.361 278.47 787.8 278.551 cv
787.763 278.828 787.558 279.066 787.269 279.131 cv
787.219 279.142 787.168 279.147 787.118 279.147 cv
.956863 .996078 1 rgb
f
812.618 282.452 mo
813.922 275.375 806.806 279.552 804.936 276.02 cv
807.267 275.795 810.02 275.637 812.322 275.637 cv
813.718 275.637 814.399 275.703 814.717 275.755 cv
814.655 276.012 814.594 276.271 814.533 276.529 cv
814.007 278.755 813.468 281.025 812.618 282.452 cv
.905882 .901961 .862745 rgb
f
790.948 283.474 mo
791.646 281.244 791.261 280.085 790.325 279.417 cv
790.303 278.254 789.352 277.32 788.187 277.32 cv
788.183 277.32 788.179 277.32 788.175 277.32 cv
787.618 277.323 787.111 277.539 786.732 277.891 cv
786.648 277.948 786.578 278.023 786.527 278.11 cv
786.476 278.173 786.428 278.239 786.384 278.307 cv
784.467 277.971 782.518 277.489 781.63 275.672 cv
781.815 275.665 782.014 275.662 782.225 275.662 cv
785.384 275.662 791.255 276.417 791.97 276.871 cv
792.826 279.112 792.142 281.728 791.074 283.342 cv
790.948 283.474 li
f
790.325 279.417 mo
789.685 278.961 788.787 278.734 787.8 278.551 cv
787.811 278.473 787.808 278.391 787.79 278.309 cv
787.718 277.989 787.434 277.772 787.12 277.772 cv
787.07 277.772 787.019 277.778 786.968 277.789 cv
786.881 277.809 786.802 277.844 786.732 277.891 cv
787.111 277.539 787.618 277.323 788.175 277.32 cv
788.179 277.32 788.183 277.32 788.187 277.32 cv
789.352 277.32 790.303 278.254 790.325 279.417 cv
786.446 278.318 mo
786.426 278.314 786.405 278.311 786.384 278.307 cv
786.428 278.239 786.476 278.173 786.527 278.11 cv
786.489 278.174 786.462 278.244 786.446 278.318 cv
.733333 .752941 .752941 rgb
f
787.8 278.551 mo
787.361 278.47 786.905 278.398 786.446 278.318 cv
786.462 278.244 786.489 278.174 786.527 278.11 cv
786.578 278.023 786.648 277.948 786.732 277.891 cv
786.802 277.844 786.881 277.809 786.968 277.789 cv
787.019 277.778 787.07 277.772 787.12 277.772 cv
787.434 277.772 787.718 277.989 787.79 278.309 cv
787.808 278.391 787.811 278.473 787.8 278.551 cv
.933333 .996078 1 rgb
f
780.512 248.087 mo
781.715 252.421 787.252 263.495 802.9 272.883 cv
818.548 282.272 812.891 300.086 810.724 308.753 cv
815.659 307.068 828.298 300.809 827.476 275.167 cv
827.067 262.414 814.123 222.648 786.049 238.699 cv
783.431 240.195 780.512 248.087 780.512 248.087 cv
cp
.054902 .137255 .188235 rgb
f
773.852 361.041 mo
774.203 362.308 773.505 362.8 772.293 362.141 cv
742.448 345.907 li
741.236 345.248 739.969 343.686 739.618 342.419 cv
727.056 297.073 li
726.705 295.806 727.403 295.313 728.615 295.972 cv
758.46 312.206 li
759.672 312.865 760.939 314.427 761.29 315.694 cv
773.852 361.041 li
cp
.0313726 .0235294 .0392157 rgb
f
773.643 361.196 mo
773.994 362.463 773.296 362.956 772.084 362.297 cv
742.239 346.063 li
741.027 345.404 739.76 343.842 739.409 342.575 cv
726.847 297.228 li
726.497 295.961 727.195 295.469 728.406 296.128 cv
758.252 312.362 li
759.464 313.021 760.731 314.583 761.081 315.85 cv
773.643 361.196 li
cp
.788235 .776471 .8 rgb
f
773.643 361.196 mo
761.081 315.85 li
760.73 314.583 759.464 313.021 758.252 312.362 cv
728.406 296.128 li
727.644 295.713 727.086 295.756 726.864 296.159 cv
727.079 296.194 727.322 296.277 727.596 296.425 cv
757.441 312.659 li
758.653 313.318 759.92 314.88 760.271 316.147 cv
772.832 361.494 li
772.963 361.964 772.947 362.326 772.816 362.564 cv
773.553 362.686 773.915 362.177 773.643 361.196 cv
cp
.894118 .882353 .917647 rgb
f
734.106 312.983 mo
732.086 309.217 729.009 305.406 727.356 304.235 cv
726.29 303.48 728.044 302.187 729.56 302.719 cv
732.108 303.615 733.968 305.681 733.968 305.681 cv
734.106 312.983 li
cp
.729412 .47451 .337255 rgb
f
748.453 302.991 mo
748.548 301.342 746.208 300.173 745.706 300.135 cv
745.32 298.534 742.871 297.367 742.042 297.538 cv
741.479 296.557 740.65 295.967 738.852 296.438 cv
735.94 297.201 734.739 296.961 733.906 298.587 cv
733.073 300.212 730.807 304.85 730.615 306.151 cv
730.422 307.453 733.312 310.767 735.438 315.652 cv
737.373 320.099 739.57 321.594 741.191 324.015 cv
746.65 337.194 747.963 360.893 749.536 369.742 cv
750.209 373.529 760.192 383.563 763.037 381.865 cv
764.402 381.051 769.757 367.944 766.985 362.437 cv
756.883 342.373 752.475 332.821 748.012 322.184 cv
746.827 319.359 750.288 322.447 745.342 309.164 cv
745.894 307.581 745.662 306.382 745.662 306.382 cv
745.662 306.382 747.333 306.465 747.539 306.258 cv
750.824 308.054 li
750.686 305.506 749.132 303.302 748.453 302.991 cv
cp
.870588 .607843 .439216 rgb
f
742.042 297.538 mo
739.682 298.384 738.185 298.865 736.405 299.489 cv
735.351 299.859 733.879 303.91 733.046 305.535 cv
734.408 303.867 735.234 300.855 736.967 299.861 cv
738.559 298.948 740.513 298.393 742.042 297.538 cv
cp
.729412 .47451 .337255 rgb
f
745.642 300.146 mo
745.46 298.708 741.974 299.476 740.186 300.417 cv
739.184 300.944 736.918 306.149 736.085 307.774 cv
737.446 306.106 738.993 301.64 740.81 300.85 cv
742.796 299.986 744.912 300.057 745.642 300.146 cv
cp
f
748.453 302.991 mo
748.453 302.991 744.468 302.516 743.518 302.945 cv
742.568 303.374 739.882 307.875 739.792 308.043 cv
740.551 306.047 742.744 302.612 743.305 302.4 cv
743.866 302.188 746.822 302.153 748.453 302.991 cv
cp
f
766.985 362.437 mo
756.633 342.5 751.15 329.065 748.012 322.184 cv
746.741 319.396 750.288 322.447 745.342 309.164 cv
745.894 307.581 745.662 306.382 745.662 306.382 cv
745.662 306.382 747.333 306.464 747.539 306.258 cv
750.824 308.054 li
750.803 307.678 750.745 307.314 750.671 306.958 cv
749.65 306.288 748.446 305.424 747.716 305.503 cv
746.681 305.615 745.68 305.506 744.657 305.4 cv
744.384 306.702 743.865 308.883 744.088 309.436 cv
744.766 311.122 745.498 312.926 745.799 314.734 cv
746.357 318.085 747.277 320.278 744.978 322.807 cv
748.559 326.904 760.094 348.704 763.096 359.359 cv
763.513 360.837 765.853 371.295 759.76 377.387 cv
758.337 378.81 750.614 370.812 749.772 370.534 cv
752.658 375.987 760.755 383.226 763.037 381.865 cv
764.401 381.051 769.826 367.909 766.985 362.437 cv
cp
f
858.751 368.937 mo
856.696 364.212 848.319 345.907 841.819 338.203 cv
837.342 326.656 832.634 324.006 828.398 321.137 cv
823.63 331.208 824.982 338.701 825.236 340.922 cv
826.798 342.631 827.965 343.76 829.301 345.265 cv
837.468 354.461 842.61 367.064 845.554 371.079 cv
842.739 374.917 840.66 409.193 836.532 412.339 cv
835.92 412.375 835.509 412.419 835.476 412.408 cv
835.316 412.354 830.089 407.718 828.866 406.825 cv
828.393 405.781 827.87 404.907 825.904 405.14 cv
824.424 405.315 822.461 405.496 820.79 405.307 cv
818.638 405.064 818.606 405.101 817.933 405.802 cv
816.837 406.943 815.057 408.913 814.252 409.868 cv
812.705 411.7 810.979 413.212 810.743 413.496 cv
810.353 413.965 812.252 415.723 814.352 413.863 cv
816.377 412.069 816.568 411.246 816.568 411.246 cv
816.915 410.931 819.575 409.197 819.836 408.792 cv
821.075 409.228 823.186 408.863 823.73 409.072 cv
822.253 409.342 819.426 409.758 818.156 411.006 cv
817.397 411.752 816.672 413.544 814.911 414.978 cv
813.702 415.963 813.245 417.207 812.097 418.166 cv
811.085 419.01 812.622 420.706 814.774 418.899 cv
815.729 418.096 816.316 417.516 817.029 416.526 cv
818.973 414.975 820.536 413.46 820.994 413.489 cv
821.708 413.535 826.114 413.18 826.162 413.038 cv
824.003 414.184 821.509 414.999 820.871 415.292 cv
820.47 415.477 817.988 418.449 817.768 418.659 cv
816.974 419.42 815.406 421.106 814.915 421.541 cv
813.937 422.383 815.616 424.993 819.389 420.192 cv
821.448 418.824 822.258 418.03 822.49 417.973 cv
824.998 417.354 827.287 416.766 826.993 416.953 cv
826.699 417.139 822.814 418.379 822.177 418.893 cv
821.541 419.407 819.667 421.891 819.142 422.231 cv
817.368 423.38 816.834 424.099 816.834 424.099 cv
818.318 425.692 820.819 423.823 821.434 422.922 cv
822.367 422.516 823.559 421.482 824.224 420.835 cv
825.315 420.552 826.925 420.58 828.211 420.606 cv
830.805 420.89 835.265 423.808 840.184 418.95 cv
840.536 418.701 840.93 418.263 841.361 417.647 cv
841.409 417.59 li
842.096 416.734 842.507 416.016 842.708 415.41 cv
848.353 404.849 862.405 377.338 858.751 368.937 cv
cp
.870588 .607843 .439216 rgb
f
819.389 420.193 mo
821.448 418.824 822.257 418.03 822.49 417.973 cv
824.654 417.439 826.652 416.929 826.971 416.919 cv
826.214 415.614 824.229 417.223 821.985 417.238 cv
820.539 418.825 819.929 418.908 818.798 419.781 cv
816.915 422.458 815.5 422.331 814.636 421.846 cv
814.325 422.945 816.031 424.465 819.389 420.193 cv
cp
.729412 .47451 .337255 rgb
f
814.774 418.899 mo
815.729 418.096 816.316 417.516 817.029 416.526 cv
818.973 414.975 820.535 413.46 820.994 413.489 cv
821.639 413.531 825.291 413.245 826.024 413.085 cv
826.272 413.085 826.241 412.589 826.166 412.418 cv
825.771 411.518 824.334 412.18 823.042 412.416 cv
821.553 412.688 821.316 412.404 820.326 412.123 cv
820.019 412.962 819.425 413.576 818.659 414.297 cv
817.52 415.37 816.998 415.669 816.17 415.965 cv
816.085 416.599 815.737 417.298 814.851 418.147 cv
813.792 419.162 812.982 418.916 811.944 418.494 cv
811.631 419.932 813.163 420.251 814.774 418.899 cv
cp
f
819.217 407.305 mo
818.729 407.93 817.802 409.761 815.711 410.592 cv
815.677 411.65 814.891 412.531 813.889 413.134 cv
812.872 413.746 811.494 413.988 810.7 413.721 cv
810.924 414.471 812.645 415.375 814.352 413.863 cv
816.378 412.069 816.568 411.246 816.568 411.246 cv
816.915 410.931 819.575 409.197 819.836 408.792 cv
820.894 409.165 822.919 409.012 823.731 409.072 cv
823.7 408.325 822.421 408.308 821.733 408.165 cv
820.857 407.984 820.031 407.591 819.217 407.305 cv
cp
f
829.437 419.51 mo
827.696 418.769 825.449 419.195 823.8 420.072 cv
822.771 421.614 821.452 421.964 821.203 422.308 cv
819.998 423.972 818.567 424.666 816.88 424.043 cv
816.834 424.099 li
818.318 425.692 820.819 423.823 821.434 422.922 cv
822.367 422.516 823.559 421.482 824.224 420.836 cv
825.315 420.552 826.925 420.58 828.211 420.606 cv
830.805 420.89 835.265 423.808 840.184 418.95 cv
840.536 418.701 840.93 418.263 841.361 417.647 cv
841.409 417.59 li
841.967 416.895 842.335 416.295 842.564 415.768 cv
838.979 419.154 834.41 421.627 829.437 419.51 cv
cp
f
828.999 320.06 mo
831.018 320.804 837.326 324.401 842.622 337.722 cv
837.807 342.376 833.058 345.279 829.782 346.87 cv
828.498 347.493 825.368 341.379 825.368 341.379 cv
825.368 341.379 822.721 331.783 828.999 320.06 cv
cp
.847059 .247059 .419608 rgb
f
930.4 514.266 mo
931.779 467.647 938.563 435.768 938.563 435.768 cv
873.741 435.768 li
873.741 435.768 880.819 477.578 881.904 514.266 cv
930.4 514.266 li
cp
.521569 .345098 .729412 rgb
f
887.149 459.727 mo
925.156 459.727 li
943.23 453.422 943.553 433.373 946.613 422.281 cv
946.793 421.425 921.931 411.159 921.931 411.159 cv
906.646 410.142 li
906.646 410.076 li
906.152 410.109 li
905.658 410.076 li
905.658 410.142 li
890.374 411.159 li
890.374 411.159 864.9 421.338 865.774 422.434 cv
868.834 433.526 869.276 452.883 887.149 459.727 cv
cp
.6 .392157 .8 rgb
f
865.966 422.281 mo
860.668 424.791 859.379 433.557 853.976 443.195 cv
848.126 453.63 820.461 479.419 840.276 489.204 cv
856.946 497.437 869.489 452.29 878.628 454.537 cv
870.763 447.052 865.966 422.281 865.966 422.281 cv
cp
.521569 .345098 .729412 rgb
f
878.628 454.537 mo
878.304 454.26 872.854 450.212 866.728 426.286 cv
868.068 443.288 873.416 450.687 874.295 452.304 cv
868.718 456.951 862.174 469.347 859.052 473.682 cv
855.765 478.245 836.186 498.034 833.47 476.456 cv
832.563 481.618 834.146 486.177 840.276 489.204 cv
854.448 496.203 866.093 462.984 875.091 455.784 cv
875.246 455.659 877.288 454.037 878.628 454.537 cv
cp
.333333 .223529 .486275 rgb
f
837.159 469.367 mo
827.384 467.93 814.578 475.875 803.175 472.891 cv
802.728 472.639 802.357 472.293 802.025 471.891 cv
801.606 474.53 800.996 477.177 800.133 479.751 cv
800.394 479.847 800.666 479.949 800.963 480.065 cv
809.754 483.495 801.215 479.466 828.463 489.635 cv
835.683 492.33 847.273 492.537 850.443 485.852 cv
853.454 479.5 849.345 471.159 837.159 469.367 cv
cp
.717647 .447059 .152941 rgb
f
848.451 474.607 mo
850.533 477.989 854.708 490.046 821.726 482.701 cv
793.161 476.339 806.516 477.077 802.672 472.548 cv
802.435 472.357 802.225 472.13 802.025 471.888 cv
801.607 474.528 800.997 477.176 800.133 479.751 cv
800.394 479.847 800.666 479.949 800.963 480.065 cv
809.754 483.495 801.215 479.466 828.463 489.635 cv
835.683 492.33 847.359 491.79 850.443 485.852 cv
851.346 484.112 852.13 478.463 848.451 474.607 cv
cp
.65098 .376471 .141176 rgb
f
946.613 422.281 mo
951.911 424.791 953.2 433.557 958.603 443.195 cv
964.453 453.63 992.117 479.419 972.303 489.204 cv
955.633 497.437 943.089 452.29 933.951 454.537 cv
941.816 447.052 946.613 422.281 946.613 422.281 cv
cp
.521569 .345098 .729412 rgb
f
933.951 454.537 mo
934.275 454.26 939.725 450.212 945.851 426.286 cv
944.511 443.288 939.163 450.687 938.284 452.304 cv
943.861 456.951 950.405 469.347 953.527 473.682 cv
956.814 478.245 976.393 498.034 979.109 476.456 cv
980.015 481.618 978.432 486.177 972.303 489.204 cv
958.13 496.203 946.486 462.984 937.488 455.784 cv
937.333 455.659 935.291 454.037 933.951 454.537 cv
cp
.333333 .223529 .486275 rgb
f
913.939 470.601 mo
911.708 469.764 909.052 466.757 911.422 464.387 cv
913.24 462.569 917.556 468.151 920.484 469.964 cv
920.484 469.964 917.356 471.882 913.939 470.601 cv
cp
.65098 .376471 .141176 rgb
f
915.611 486.601 mo
913.672 486.575 912.394 484.576 912.296 484.054 cv
910.572 483.836 909.063 481.404 909.146 480.515 cv
908.052 480.039 907.008 479.046 907.222 477.098 cv
907.402 475.462 907.286 473.19 908.893 472.128 cv
910.5 471.065 915.502 467.883 916.844 467.53 cv
918.186 467.177 921.998 469.82 927.367 471.479 cv
932.255 472.99 933.494 478.751 936.408 479.73 cv
946.254 479.978 954.485 469.332 962.645 468.462 cv
972.817 467.376 978.183 474.494 977.369 481.334 cv
976.512 488.534 967.212 491.013 960.776 490.077 cv
936.489 486.542 944.311 488.464 936.437 487.18 cv
933.247 486.66 932.594 486.979 932.594 486.979 cv
932.594 486.979 929.175 488.988 926.142 486.73 cv
923.108 484.472 920.961 483.311 920.779 483.305 cv
919.718 483.508 918.84 483.279 918.84 483.279 cv
918.84 483.279 919.205 484.169 918.791 485.113 cv
919.487 485.775 920.731 486.895 920.731 486.895 cv
920.731 486.895 919.655 489.172 918.511 488.774 cv
917.368 488.376 916.556 488.628 915.611 486.601 cv
cp
.717647 .447059 .152941 rgb
f
909.146 480.515 mo
909.758 477.943 910.088 476.317 910.534 474.378 cv
910.799 473.23 914.874 471.214 916.481 470.151 cv
914.891 471.773 911.829 472.99 910.989 474.923 cv
910.218 476.699 909.863 478.813 909.146 480.515 cv
cp
.65098 .376471 .141176 rgb
f
912.299 483.985 mo
910.771 483.962 911.169 480.218 911.948 478.234 cv
912.384 477.122 917.576 474.139 919.183 473.076 cv
917.593 474.698 913.091 476.84 912.474 478.837 cv
911.8 481.02 912.121 483.23 912.299 483.985 cv
cp
f
915.611 486.601 mo
915.611 486.601 914.648 482.478 914.987 481.432 cv
915.326 480.386 919.732 477.045 919.897 476.931 cv
917.893 477.96 914.547 480.659 914.39 481.272 cv
914.233 481.885 914.541 484.988 915.611 486.601 cv
cp
f
917.425 486.164 mo
917.871 485.462 918.617 484.289 917.672 483.03 cv
920.024 482.574 922.272 481.626 923.894 483.2 cv
930.292 489.405 932.853 482.94 931.954 479.907 cv
929.848 472.802 918.847 468.657 917.487 467.536 cv
919.198 467.845 922.691 470.034 927.367 471.479 cv
931.974 472.903 933.34 478.101 935.921 479.514 cv
940.121 483.006 929.28 485.38 953.665 484.927 cv
981.822 484.405 975.474 473.708 972.966 470.918 cv
976.867 473.797 977.654 479.442 977.369 481.334 cv
976.393 487.791 967.212 491.013 960.776 490.077 cv
936.489 486.542 944.311 488.464 936.437 487.18 cv
933.247 486.66 932.594 486.979 932.594 486.979 cv
932.594 486.979 929.175 488.988 926.142 486.73 cv
923.108 484.472 920.961 483.311 920.779 483.305 cv
919.718 483.508 918.84 483.279 918.84 483.279 cv
918.84 483.279 919.205 484.169 918.791 485.113 cv
919.487 485.775 920.731 486.895 920.731 486.895 cv
920.731 486.895 920.608 487.153 920.403 487.478 cv
920.401 487.481 li
919.687 486.45 918.941 485.647 917.425 486.164 cv
cp
f
930.018 513.378 mo
884.095 513.378 li
884.096 513.378 li
881.679 513.378 li
881.679 513.378 859.235 516.041 858.791 536.906 cv
858.708 540.824 859.314 543.912 860.378 546.345 cv
946.691 546.345 li
947.754 543.912 952.989 540.824 952.906 536.906 cv
952.462 516.041 930.018 513.378 930.018 513.378 cv
cp
.8 .678431 .431373 rgb
f
859.084 541.674 mo
859.351 543.449 859.79 545.002 860.378 546.345 cv
946.691 546.345 li
947.279 544.999 949.144 543.451 950.679 541.674 cv
905.742 533.803 li
859.084 541.674 li
cp
.776471 .631373 .376471 rgb
f
925.671 603.855 mo
925.671 603.855 920.7 599.666 919.551 598.172 cv
893.476 543.835 li
887.57 531.258 876.846 519.018 867.296 522.527 cv
856.528 527.187 855.803 537.698 862.389 550.232 cv
902.86 603.249 li
902.787 603.416 902.748 603.507 902.748 603.507 cv
906.272 608.235 904.69 612.445 906.341 614.2 cv
913.641 618.331 li
919.569 628.455 li
919.569 628.455 926.186 628.736 931.508 620.98 cv
929.98 616.858 925.602 609.875 925.602 609.875 cv
925.671 603.855 li
cp
.827451 .709804 .447059 rgb
f
925.602 609.875 mo
925.671 603.855 li
925.671 603.855 920.699 599.666 908.056 574.218 cv
896.621 550.388 li
911.13 588.389 904.274 592.352 901.071 600.906 cv
902.86 603.249 li
902.787 603.416 902.749 603.507 902.749 603.507 cv
906.272 608.235 904.69 612.445 906.341 614.199 cv
913.641 618.331 li
919.569 628.455 li
919.569 628.455 926.186 628.736 931.508 620.98 cv
929.98 616.858 925.602 609.875 925.602 609.875 cv
cp
.776471 .631373 .376471 rgb
f
926.053 645.541 mo
922.747 638.313 920.645 632.773 919.569 628.455 cv
919.569 628.455 926.389 628.605 931.424 620.842 cv
934.317 626.704 937.693 631.126 943.709 637.48 cv
952.214 646.462 956.351 650.104 945.154 657.294 cv
933.873 664.538 931.24 656.88 926.053 645.541 cv
cp
.521569 .345098 .729412 rgb
f
934.744 651.55 mo
938.23 648.938 941.948 646.591 945.934 644.834 cv
946.921 644.399 948.02 643.915 949.169 643.516 cv
953.625 649.064 957.742 651.668 946.243 659.052 cv
934.351 666.688 934.051 660.878 930.61 654.95 cv
931.948 653.77 933.313 652.621 934.744 651.55 cv
cp
.878431 .878431 .878431 rgb
f
934.744 651.55 mo
938.23 648.938 941.948 646.591 945.934 644.834 cv
946.921 644.399 948.02 643.915 949.169 643.516 cv
953.625 649.064 953.575 651.887 945.154 657.294 cv
937.351 662.305 934.051 660.878 930.61 654.95 cv
931.948 653.77 933.313 652.621 934.744 651.55 cv
cp
.6 .392157 .8 rgb
f
921.878 630.26 mo
926.465 629.875 931.299 624.633 931.299 624.633 cv
931.299 624.633 932.094 625.641 932.566 626.334 cv
927.738 633.09 922.432 632.656 922.432 632.656 cv
922.432 632.656 922.432 632.656 921.878 630.26 cv
cp
.0784314 .172549 .176471 rgb
f
923.351 634.869 mo
927.938 634.483 933.553 628.298 933.553 628.298 cv
933.553 628.298 934.727 629.711 935.199 630.404 cv
930.372 637.159 923.905 637.264 923.905 637.264 cv
923.905 637.264 923.905 637.264 923.351 634.869 cv
cp
f
925.653 640.257 mo
930.24 639.872 937.216 633.784 937.216 633.784 cv
937.216 633.784 938.39 635.197 938.862 635.89 cv
934.035 642.645 926.207 642.653 926.207 642.653 cv
926.207 642.653 926.207 642.653 925.653 640.257 cv
cp
f
914.858 399.621 mo
917.4 409.184 li
924.603 412.947 li
905.091 428.574 li
885.084 412.945 li
892.773 409.221 li
895.323 399.621 li
914.858 399.621 li
cp
.65098 .376471 .141176 rgb
f
914.858 399.621 mo
917.4 409.184 li
925.136 412.802 li
905.091 428.574 li
905 414.651 li
893.733 405.605 li
895.323 399.621 li
914.858 399.621 li
cp
.607843 .329412 .121569 rgb
f
881.454 372.969 mo
882.098 372.85 882.761 373.023 883.399 373.433 cv
883.774 359.526 886.663 345.408 905.612 345.408 cv
923.664 345.408 927.522 359.607 927.829 373.585 cv
928.534 373.067 929.277 372.836 929.996 372.969 cv
932.289 373.392 932.469 377.228 931.645 381.694 cv
930.82 386.16 929.303 389.565 927.01 389.142 cv
926.321 389.014 925.733 388.566 925.268 387.883 cv
925.268 398.497 914.138 409.49 905.612 409.49 cv
897.144 409.49 886.031 398.875 886.031 388.091 cv
885.592 388.657 885.056 389.028 884.44 389.142 cv
882.147 389.565 880.957 386.16 880.132 381.694 cv
879.308 377.228 879.161 373.392 881.454 372.969 cv
.717647 .447059 .152941 rgb
f
886.034 388.36 mo
885.595 388.926 885.059 389.297 884.443 389.411 cv
882.237 389.818 881.047 386.166 880.132 381.959 cv
881.934 385.584 883.525 388.941 885.361 385.719 cv
885.496 385.482 884.974 375.156 885.24 375.121 cv
885.148 374.792 883.488 374.008 883.404 373.675 cv
883.636 365.11 884.828 356.47 890.139 351.099 cv
888.635 356.677 887.773 363.159 887.773 370.075 cv
887.773 390.966 895.905 404.51 905.598 404.51 cv
915.292 404.51 922.877 390.966 922.877 370.075 cv
922.877 363.059 921.989 356.491 920.445 350.859 cv
925.576 355.786 927.69 363.782 927.911 373.855 cv
927.568 374.094 925.692 375.424 925.692 375.424 cv
925.957 375.459 925.281 385.058 925.389 385.31 cv
926.297 387.428 928.412 387.783 931.099 384.37 cv
930.262 388.009 928.649 389.713 927.013 389.411 cv
926.324 389.284 925.736 388.836 925.271 388.152 cv
925.271 398.766 914.141 409.48 905.615 409.48 cv
897.147 409.48 886.034 399.144 886.034 388.36 cv
.65098 .376471 .141176 rgb
f
889.774 371.833 mo
889.786 372.4 892.414 371.711 895.685 371.741 cv
898.956 371.771 901.587 372.508 901.619 371.941 cv
901.677 370.904 899.335 369.179 896.065 369.149 cv
892.794 369.119 889.75 370.727 889.774 371.833 cv
cp
f
889.781 371.379 mo
889.745 372.494 892.534 370.799 895.805 370.829 cv
899.076 370.859 901.591 372.602 901.627 371.488 cv
901.662 370.373 899.069 368.538 895.798 368.508 cv
892.527 368.478 889.817 370.265 889.781 371.379 cv
cp
.196078 0 .00392157 rgb
f
921.212 371.833 mo
921.2 372.4 918.572 371.711 915.301 371.741 cv
912.03 371.771 909.398 372.508 909.367 371.941 cv
909.309 370.904 911.65 369.179 914.921 369.149 cv
918.192 369.119 921.235 370.727 921.212 371.833 cv
cp
.65098 .376471 .141176 rgb
f
921.204 371.379 mo
921.24 372.494 918.451 370.799 915.18 370.829 cv
911.909 370.859 909.395 372.602 909.359 371.488 cv
909.323 370.373 911.916 368.538 915.187 368.508 cv
918.458 368.478 921.168 370.265 921.204 371.379 cv
cp
.196078 0 .00392157 rgb
f
912.667 380.304 mo
912.667 381.418 913.57 382.321 914.684 382.321 cv
915.798 382.321 916.702 381.418 916.702 380.304 cv
916.702 379.189 915.798 378.286 914.684 378.286 cv
913.57 378.286 912.667 379.189 912.667 380.304 cv
.184314 .0117647 0 rgb
f
913.073 379.709 mo
913.073 380.27 913.528 380.725 914.089 380.725 cv
914.651 380.725 915.105 380.27 915.105 379.709 cv
915.105 379.148 914.651 378.693 914.089 378.693 cv
913.528 378.693 913.073 379.148 913.073 379.709 cv
1 1 1 rgb
f
896.733 380.617 mo
896.733 381.732 897.636 382.635 898.751 382.635 cv
899.865 382.635 900.768 381.732 900.768 380.617 cv
900.768 379.503 899.865 378.6 898.751 378.6 cv
897.636 378.6 896.733 379.503 896.733 380.617 cv
.184314 .0117647 0 rgb
f
897.009 380.022 mo
897.009 380.583 897.464 381.039 898.025 381.039 cv
898.587 381.039 899.041 380.583 899.041 380.022 cv
899.041 379.461 898.587 379.006 898.025 379.006 cv
897.464 379.006 897.009 379.461 897.009 380.022 cv
1 1 1 rgb
f
909.298 391.968 mo
909.009 393.127 907.434 394.013 905.535 394.013 cv
903.635 394.013 902.06 393.127 901.771 391.968 cv
909.298 391.968 li
cp
.65098 .376471 .141176 rgb
f
910.143 399.118 mo
909.788 399.735 907.86 400.207 905.534 400.207 cv
903.208 400.207 901.281 399.735 900.926 399.118 cv
910.143 399.118 li
cp
f
882.841 373.138 mo
882.841 373.138 881.719 357.902 886.641 350.168 cv
885.335 344.946 888.393 335.429 897.944 335.302 cv
896.033 336.193 894.76 338.231 894.76 338.231 cv
894.76 338.231 902.811 331.286 913.055 335.404 cv
909.138 335.907 907.877 337.339 907.877 337.339 cv
907.877 337.339 917.676 333.396 924.432 340.268 cv
922.777 340.014 920.99 340.828 920.99 340.828 cv
920.99 340.828 928.322 343.238 927.719 352.981 cv
926.112 350.369 923.802 349.465 923.802 349.465 cv
923.802 349.465 929.908 357.97 928.253 373.634 cv
926.114 375.267 li
926.114 375.267 922.777 357.206 919.593 355.678 cv
911.697 358.989 899.217 360.262 890.557 354.404 cv
887.883 357.206 885.336 375.289 885.336 375.289 cv
882.841 373.138 li
cp
.184314 .0117647 0 rgb
f
888.248 350.972 mo
888.248 350.972 893.069 355.793 900.802 356.395 cv
908.536 356.998 913.457 356.195 915.667 355.291 cv
917.876 354.387 922.697 352.579 924.606 356.898 cv
924.706 353.885 921.593 348.361 912.051 351.072 cv
902.51 353.784 894.977 354.588 888.248 350.972 cv
cp
.227451 .054902 .00784314 rgb
f
888.147 350.068 mo
892.466 351.976 899.095 353.583 908.235 349.968 cv
917.374 346.352 924.405 345.95 927.217 351.374 cv
927.317 348.461 924.405 341.33 917.876 342.535 cv
911.348 343.741 897.89 353.182 888.147 350.068 cv
cp
f
887.645 349.591 mo
887.645 349.591 896.131 350.349 903.364 345.677 cv
909.858 341.483 915.591 337.388 923.124 339.648 cv
920.036 337.765 913.531 334.925 906.039 339.781 cv
898.382 344.745 897.287 347.331 887.645 349.591 cv
cp
f
910.695 335.279 mo
906.477 334.827 902.786 336.936 899.698 340.702 cv
896.609 344.469 891.788 347.482 887.495 349.214 cv
890.583 347.256 893.445 343.489 895.555 340.175 cv
897.664 336.861 903.163 333.094 910.695 335.279 cv
cp
f
887.043 349.29 mo
887.721 348.16 890.96 345.523 891.412 342.435 cv
891.864 339.346 893.295 337.162 895.555 336.258 cv
893.069 336.861 890.809 337.84 888.775 341.682 cv
886.741 345.523 887.043 349.29 887.043 349.29 cv
cp
f
920.121 385.271 mo
917.882 386.822 911.534 387.581 909.485 384.188 cv
908.394 382.38 907.189 379.34 908.144 376.483 cv
908.705 375.155 921.165 373.811 921.929 375.277 cv
923.636 378.391 922.122 383.884 920.121 385.271 cv
901.746 384.188 mo
899.698 387.581 893.349 386.822 891.11 385.271 cv
889.109 383.884 887.595 378.391 889.302 375.277 cv
890.066 373.811 902.526 375.155 903.087 376.483 cv
904.043 379.34 902.837 382.38 901.746 384.188 cv
926.8 373.419 mo
923.804 373.462 908.805 374.833 905.616 374.836 cv
902.426 374.833 887.427 373.462 884.431 373.419 cv
884.431 373.419 883.804 374.973 885.915 375.476 cv
886.977 375.729 887.598 376.379 887.68 377.151 cv
887.874 378.973 888.176 381.727 889.152 383.513 cv
891.512 387.832 895.903 387.233 898.895 386.717 cv
901.455 386.275 902.7 383.859 903.404 381.71 cv
903.851 380.344 904.721 379.644 905.616 379.585 cv
906.51 379.644 907.38 380.344 907.828 381.71 cv
908.531 383.859 909.776 386.275 912.336 386.717 cv
915.328 387.233 919.719 387.832 922.08 383.513 cv
923.056 381.727 923.357 378.973 923.551 377.151 cv
923.633 376.379 924.255 375.729 925.316 375.476 cv
927.427 374.973 926.8 373.419 926.8 373.419 cv
1 1 1 rgb
f
gsave
896.288 386.585 mo
894.235 386.585 892.193 386.021 891.11 385.271 cv
889.719 384.307 888.563 381.357 888.561 378.603 cv
888.561 377.469 888.756 376.368 889.211 375.452 cv
887.994 377.901 888.639 381.668 889.913 383.856 cv
898.642 375.127 li
896.7 374.832 894.46 374.64 892.657 374.64 cv
892.112 374.64 891.606 374.658 891.161 374.695 cv
891.608 374.657 892.115 374.64 892.662 374.64 cv
896.628 374.64 902.699 375.565 903.087 376.483 cv
903.33 377.208 903.433 377.946 903.434 378.671 cv
903.438 380.804 902.56 382.839 901.746 384.188 cv
900.688 385.94 898.482 386.585 896.288 386.585 cv
898.751 378.6 mo
897.636 378.6 896.733 379.503 896.733 380.617 cv
896.733 381.732 897.636 382.635 898.751 382.635 cv
899.865 382.635 900.768 381.732 900.768 380.617 cv
900.768 379.503 899.865 378.6 898.751 378.6 cv
clp
887.994 374.64 mo
903.438 374.64 li
903.438 386.585 li
887.994 386.585 li
cp
.886274 .556863 .380392 rgb
f
grestore
898.751 382.635 mo
897.636 382.635 896.733 381.732 896.733 380.617 cv
896.733 379.503 897.636 378.6 898.751 378.6 cv
899.865 378.6 900.768 379.503 900.768 380.617 cv
900.768 381.732 899.865 382.635 898.751 382.635 cv
898.025 379.006 mo
897.464 379.006 897.009 379.461 897.009 380.022 cv
897.009 380.583 897.464 381.039 898.025 381.039 cv
898.587 381.039 899.041 380.583 899.041 380.022 cv
899.041 379.461 898.587 379.006 898.025 379.006 cv
.67451 .384314 .321569 rgb
f
898.025 381.039 mo
897.464 381.039 897.009 380.583 897.009 380.022 cv
897.009 379.461 897.464 379.006 898.025 379.006 cv
898.587 379.006 899.041 379.461 899.041 380.022 cv
899.041 380.583 898.587 381.039 898.025 381.039 cv
1 .780392 .721569 rgb
f
889.212 375.451 mo
889.216 375.441 889.221 375.432 889.226 375.422 cv
889.221 375.432 889.216 375.441 889.212 375.451 cv
889.227 375.421 mo
889.231 375.412 889.236 375.403 889.241 375.394 cv
889.236 375.403 889.231 375.412 889.227 375.421 cv
889.241 375.392 mo
889.246 375.383 889.251 375.374 889.256 375.365 cv
889.251 375.374 889.246 375.383 889.241 375.392 cv
889.257 375.362 mo
889.262 375.353 889.266 375.344 889.271 375.335 cv
889.266 375.344 889.262 375.353 889.257 375.362 cv
889.271 375.335 mo
889.276 375.326 889.281 375.317 889.285 375.308 cv
889.281 375.317 889.276 375.326 889.271 375.335 cv
889.288 375.303 mo
889.293 375.295 889.298 375.286 889.302 375.277 cv
889.302 375.277 li
889.302 375.277 li
889.298 375.286 889.293 375.294 889.288 375.303 cv
.886274 .556863 .380392 rgb
f
914.943 386.585 mo
912.749 386.585 910.544 385.941 909.485 384.188 cv
908.724 382.926 907.907 381.066 907.807 379.085 cv
907.879 380.511 908.323 381.874 908.85 382.997 cv
917.174 374.673 li
915.963 374.728 914.656 374.846 913.422 375.008 cv
915.149 374.781 917.02 374.64 918.569 374.64 cv
920.341 374.64 921.693 374.824 921.929 375.277 cv
922.245 375.854 922.451 376.513 922.563 377.212 cv
922.384 379.192 922.13 381.083 921.807 382.881 cv
921.355 383.958 920.763 384.826 920.121 385.271 cv
919.039 386.021 916.996 386.585 914.943 386.585 cv
914.684 378.286 mo
913.57 378.286 912.667 379.189 912.667 380.304 cv
912.667 381.418 913.57 382.321 914.684 382.321 cv
915.798 382.321 916.702 381.418 916.702 380.304 cv
916.702 379.189 915.798 378.286 914.684 378.286 cv
f
921.807 382.881 mo
922.13 381.083 922.384 379.192 922.563 377.212 cv
922.636 377.663 922.67 378.13 922.67 378.603 cv
922.669 380.086 922.333 381.625 921.807 382.881 cv
.858823 .529412 .376471 rgb
f
914.684 382.321 mo
913.57 382.321 912.667 381.418 912.667 380.304 cv
912.667 379.189 913.57 378.286 914.684 378.286 cv
915.798 378.286 916.702 379.189 916.702 380.304 cv
916.702 381.418 915.798 382.321 914.684 382.321 cv
914.089 378.693 mo
913.528 378.693 913.073 379.148 913.073 379.709 cv
913.073 380.27 913.528 380.725 914.089 380.725 cv
914.651 380.725 915.105 380.27 915.105 379.709 cv
915.105 379.148 914.651 378.693 914.089 378.693 cv
.67451 .384314 .321569 rgb
f
914.089 380.725 mo
913.528 380.725 913.073 380.27 913.073 379.709 cv
913.073 379.148 913.528 378.693 914.089 378.693 cv
914.651 378.693 915.105 379.148 915.105 379.709 cv
915.105 380.27 914.651 380.725 914.089 380.725 cv
1 .780392 .721569 rgb
f
914.943 386.585 mo
912.749 386.585 910.544 385.941 909.485 384.188 cv
908.724 382.926 907.907 381.066 907.807 379.085 cv
907.807 379.085 li
907.907 381.066 908.724 382.926 909.485 384.188 cv
910.544 385.941 912.749 386.585 914.943 386.585 cv
916.996 386.585 919.039 386.021 920.121 385.271 cv
920.763 384.826 921.355 383.958 921.807 382.881 cv
922.333 381.625 922.669 380.086 922.67 378.603 cv
922.668 381.357 921.512 384.307 920.121 385.271 cv
919.039 386.021 916.996 386.585 914.943 386.585 cv
f
907.807 379.079 mo
907.807 379.073 907.806 379.067 907.806 379.062 cv
907.806 379.067 907.807 379.073 907.807 379.079 cv
.886274 .556863 .380392 rgb
f
907.805 379.046 mo
907.805 379.042 907.805 379.038 907.805 379.034 cv
907.805 379.038 907.805 379.042 907.805 379.046 cv
f
907.804 379.011 mo
907.804 379.009 907.804 379.006 907.803 379.004 cv
907.804 379.006 907.804 379.009 907.804 379.011 cv
f
908.121 376.551 mo
908.122 376.55 908.122 376.549 908.122 376.548 cv
908.122 376.549 908.122 376.55 908.121 376.551 cv
908.132 376.52 mo
908.132 376.518 908.133 376.516 908.133 376.515 cv
908.133 376.516 908.132 376.518 908.132 376.52 cv
908.146 376.478 mo
908.146 376.477 908.147 376.477 908.147 376.476 cv
908.147 376.477 908.146 376.477 908.146 376.478 cv
908.148 376.472 mo
908.149 376.472 908.149 376.471 908.149 376.471 cv
908.149 376.471 908.149 376.472 908.148 376.472 cv
908.151 376.467 mo
908.151 376.467 908.152 376.466 908.152 376.465 cv
908.152 376.466 908.151 376.467 908.151 376.467 cv
908.154 376.462 mo
908.154 376.462 908.154 376.461 908.154 376.46 cv
908.154 376.461 908.154 376.462 908.154 376.462 cv
908.156 376.457 mo
908.157 376.456 908.157 376.456 908.157 376.455 cv
908.157 376.456 908.157 376.456 908.156 376.457 cv
908.159 376.452 mo
908.16 376.451 908.16 376.451 908.16 376.45 cv
908.16 376.451 908.16 376.451 908.159 376.452 cv
908.162 376.446 mo
908.163 376.446 908.163 376.445 908.163 376.445 cv
908.163 376.445 908.163 376.446 908.162 376.446 cv
908.173 376.429 mo
908.173 376.429 908.173 376.429 908.173 376.429 cv
908.173 376.429 908.173 376.429 908.173 376.429 cv
908.176 376.424 mo
908.177 376.424 908.177 376.423 908.177 376.423 cv
908.177 376.423 908.177 376.424 908.176 376.424 cv
908.18 376.418 mo
908.18 376.418 908.18 376.418 908.181 376.418 cv
908.18 376.418 908.18 376.418 908.18 376.418 cv
908.184 376.413 mo
908.184 376.413 908.184 376.413 908.184 376.413 cv
908.184 376.413 908.184 376.413 908.184 376.413 cv
f
889.211 375.452 mo
889.211 375.452 889.211 375.451 889.212 375.451 cv
889.211 375.451 889.211 375.451 889.211 375.452 cv
1 1 1 rgb
f
889.226 375.422 mo
889.226 375.422 889.226 375.422 889.227 375.421 cv
889.226 375.422 889.226 375.422 889.226 375.422 cv
f
889.241 375.394 mo
889.241 375.393 889.241 375.393 889.241 375.392 cv
889.241 375.393 889.241 375.393 889.241 375.394 cv
f
889.256 375.365 mo
889.256 375.364 889.257 375.363 889.257 375.362 cv
889.257 375.363 889.256 375.364 889.256 375.365 cv
f
889.271 375.335 mo
889.271 375.335 889.271 375.335 889.271 375.335 cv
889.271 375.335 889.271 375.335 889.271 375.335 cv
f
889.285 375.308 mo
889.286 375.307 889.287 375.305 889.288 375.303 cv
889.287 375.305 889.286 375.307 889.285 375.308 cv
f
889.302 375.277 mo
889.466 374.964 890.161 374.779 891.161 374.695 cv
890.162 374.78 889.465 374.964 889.302 375.277 cv
f
889.913 383.856 mo
888.639 381.668 887.994 377.901 889.211 375.452 cv
889.211 375.451 889.211 375.451 889.212 375.451 cv
889.216 375.441 889.221 375.432 889.226 375.422 cv
889.226 375.422 889.226 375.422 889.227 375.421 cv
889.231 375.412 889.236 375.403 889.241 375.394 cv
889.241 375.393 889.241 375.393 889.241 375.392 cv
889.246 375.383 889.251 375.374 889.256 375.365 cv
889.256 375.364 889.257 375.363 889.257 375.362 cv
889.262 375.353 889.266 375.344 889.271 375.335 cv
889.271 375.335 889.271 375.335 889.271 375.335 cv
889.276 375.326 889.281 375.317 889.285 375.308 cv
889.286 375.307 889.287 375.305 889.288 375.303 cv
889.293 375.294 889.298 375.286 889.302 375.277 cv
889.302 375.277 li
889.465 374.964 890.162 374.78 891.161 374.695 cv
891.606 374.658 892.112 374.64 892.657 374.64 cv
894.46 374.64 896.7 374.832 898.642 375.127 cv
889.913 383.856 li
.913725 .662745 .529412 rgb
f
907.807 379.085 mo
907.807 379.083 907.807 379.081 907.807 379.079 cv
907.807 379.081 907.807 379.083 907.807 379.085 cv
907.806 379.062 mo
907.806 379.056 907.805 379.051 907.805 379.046 cv
907.805 379.051 907.806 379.056 907.806 379.062 cv
907.805 379.034 mo
907.804 379.026 907.804 379.018 907.804 379.011 cv
907.804 379.019 907.804 379.026 907.805 379.034 cv
1 1 1 rgb
f
907.803 379.004 mo
907.771 378.194 907.859 377.366 908.121 376.551 cv
907.895 377.255 907.798 377.968 907.797 378.671 cv
907.797 378.783 907.799 378.893 907.803 379.004 cv
f
908.122 376.548 mo
908.126 376.539 908.129 376.529 908.132 376.52 cv
908.129 376.529 908.126 376.538 908.122 376.548 cv
f
908.133 376.515 mo
908.137 376.504 908.14 376.493 908.144 376.483 cv
908.14 376.493 908.137 376.504 908.133 376.515 cv
f
908.144 376.483 mo
908.145 376.481 908.145 376.479 908.146 376.478 cv
908.145 376.479 908.145 376.481 908.144 376.483 cv
f
908.147 376.476 mo
908.147 376.475 908.148 376.474 908.148 376.472 cv
908.148 376.474 908.147 376.475 908.147 376.476 cv
f
908.152 376.465 mo
908.152 376.464 908.153 376.463 908.154 376.462 cv
908.153 376.463 908.152 376.464 908.152 376.465 cv
f
908.154 376.46 mo
908.155 376.459 908.156 376.458 908.156 376.457 cv
908.156 376.458 908.155 376.459 908.154 376.46 cv
f
908.157 376.455 mo
908.158 376.454 908.159 376.453 908.159 376.452 cv
908.159 376.453 908.158 376.454 908.157 376.455 cv
f
908.16 376.45 mo
908.161 376.449 908.162 376.447 908.162 376.446 cv
908.162 376.447 908.161 376.449 908.16 376.45 cv
f
908.163 376.445 mo
908.166 376.44 908.169 376.434 908.173 376.429 cv
908.169 376.434 908.166 376.44 908.163 376.445 cv
f
908.173 376.429 mo
908.174 376.427 908.175 376.426 908.176 376.424 cv
908.175 376.426 908.174 376.427 908.173 376.429 cv
f
908.184 376.413 mo
908.577 375.877 910.839 375.347 913.422 375.008 cv
910.839 375.347 908.577 375.877 908.184 376.413 cv
f
908.85 382.997 mo
908.323 381.874 907.879 380.511 907.807 379.085 cv
907.807 379.083 907.807 379.081 907.807 379.079 cv
907.807 379.073 907.806 379.067 907.806 379.062 cv
907.806 379.056 907.805 379.051 907.805 379.046 cv
907.805 379.042 907.805 379.038 907.805 379.034 cv
907.804 379.026 907.804 379.019 907.804 379.011 cv
907.804 379.009 907.804 379.006 907.803 379.004 cv
907.799 378.893 907.797 378.783 907.797 378.671 cv
907.798 377.968 907.895 377.255 908.121 376.551 cv
908.122 376.55 908.122 376.549 908.122 376.548 cv
908.126 376.538 908.129 376.529 908.132 376.52 cv
908.132 376.518 908.133 376.516 908.133 376.515 cv
908.137 376.504 908.14 376.493 908.144 376.483 cv
908.144 376.483 li
908.144 376.483 li
908.145 376.481 908.145 376.479 908.146 376.478 cv
908.146 376.477 908.147 376.477 908.147 376.476 cv
908.147 376.475 908.148 376.474 908.148 376.472 cv
908.149 376.472 908.149 376.471 908.149 376.471 cv
908.15 376.47 908.15 376.468 908.151 376.467 cv
908.151 376.467 908.152 376.466 908.152 376.465 cv
908.152 376.464 908.153 376.463 908.154 376.462 cv
908.154 376.462 908.154 376.461 908.154 376.46 cv
908.155 376.459 908.156 376.458 908.156 376.457 cv
908.157 376.456 908.157 376.456 908.157 376.455 cv
908.158 376.454 908.159 376.453 908.159 376.452 cv
908.16 376.451 908.16 376.451 908.16 376.45 cv
908.161 376.449 908.162 376.447 908.162 376.446 cv
908.163 376.446 908.163 376.445 908.163 376.445 cv
908.166 376.44 908.169 376.434 908.173 376.429 cv
908.173 376.429 908.173 376.429 908.173 376.429 cv
908.174 376.427 908.175 376.426 908.176 376.424 cv
908.177 376.424 908.177 376.423 908.177 376.423 cv
908.178 376.421 908.179 376.42 908.18 376.418 cv
908.18 376.418 908.18 376.418 908.181 376.418 cv
908.182 376.416 908.183 376.415 908.184 376.413 cv
908.184 376.413 908.184 376.413 908.184 376.413 cv
908.577 375.877 910.839 375.347 913.422 375.008 cv
914.656 374.846 915.963 374.728 917.174 374.673 cv
908.85 382.997 li
.913725 .662745 .529412 rgb
f
899.671 407.358 mo
897.591 406.772 897.068 399.224 898.549 398.49 cv
900.025 397.976 902.699 397.223 905.698 397.223 cv
908.822 397.223 911.307 397.927 912.701 398.437 cv
914.197 399.124 913.51 406.807 911.261 407.469 cv
909.836 407.87 907.901 408.245 905.623 408.245 cv
903.315 408.245 901.198 407.798 899.671 407.358 cv
cp
913.852 398.317 mo
913.815 398.242 li
913.136 396.101 909.404 395.239 905.673 395.239 cv
902.24 395.239 898.234 396.425 897.479 398.316 cv
897.466 398.317 li
897.403 398.515 li
897.392 398.549 li
896.733 400.678 896.785 405.802 897.378 407.156 cv
897.394 407.171 li
898.125 409.325 902.15 411.836 905.597 411.836 cv
909.038 411.836 912.479 409.987 913.528 407.825 cv
913.544 407.812 li
914.788 405.81 914.589 400.285 913.852 398.317 cv
cp
.196078 0 .00392157 rgb
f
824.27 458.296 mo
819.727 489.943 li
819.633 490.455 818.84 490.86 817.954 490.86 cv
807.158 490.86 li
806.272 490.86 805.479 490.455 805.385 489.943 cv
800.842 458.296 li
824.27 458.296 li
cp
.352941 .729412 .109804 rgb
f
824.27 457.009 mo
819.727 450.855 li
819.633 450.756 818.84 450.677 817.954 450.677 cv
807.158 450.677 li
806.272 450.677 805.479 450.756 805.385 450.855 cv
800.842 457.009 li
824.27 457.009 li
cp
.596078 .866667 .419608 rgb
f
814.336 456.402 mo
802.045 456.402 li
805.762 451.368 li
805.982 451.331 806.479 451.284 807.158 451.284 cv
814.336 451.284 li
814.336 456.402 li
cp
.741176 .956863 .596078 rgb
f
799.527 457.736 mo
799.527 458.364 800.037 458.874 800.665 458.874 cv
824.801 458.874 li
825.43 458.874 825.94 458.364 825.94 457.736 cv
825.94 457.107 825.43 456.597 824.801 456.597 cv
800.665 456.597 li
800.037 456.597 799.527 457.107 799.527 457.736 cv
cp
.878431 .878431 .878431 rgb
f
801.835 457.123 mo
814.438 457.123 li
814.438 458.348 li
801.835 458.348 li
801.496 458.348 801.222 458.074 801.222 457.736 cv
801.222 457.397 801.496 457.123 801.835 457.123 cv
cp
1 1 1 rgb
f
819.109 459.793 mo
823.411 459.793 li
819.201 489.12 li
819.114 489.595 818.38 489.97 817.558 489.97 cv
816.68 489.97 li
819.109 459.793 li
cp
.596078 .866667 .419608 rgb
f
810.608 459.793 mo
811.519 489.97 li
807.554 489.97 li
806.732 489.97 805.998 489.595 805.911 489.12 cv
801.701 459.793 li
810.608 459.793 li
cp
f
804.059 480.704 mo
802.259 468.163 li
822.853 468.163 li
821.053 480.704 li
804.059 480.704 li
cp
.203922 .00784314 .0117647 rgb
f
818.35 468.163 mo
822.145 468.163 li
820.323 480.704 li
817.4 480.704 li
818.35 468.163 li
cp
.156863 .00392157 .0117647 rgb
f
810.731 468.163 mo
811.367 480.704 li
804.688 480.704 li
803.018 468.163 li
810.731 468.163 li
cp
.329412 .0313726 .0470588 rgb
f
823.524 426.692 mo
824.03 426.464 824.814 427.426 824.03 427.856 cv
821.586 429.196 813.1 433.472 813.1 433.472 cv
813.1 450.695 li
811.481 450.695 li
811.481 432.359 li
811.481 432.359 820.184 428.159 823.524 426.692 cv
cp
.878431 .878431 .878431 rgb
f
798.769 463.126 mo
800.583 462.05 801.849 461.161 803.385 459.632 cv
805.304 457.724 806.412 458.319 807.484 458.645 cv
809.23 459.177 811.443 459.56 812.797 460.087 cv
815.395 461.101 817.104 461.901 817.502 462.061 cv
818.162 462.325 818.068 466.106 814.922 465.476 cv
811.886 464.869 811.203 464.034 811.203 464.034 cv
810.678 463.922 807.071 463.863 806.573 463.579 cv
805.65 465.03 803.401 466.183 803.006 466.842 cv
804.588 466.051 807.555 464.418 809.533 464.945 cv
810.715 465.26 812.953 466.583 815.515 466.962 cv
817.275 467.222 817.943 467.888 819.628 468.163 cv
821.112 468.404 820.743 472.303 817.578 471.776 cv
816.173 471.542 815.257 471.294 813.97 470.654 cv
811.162 470.275 808.741 469.65 808.319 470.03 cv
807.661 470.622 803.215 473.515 803.083 473.383 cv
805.853 473.12 808.742 472.211 809.533 472.079 cv
810.03 471.997 814.415 473.28 814.754 473.364 cv
815.979 473.671 818.209 473.982 818.945 474.129 cv
820.395 474.393 820.476 479.649 813.935 476.785 cv
811.127 476.709 809.867 476.375 809.609 476.482 cv
806.825 477.634 804.27 478.659 804.666 478.659 cv
805.061 478.659 809.545 477.208 810.468 477.34 cv
811.392 477.472 814.638 478.518 815.348 478.527 cv
817.75 478.557 818.714 479.23 818.568 479.946 cv
818.034 482.554 814.77 482.174 813.632 481.567 cv
812.489 481.786 810.716 481.455 809.685 481.187 cv
808.029 481.844 805.927 483.894 804.683 484.836 cv
804.683 484.836 801.217 484.946 800.234 482.106 cv
799.672 480.482 797.295 478.22 797.518 476.459 cv
797.808 474.175 796.661 472.944 796.858 470.562 cv
797.076 467.935 795.721 464.934 798.769 463.126 cv
cp
.717647 .447059 .152941 rgb
f
823.98 460.318 mo
825.177 459.623 826.203 459.395 826.803 460.294 cv
828.82 463.319 826.149 466.042 824.028 466.506 cv
823.704 466.577 823.387 466.606 823.076 466.616 cv
823.98 460.318 li
cp
.65098 .376471 .141176 rgb
f
818.042 479.049 mo
817.085 481.453 815.757 481.567 813.821 480.96 cv
811.962 481.074 809.475 480.35 808.983 480.465 cv
808.167 480.656 803.714 485.176 801.298 483.691 cv
801.556 483.972 802.341 484.443 802.908 484.565 cv
803.514 484.717 803.966 484.826 804.683 484.836 cv
805.523 484.157 li
806.79 483.142 808.199 481.777 809.685 481.187 cv
810.716 481.455 812.489 481.786 813.632 481.567 cv
814.77 482.174 818.034 482.554 818.568 479.946 cv
818.61 479.742 818.397 479.336 818.042 479.049 cv
cp
f
813.935 476.785 mo
811.127 476.709 809.867 476.375 809.609 476.482 cv
807.207 477.476 804.98 478.374 804.667 478.602 cv
804.6 476.482 807.484 476.899 809.647 475.229 cv
812 476.026 812.635 475.665 814.252 475.852 cv
817.687 477.615 818.831 475.609 819.365 474.382 cv
820.332 475.453 819.757 479.334 813.935 476.785 cv
cp
f
817.578 471.776 mo
816.173 471.542 815.257 471.294 813.971 470.654 cv
811.162 470.275 808.741 469.65 808.319 470.03 cv
807.724 470.565 804.045 472.973 803.244 473.335 cv
803.006 473.522 802.734 472.908 802.702 472.649 cv
802.534 471.283 804.316 470.988 805.7 470.296 cv
807.294 469.499 807.349 468.983 808.129 467.905 cv
808.934 468.67 809.877 468.952 811.051 469.233 cv
812.797 469.651 813.48 469.613 814.455 469.341 cv
814.922 470.03 815.681 470.599 817.047 470.941 cv
818.681 471.35 819.269 469.612 820.009 468.33 cv
821.184 469.803 819.947 472.171 817.578 471.776 cv
cp
f
806.263 461.346 mo
807.112 461.722 809.116 463.199 811.628 462.613 cv
812.303 463.844 813.594 464.3 814.922 464.262 cv
816.27 464.223 817.178 463.441 817.778 462.527 cv
818.02 463.586 817.479 465.988 814.922 465.476 cv
811.886 464.869 811.203 464.034 811.203 464.034 cv
810.678 463.922 807.071 463.863 806.573 463.579 cv
805.784 464.818 803.747 466.16 803.006 466.842 cv
802.58 465.932 803.798 464.949 804.372 464.262 cv
805.102 463.388 805.656 462.299 806.263 461.346 cv
cp
f
899.627 625.746 mo
899.627 625.746 898.069 621.599 898.168 621.378 cv
899.452 618.518 904.25 615.219 904.709 613.721 cv
920.456 538.075 li
921.928 536.254 933.077 519.005 940.908 518.949 cv
946.864 518.906 955.057 529.455 952.998 539.085 cv
926.742 614.244 li
926.654 617.298 926.257 622.141 926.257 622.141 cv
925.057 624.256 923.162 626.743 923.162 626.743 cv
923.12 627.277 923.968 631.237 924.594 631.672 cv
921.151 636.816 li
917.968 648.421 li
897.147 649.247 li
898.678 636.53 li
896.607 631.067 li
899.627 625.746 li
cp
.827451 .709804 .447059 rgb
f
919.08 658.11 mo
918.942 654.912 918.625 650.989 917.909 647.632 cv
905.353 643.919 895.899 646.335 895.205 650.528 cv
890.54 653.49 881.318 658.657 884.561 663.114 cv
913.893 663.082 li
915.606 661.409 917.313 659.728 919.08 658.11 cv
cp
.521569 .345098 .729412 rgb
f
917.933 659.042 mo
916.739 652.789 914.466 648.699 913.115 647.485 cv
908.219 645.357 900.484 645.05 896.607 646.893 cv
896.607 646.893 895.716 648.596 894.534 650.527 cv
889.869 653.488 880.647 658.655 883.89 663.113 cv
913.183 663.081 li
914.727 661.691 916.318 660.352 917.933 659.042 cv
cp
.6 .392157 .8 rgb
f
908.113 665.885 mo
909.56 664.837 911.077 663.894 912.568 662.912 cv
883.81 662.851 li
882.972 662.849 882.291 663.527 882.289 664.365 cv
882.288 665.202 882.965 665.883 883.803 665.885 cv
908.047 665.936 li
908.113 665.885 li
cp
.878431 .878431 .878431 rgb
f
912.861 650.147 mo
912.647 649.282 912.378 648.439 912.132 647.59 cv
910.751 647.072 909.21 646.647 907.559 646.358 cv
903.266 645.604 899.273 645.929 896.739 647.039 cv
896.364 647.877 896.006 648.723 895.681 649.577 cv
898.079 648.072 902.815 648.06 907.701 648.918 cv
909.717 649.271 911.49 649.916 912.988 650.713 cv
912.908 650.333 912.908 650.333 912.861 650.147 cv
cp
.0784314 .172549 .176471 rgb
f
913.172 651.075 mo
911.791 650.557 908.242 649.753 906.591 649.463 cv
902.298 648.71 897.951 648.965 895.416 650.076 cv
894.082 651.404 li
896.481 649.899 908.734 650.622 913.833 653.444 cv
913.992 653.019 913.172 651.075 913.172 651.075 cv
cp
f
905.662 521.661 mo
910.765 518.731 926.662 516.166 929.45 513.378 cv
884.095 513.378 li
884.096 513.378 li
881.873 513.378 li
905.662 521.661 li
cp
.827451 .709804 .447059 rgb
f
904.485 662.908 mo
910.277 662.908 919.069 656.613 918.964 655.532 cv
919.732 656.718 920.186 657.904 919.244 659.3 cv
916.732 662.614 910.87 665.964 907.276 665.964 cv
903.683 665.964 904.485 662.908 904.485 662.908 cv
cp
.878431 .878431 .878431 rgb
f
988.143 479.621 mo
988.431 482.396 990.59 484.644 992.974 484.644 cv
1110.9 484.644 li
1113.78 484.644 1115.86 482.161 1115.54 479.097 cv
1107.03 397.269 li
1106.71 394.205 1104.13 391.883 1101.27 392.081 cv
984.191 400.214 li
981.825 400.379 980.147 402.76 980.436 405.534 cv
988.143 479.621 li
cp
.0784314 0 .00392157 rgb
f
986.643 479.621 mo
986.932 482.396 989.091 484.644 991.475 484.644 cv
1109.4 484.644 li
1112.28 484.644 1114.36 482.161 1114.04 479.097 cv
1105.53 397.269 li
1105.21 394.205 1102.63 391.883 1099.77 392.081 cv
982.692 400.214 li
980.326 400.379 978.648 402.76 978.937 405.534 cv
986.643 479.621 li
cp
.878431 .878431 .878431 rgb
f
1102.47 396.68 mo
1102.47 396.68 1091.13 433.673 1112.27 482.246 cv
1112.98 480.447 1111.57 463.956 1109.54 444.467 cv
1104.63 397.269 1104.65 400.02 1102.47 396.68 cv
cp
1 1 1 rgb
f
983.641 401.491 mo
983.641 401.491 1036.97 406.888 1101.16 393.696 cv
1098.56 392.969 1073.82 394.938 1046.65 396.811 cv
1019.93 398.652 991.374 400.892 983.641 401.491 cv
cp
f
1026.07 436.411 mo
1026.62 441.727 1030.56 446.737 1035.63 447.754 cv
1041.8 448.995 1047.25 444.037 1046.46 436.411 cv
1045.67 428.786 1039.18 423.828 1033.27 425.068 cv
1028.41 426.086 1025.52 431.095 1026.07 436.411 cv
cp
f
1029.82 455.561 mo
1047.02 454.705 li
1047.47 454.705 1049.5 482.339 1063.54 489.305 cv
1087.24 489.305 li
1088.07 489.305 1088.74 489.976 1088.74 490.804 cv
1088.72 491.03 li
1033.27 491.03 li
1028.24 491.03 1029.31 455.561 1029.82 455.561 cv
cp
f
1029.67 455.561 mo
1046.42 454.604 li
1046.87 454.604 1048.16 483.295 1063.45 490.041 cv
1087.59 490.191 li
1088.41 490.191 1088.74 489.976 1088.74 490.804 cv
1088.72 491.03 li
1033.12 491.03 li
1028.09 491.03 1029.16 455.561 1029.67 455.561 cv
cp
.8 .8 .8 rgb
f
860.745 490.001 mo
860.732 489.363 860.96 488.847 861.253 488.848 cv
889.085 488.939 li
889.379 488.94 889.627 489.457 889.64 490.095 cv
889.653 490.733 889.426 491.249 889.133 491.248 cv
861.3 491.158 li
861.007 491.157 860.758 490.639 860.745 490.001 cv
cp
.878431 .878431 .878431 rgb
f
970.511 485.604 mo
970.271 487.152 968.814 488.433 967.257 488.464 cv
886.069 491.221 li
884.512 491.253 883.446 490.023 883.686 488.475 cv
891.206 439.868 li
891.446 438.32 892.903 437.039 894.46 437.007 cv
973.991 435.388 li
975.548 435.356 978.164 436.208 977.767 438.739 cv
970.511 485.604 li
cp
.968627 .968627 .968627 rgb
f
970.294 488.503 mo
970.059 490.017 968.606 491.269 967.05 491.301 cv
887.423 491.221 li
885.866 491.253 884.795 490.052 885.03 488.538 cv
892.568 440.975 li
892.804 439.462 894.256 438.209 895.813 438.177 cv
975.344 436.558 li
976.901 436.526 977.972 437.728 977.737 439.241 cv
970.294 488.503 li
cp
.878431 .878431 .878431 rgb
f
938.809 463.053 mo
939.506 458.574 936.42 455.017 931.916 455.109 cv
927.413 455.201 923.197 458.906 922.501 463.386 cv
921.804 467.865 924.89 471.422 929.394 471.33 cv
933.897 471.238 938.113 467.533 938.809 463.053 cv
cp
1 1 1 rgb
f
709.224 513.051 mo
29.1605 513.051 li
29.1605 527.44 li
709.224 527.44 li
709.224 513.051 li
cp
.113725 .231373 .239216 rgb
f
75.7485 688.652 mo
66.8051 688.652 li
66.8051 520.955 li
75.7485 520.955 li
75.7485 688.652 li
cp
f
645.398 688.652 mo
636.455 688.652 li
636.455 520.955 li
645.398 520.955 li
645.398 688.652 li
cp
f
694.626 526.437 mo
47.2633 526.437 li
46.3789 530.103 li
693.742 530.103 li
694.626 526.437 li
cp
0 .501961 .6 rgb
f
1150 491.108 mo
667.242 491.108 li
667.242 505.856 li
1150 505.856 li
1150 491.108 li
cp
.113725 .231373 .239216 rgb
f
714.992 671.086 mo
705.825 671.086 li
705.825 499.209 li
714.992 499.209 li
714.992 671.086 li
cp
f
1102.39 671.086 mo
1093.22 671.086 li
1093.22 499.209 li
1102.39 499.209 li
1102.39 671.086 li
cp
f
1150 504.828 mo
685.797 504.828 li
684.89 508.586 li
1150 508.586 li
1150 504.828 li
cp
0 .501961 .6 rgb
f
438.829 562.694 mo
438.731 564.536 437.778 566.13 436.374 567.11 cv
435.359 567.82 427.387 577.419 426.054 577.348 cv
415.638 503.136 li
417.252 500.809 425.605 492.859 426.802 491.869 cv
427.876 490.98 429.274 490.477 430.776 490.557 cv
436.885 490.882 li
440.06 491.051 442.497 493.762 442.328 496.937 cv
438.829 562.694 li
cp
.219608 .0235294 .0431373 rgb
f
428.754 572.77 mo
428.585 575.945 425.874 578.382 422.699 578.213 cv
416.59 577.888 li
413.415 577.719 410.978 575.008 411.147 571.833 cv
414.645 506.076 li
414.814 502.9 417.525 500.463 420.701 500.632 cv
426.809 500.957 li
429.985 501.126 432.422 503.837 432.253 507.012 cv
428.754 572.77 li
cp
.266667 .0313726 .0431373 rgb
f
439.048 491.29 mo
439.062 490.754 437.599 489.862 436.512 489.805 cv
430.403 489.479 li
430.273 489.472 430.144 489.469 430.016 489.469 cv
428.323 489.469 426.761 490.055 425.529 491.041 cv
424.151 492.143 417.532 498.491 415 501.619 cv
414.756 501.895 414.538 502.194 414.338 502.506 cv
414.257 502.623 li
414.291 502.577 li
413.666 503.578 413.275 504.742 413.208 505.999 cv
410.436 558.093 li
410.275 559.393 411.77 560.116 411.872 558.205 cv
414.645 506.076 li
414.814 502.9 417.526 500.463 420.701 500.632 cv
426.809 500.957 li
427.745 501.007 428.614 501.282 429.374 501.721 cv
429.428 501.59 429.484 501.46 429.539 501.33 cv
429.706 501.369 li
429.706 501.369 438.856 491.733 439.048 491.29 cv
cp
.909804 .317647 .0196078 rgb
f
414.257 502.623 mo
414.247 502.637 li
414.257 502.623 li
cp
.0235294 .133333 .2 rgb
f
429.472 504.473 mo
428.86 510.44 li
428.784 511.176 428.171 511.732 427.432 511.732 cv
427.281 511.725 li
418.452 510.819 li
418.069 510.779 417.725 510.594 417.482 510.296 cv
417.239 509.998 417.128 509.623 417.167 509.241 cv
417.778 503.274 li
417.854 502.537 418.468 501.982 419.206 501.982 cv
419.358 501.989 li
428.186 502.895 li
428.569 502.935 428.914 503.12 429.156 503.418 cv
429.399 503.716 429.511 504.091 429.472 504.473 cv
cp
428.407 500.747 mo
419.578 499.842 li
417.601 499.639 415.833 501.077 415.631 503.054 cv
415.019 509.02 li
414.816 510.997 416.254 512.764 418.231 512.967 cv
427.061 513.872 li
429.038 514.075 430.805 512.637 431.008 510.66 cv
431.62 504.694 li
431.823 502.717 430.384 500.95 428.407 500.747 cv
cp
0 0 0 rgb
f
429.742 504.293 mo
429.13 510.26 li
429.054 510.996 428.441 511.552 427.702 511.552 cv
427.551 511.545 li
418.722 510.639 li
418.339 510.599 417.995 510.414 417.752 510.116 cv
417.509 509.818 417.397 509.443 417.437 509.061 cv
418.048 503.094 li
418.124 502.358 418.738 501.802 419.476 501.802 cv
419.627 501.809 li
428.456 502.715 li
428.839 502.755 429.184 502.94 429.426 503.238 cv
429.669 503.536 429.781 503.911 429.742 504.293 cv
cp
428.677 500.567 mo
419.847 499.662 li
417.87 499.459 416.103 500.897 415.901 502.874 cv
415.289 508.84 li
415.086 510.817 416.524 512.584 418.501 512.787 cv
427.331 513.692 li
429.308 513.895 431.075 512.457 431.278 510.48 cv
431.89 504.514 li
432.092 502.537 430.654 500.77 428.677 500.567 cv
cp
f
427.005 515.962 mo
417.224 514.79 li
417.853 509.551 li
427.634 510.722 li
427.005 515.962 li
cp
.34902 .0666667 .0941176 rgb
f
410.505 554.323 mo
410.482 554.687 410.168 554.962 409.804 554.939 cv
409.441 554.916 409.165 554.602 409.188 554.238 cv
410.105 539.994 li
410.129 539.631 410.442 539.355 410.806 539.378 cv
411.17 539.402 411.445 539.715 411.422 540.079 cv
410.505 554.323 li
cp
.847059 .615686 .145098 rgb
f
473.752 647.294 mo
473.668 648.39 471.909 650.283 470.406 652.372 cv
468.904 650.283 467.145 648.39 467.061 647.294 cv
463.59 601.941 471.697 580.513 467.689 562.075 cv
467.689 562.074 li
467.637 555.268 467.48 543.908 467.008 537.091 cv
466.713 532.828 467.218 529.779 467.976 527.634 cv
469.7 527.358 470.923 528.608 470.893 533.184 cv
470.835 541.923 472.973 562.476 473.397 566.461 cv
473.296 566.881 473.193 567.293 473.097 567.732 cv
469.089 586.171 477.222 601.941 473.752 647.294 cv
cp
470.406 665.505 mo
469.282 661.755 li
469.282 661.755 469.794 660.961 470.406 659.991 cv
471.018 660.961 471.53 661.755 471.53 661.755 cv
470.406 665.505 li
cp
500.304 663.163 mo
500.304 663.163 501.784 660.18 502.544 657.638 cv
507.785 570.415 li
507.664 568.258 507.201 566.231 506.482 564.357 cv
506.636 564.331 506.779 564.307 506.934 564.28 cv
507.316 554.649 505.878 506.025 503.78 495.719 cv
501.683 485.413 493.412 465.036 493.412 465.036 cv
491.573 465.036 li
492.558 461.595 493.146 459.485 493.146 459.485 cv
439.815 459.485 li
439.815 459.485 434.478 486.661 433.064 497.513 cv
431.751 507.582 435.855 549.847 433.658 566.451 cv
433.397 567.444 433.207 568.473 433.101 569.536 cv
433.076 569.636 433.053 569.739 433.027 569.835 cv
433.075 569.843 li
433.059 570.034 433.038 570.223 433.027 570.415 cv
438.268 657.638 li
439.029 660.18 440.508 663.163 440.508 663.163 cv
440.385 663.807 438.069 668.591 437.17 669.121 cv
439.655 675.296 li
439.718 689.267 li
464.616 690.081 li
466.912 674.755 li
470.406 669.368 li
473.9 674.755 li
476.196 690.081 li
501.095 689.267 li
501.158 675.296 li
503.642 669.121 li
502.743 668.591 500.427 663.807 500.304 663.163 cv
cp
.0235294 .133333 .2 rgb
f
473.752 647.294 mo
473.668 648.39 471.909 650.283 470.406 652.372 cv
468.904 650.283 467.145 648.39 467.061 647.294 cv
463.59 601.941 471.697 580.513 467.689 562.075 cv
467.689 562.074 li
467.637 555.268 467.48 543.908 467.008 537.091 cv
466.713 532.828 467.217 529.779 467.976 527.634 cv
469.701 527.358 470.923 528.608 470.893 533.184 cv
470.835 541.923 472.973 562.476 473.397 566.461 cv
473.296 566.881 473.193 567.293 473.097 567.732 cv
469.089 586.171 477.222 601.941 473.752 647.294 cv
cp
470.406 665.505 mo
469.282 661.755 li
469.282 661.755 469.794 660.961 470.406 659.991 cv
471.018 660.961 471.53 661.755 471.53 661.755 cv
470.406 665.505 li
cp
485.531 685.267 mo
482.94 682.845 479.804 679.402 480.306 675.525 cv
480.847 671.347 484.524 668.687 488.034 666.766 cv
484.259 665.628 480.424 664.722 476.956 662.773 cv
476.631 662.59 476.659 662.061 476.935 661.856 cv
478.856 660.428 480.162 658.529 482.118 657.188 cv
475.658 650.884 478.359 639.788 478.791 631.804 cv
479.389 620.737 475.746 609.874 477.361 598.541 cv
477.459 597.854 482.37 580.133 485.699 584.281 cv
478.759 575.633 474.278 565.295 475.491 553.808 cv
476.448 544.745 476.175 533.697 480.364 525.372 cv
481.523 523.067 483.164 522.233 481.286 520.183 cv
478.186 516.8 463.795 518.256 460.149 519.787 cv
456.632 521.266 458.929 521.975 460.86 524.77 cv
466.632 533.125 464.114 545.268 463.349 554.779 cv
462.643 563.559 461.807 571.864 456.799 579.381 cv
453.789 583.896 455.169 582.11 458.229 585.464 cv
464.646 592.496 458.234 609.296 458.399 617.895 cv
458.582 627.444 461.534 636.757 461.605 646.352 cv
461.634 650.282 462.809 656.655 460.677 660.13 cv
458.344 663.932 454.395 661.758 451.53 664.259 cv
447.684 667.617 461.391 666.492 462.992 667.29 cv
469.4 670.488 459.659 673.733 456.804 673.595 cv
454.298 673.474 446.62 671.798 447.216 676.477 cv
453.109 675.797 457.32 682.684 456.165 687.886 cv
456.022 688.528 455.852 689.161 455.67 689.789 cv
464.616 690.081 li
466.912 674.755 li
470.406 669.368 li
473.9 674.755 li
476.196 690.081 li
491.094 689.594 li
489.143 688.299 487.267 686.889 485.531 685.267 cv
cp
.0156863 .105882 .14902 rgb
f
502.143 489.395 mo
498.987 478.774 493.411 465.036 493.411 465.036 cv
491.573 465.036 li
492.558 461.595 493.146 459.485 493.146 459.485 cv
439.815 459.485 li
439.815 459.485 437.33 472.14 435.302 483.627 cv
467.865 506.792 493.683 493.67 502.143 489.395 cv
cp
f
467.093 707.756 mo
467.093 704.475 466.961 696.139 465.56 689.636 cv
450.816 685.31 439.728 688.169 438.924 693.091 cv
433.458 696.578 422.649 702.664 426.466 707.888 cv
467.093 707.756 li
cp
.878431 .878431 .878431 rgb
f
466.305 707.756 mo
465.33 697.747 461.842 691.182 459.933 689.475 cv
454.182 686.99 445.105 686.649 440.56 688.821 cv
440.56 688.821 439.518 690.823 438.136 693.091 cv
432.67 696.578 421.861 702.664 425.678 707.888 cv
466.305 707.756 li
cp
1 1 1 rgb
f
468.171 709.36 mo
468.171 710.343 467.374 711.14 466.391 711.14 cv
425.583 711.14 li
424.599 711.14 423.803 710.343 423.803 709.36 cv
423.803 708.377 424.599 707.58 425.583 707.58 cv
466.391 707.58 li
467.374 707.58 468.171 708.377 468.171 709.36 cv
cp
.878431 .878431 .878431 rgb
f
459.643 692.6 mo
459.389 691.585 459.07 690.596 458.78 689.6 cv
457.158 688.996 455.349 688.502 453.411 688.166 cv
448.371 687.292 443.686 687.684 440.715 688.993 cv
440.278 689.976 439.86 690.97 439.48 691.974 cv
442.291 690.201 447.848 690.176 453.584 691.17 cv
455.95 691.58 458.033 692.332 459.792 693.263 cv
459.697 692.818 459.697 692.818 459.643 692.6 cv
cp
f
460.009 693.688 mo
458.387 693.084 454.22 692.149 452.282 691.813 cv
447.243 690.939 442.142 691.25 439.171 692.559 cv
437.608 694.122 li
440.419 692.35 454.8 693.167 460.791 696.466 cv
460.976 695.968 460.009 693.688 460.009 693.688 cv
cp
f
475.63 707.756 mo
475.63 704.475 475.762 696.139 477.164 689.636 cv
491.907 685.31 502.996 688.169 503.799 693.091 cv
509.266 696.578 520.074 702.664 516.257 707.888 cv
475.63 707.756 li
cp
f
476.418 707.756 mo
477.393 697.747 480.881 691.182 482.79 689.475 cv
488.541 686.99 497.619 686.649 502.163 688.821 cv
502.163 688.821 503.205 690.823 504.587 693.091 cv
510.053 696.578 520.862 702.664 517.045 707.888 cv
476.418 707.756 li
cp
1 1 1 rgb
f
474.552 709.36 mo
474.552 710.343 475.349 711.14 476.332 711.14 cv
517.141 711.14 li
518.124 711.14 518.921 710.343 518.921 709.36 cv
518.921 708.377 518.124 707.58 517.141 707.58 cv
476.332 707.58 li
475.349 707.58 474.552 708.377 474.552 709.36 cv
cp
.878431 .878431 .878431 rgb
f
483.081 692.6 mo
483.334 691.585 483.653 690.596 483.943 689.6 cv
485.565 688.996 487.374 688.502 489.312 688.166 cv
494.352 687.292 499.037 687.684 502.008 688.993 cv
502.446 689.976 502.863 690.97 503.244 691.974 cv
500.432 690.201 494.875 690.176 489.139 691.17 cv
486.773 691.58 484.69 692.332 482.931 693.263 cv
483.026 692.818 483.026 692.818 483.081 692.6 cv
cp
f
482.714 693.688 mo
484.336 693.084 488.503 692.149 490.441 691.813 cv
495.48 690.939 500.581 691.25 503.552 692.559 cv
505.115 694.122 li
502.304 692.35 487.924 693.167 481.932 696.466 cv
481.747 695.968 482.714 693.688 482.714 693.688 cv
cp
f
511.823 362.219 mo
515.594 364.576 520.78 371.648 522.195 385.791 cv
523.609 399.934 542.938 423.507 535.395 437.65 cv
527.852 451.793 515.83 435.293 515.123 429.635 cv
514.416 423.978 512.53 410.306 510.173 405.592 cv
507.816 400.877 501.923 391.684 501.923 391.684 cv
511.823 362.219 li
cp
.976471 .72549 .635294 rgb
f
500.859 392.719 mo
506.303 400.861 li
506.303 400.861 522.997 395.134 526.88 388.437 cv
525.812 379.701 518.241 363.298 512.029 362.424 cv
510.088 370.286 502.412 390.389 500.859 392.719 cv
cp
.729412 .564706 .278431 rgb
f
425.778 368.267 mo
425.778 368.267 411.154 371.531 412.358 394.497 cv
413.352 413.469 411.861 422.211 411.861 434.469 cv
411.861 437.766 414.264 447.988 417.508 450.733 cv
428.47 460.01 438.368 439.671 434.843 435.699 cv
429.776 429.99 434.726 424.097 433.013 399.345 cv
432.659 394.228 433.49 386.138 433.49 386.138 cv
425.778 368.267 li
cp
.976471 .72549 .635294 rgb
f
436.79 392.747 mo
435.634 400.421 li
435.634 400.421 415.166 398.864 410.737 389.726 cv
410.081 378.082 418.923 362.083 425.185 361.72 cv
426.477 369.715 435.433 390.298 436.79 392.747 cv
cp
.729412 .564706 .278431 rgb
f
436.481 481.152 mo
432.104 479.632 441.116 476.267 436.43 467.614 cv
435.814 466.477 439.042 463.328 437.031 459.563 cv
434.138 454.148 438.713 457.88 438.71 448.749 cv
438.698 406.725 431.558 375.32 431.558 375.32 cv
502.842 375.32 li
502.842 375.32 494.835 435.883 500.964 481.613 cv
473.62 496.699 436.481 481.152 436.481 481.152 cv
cp
f
444.712 352.714 mo
491.195 352.714 li
499.364 356.077 512.954 361.84 512.279 362.686 cv
508.915 374.883 502.966 403.696 483.813 403.696 cv
451.393 403.696 li
429.696 403.696 426.747 374.715 423.382 362.518 cv
423.243 361.856 436.697 356.087 444.712 352.714 cv
cp
.839216 .635294 .337255 rgb
f
437.271 468.215 mo
437.271 468.215 452.893 477.829 468.876 482.035 cv
459.142 481.915 442.198 479.511 437.271 468.215 cv
cp
f
419.721 502.899 mo
494.567 353.206 li
494.567 353.206 504.643 354.646 506.802 358.964 cv
503.563 367.6 430.516 500.74 427.637 504.338 cv
421.52 503.259 419.721 502.899 419.721 502.899 cv
cp
.34902 .0666667 .0941176 rgb
f
480.195 381.95 mo
436.143 470.054 li
436.749 470.297 437.355 470.54 437.96 470.784 cv
440.303 471.726 442.619 472.778 444.952 473.78 cv
458.539 449.261 477.278 414.999 490.583 390.208 cv
487.16 387.397 483.699 384.648 480.195 381.95 cv
cp
.266667 .0313726 .0431373 rgb
f
465.382 317.785 mo
465.028 317.785 li
465.382 317.785 li
.909804 .317647 .0196078 rgb
f
479.195 337.27 mo
482.178 348.493 li
490.63 352.908 li
467.732 371.246 li
444.255 352.906 li
453.277 348.536 li
456.27 337.27 li
479.195 337.27 li
cp
1 .780392 .690196 rgb
f
479.195 337.27 mo
482.178 348.493 li
491.256 352.739 li
467.732 371.246 li
467.626 354.908 li
454.405 344.293 li
456.27 337.27 li
479.195 337.27 li
cp
.827451 .592157 .533333 rgb
f
439.995 305.994 mo
440.751 305.855 441.529 306.058 442.278 306.539 cv
442.717 290.219 446.108 273.653 468.344 273.653 cv
489.528 273.653 494.056 290.315 494.415 306.718 cv
495.243 306.11 496.114 305.838 496.959 305.994 cv
499.65 306.491 499.861 310.993 498.893 316.233 cv
497.926 321.474 496.146 325.47 493.454 324.973 cv
492.646 324.824 491.956 324.298 491.41 323.496 cv
491.41 335.952 478.348 348.852 468.344 348.852 cv
458.406 348.852 445.366 336.396 445.366 323.74 cv
444.85 324.404 444.222 324.84 443.499 324.973 cv
440.808 325.47 439.412 321.474 438.444 316.233 cv
437.476 310.993 437.303 306.491 439.995 305.994 cv
1 .780392 .690196 rgb
f
445.37 324.056 mo
444.854 324.72 444.226 325.155 443.503 325.289 cv
440.913 325.767 439.518 321.481 438.444 316.544 cv
440.558 320.799 442.425 324.738 444.579 320.957 cv
444.738 320.678 444.126 308.561 444.438 308.52 cv
444.329 308.134 442.382 307.214 442.283 306.823 cv
442.556 296.772 443.954 286.633 450.186 280.331 cv
448.422 286.877 447.41 294.482 447.41 302.598 cv
447.41 327.114 456.953 343.007 468.328 343.007 cv
479.704 343.007 488.604 327.114 488.604 302.598 cv
488.604 294.365 487.563 286.657 485.751 280.049 cv
491.772 285.831 494.253 295.214 494.512 307.034 cv
494.109 307.315 491.908 308.875 491.908 308.875 cv
492.219 308.916 491.426 320.181 491.553 320.476 cv
492.618 322.962 495.1 323.379 498.253 319.373 cv
497.271 323.644 495.378 325.644 493.458 325.289 cv
492.65 325.14 491.96 324.614 491.414 323.812 cv
491.414 336.267 478.353 348.84 468.347 348.84 cv
458.41 348.84 445.37 336.712 445.37 324.056 cv
.858824 .631373 .552941 rgb
f
453.357 304.593 mo
453.37 305.258 455.653 304.465 458.499 304.519 cv
461.345 304.573 463.639 305.453 463.663 304.788 cv
463.708 303.572 461.661 301.534 458.815 301.48 cv
455.968 301.426 453.33 303.296 453.357 304.593 cv
cp
f
483.072 304.87 mo
482.955 305.526 480.675 304.509 477.83 304.51 cv
474.984 304.511 472.8 305.539 472.769 304.873 cv
472.665 302.625 474.979 301.166 477.824 301.165 cv
480.669 301.164 483.437 302.822 483.072 304.87 cv
cp
f
453.361 304.061 mo
453.336 305.368 455.752 303.396 458.599 303.45 cv
461.445 303.504 463.643 305.564 463.667 304.256 cv
463.692 302.949 461.425 300.78 458.579 300.726 cv
455.733 300.672 453.385 302.753 453.361 304.061 cv
cp
.847059 .615686 .145098 rgb
f
483.081 304.061 mo
483.106 305.368 480.69 303.396 477.844 303.45 cv
474.998 303.504 472.8 305.564 472.775 304.256 cv
472.75 302.949 475.017 300.78 477.863 300.726 cv
480.709 300.672 483.057 302.753 483.081 304.061 cv
cp
f
477.109 312.793 mo
477.109 314.1 478.169 315.16 479.477 315.16 cv
480.785 315.16 481.845 314.1 481.845 312.793 cv
481.845 311.485 480.785 310.425 479.477 310.425 cv
478.169 310.425 477.109 311.485 477.109 312.793 cv
.184314 .0117647 0 rgb
f
477.586 312.095 mo
477.586 312.753 478.12 313.287 478.779 313.287 cv
479.438 313.287 479.971 312.753 479.971 312.095 cv
479.971 311.436 479.438 310.902 478.779 310.902 cv
478.12 310.902 477.586 311.436 477.586 312.095 cv
1 1 1 rgb
f
458.412 313.16 mo
458.412 314.468 459.472 315.528 460.779 315.528 cv
462.087 315.528 463.147 314.468 463.147 313.16 cv
463.147 311.853 462.087 310.793 460.779 310.793 cv
459.472 310.793 458.412 311.853 458.412 313.16 cv
.184314 .0117647 0 rgb
f
458.735 312.462 mo
458.735 313.121 459.269 313.655 459.928 313.655 cv
460.586 313.655 461.12 313.121 461.12 312.462 cv
461.12 311.804 460.586 311.27 459.928 311.27 cv
459.269 311.27 458.735 311.804 458.735 312.462 cv
1 1 1 rgb
f
472.67 328.29 mo
472.331 329.65 470.483 330.689 468.253 330.689 cv
466.024 330.689 464.176 329.65 463.836 328.29 cv
472.67 328.29 li
cp
.858824 .631373 .552941 rgb
f
495.86 306.253 mo
495.86 306.253 505.685 288.682 492.1 272.777 cv
475.995 257.199 472.109 252.124 471.888 247.926 cv
468.133 249.915 461.154 258.425 460.713 260.413 cv
459.387 259.971 458.504 257.32 459.166 255.553 cv
455.19 257.099 449.226 264.61 448.563 267.702 cv
447.68 266.819 447.68 266.156 447.9 265.052 cv
444.366 267.702 429.822 284.806 441.509 306.459 cv
442.665 307.235 444.378 308.417 444.378 308.417 cv
444.553 317.919 li
447.68 307.243 li
447.68 307.243 443.863 288.9 450.458 291.413 cv
459.351 294.8 476.901 293.788 485.295 290.917 cv
493.689 288.045 489.208 306.138 489.208 307.464 cv
489.208 308.789 492.08 317.846 492.08 317.846 cv
492.591 308.524 li
495.86 306.253 li
.847059 .615686 .145098 rgb
f
497.291 284.485 mo
492.652 288.461 480.503 292.658 467.47 292.437 cv
454.437 292.216 427.93 288.24 446.706 267.255 cv
446.264 268.801 443.171 292.879 494.42 284.264 cv
481.608 284.927 433.01 280.951 457.751 257.756 cv
457.53 259.965 452.007 271.452 490.443 282.055 cv
477.19 276.312 452.007 264.604 471.005 249.804 cv
470.342 252.897 472.993 262.616 481.387 268.139 cv
489.781 273.661 496.458 279.267 497.291 284.485 cv
cp
.937255 .67451 .215686 rgb
f
446.704 310.039 mo
446.155 308.755 464.02 309.951 464.679 311.509 cv
465.8 314.863 464.853 318.703 463.651 320.87 cv
462.256 323.382 452.318 322.195 451.332 321.857 cv
448.63 320.93 447.775 315.331 446.704 310.039 cv
472.524 311.509 mo
473.182 309.951 491.048 308.755 490.498 310.039 cv
489.427 315.331 488.573 320.93 485.87 321.857 cv
484.884 322.195 474.946 323.382 473.552 320.87 cv
472.35 318.703 471.403 314.863 472.524 311.509 cv
445.732 310.563 mo
445.903 311.46 447.407 318.028 448.772 320.9 cv
450.138 323.771 457.278 323.502 460.891 323.233 cv
464.466 322.966 465.015 320.012 465.841 317.49 cv
466.937 314.141 470.2 314.127 471.362 317.49 cv
472.228 319.998 472.736 322.966 476.312 323.233 cv
479.925 323.502 487.065 323.771 488.43 320.9 cv
489.796 318.028 491.299 311.46 491.47 310.563 cv
493.09 310.563 494.235 307.952 490.82 307.798 cv
484.534 307.513 471.006 308.324 470.287 310.827 cv
469.922 312.097 467.057 311.957 466.642 310.716 cv
465.815 308.247 453.498 307.9 446.383 307.798 cv
442.964 307.748 444.113 310.563 445.732 310.563 cv
.184314 .0117647 0 rgb
f
479.579 322.434 mo
476.891 322.434 474.225 322.083 473.552 320.87 cv
472.726 319.38 472.02 317.099 472.023 314.73 cv
472.025 313.653 472.174 312.557 472.524 311.509 cv
472.987 310.413 481.971 309.496 487.063 309.496 cv
487.53 309.496 487.964 309.503 488.356 309.519 cv
488.34 309.742 488.323 309.961 488.305 310.181 cv
487.96 310.167 487.55 310.159 487.063 310.159 cv
484.922 310.159 482.436 310.303 480.155 310.524 cv
479.94 310.46 479.713 310.425 479.477 310.425 cv
478.169 310.425 477.109 311.485 477.109 312.793 cv
477.109 314.1 478.169 315.16 479.477 315.16 cv
480.764 315.16 481.812 314.133 481.844 312.853 cv
484.312 313.32 487.194 312.908 487.541 316.505 cv
487.256 318.249 486.918 319.92 486.53 321.516 cv
486.323 321.662 486.103 321.777 485.87 321.857 cv
485.36 322.032 482.457 322.434 479.579 322.434 cv
.956863 .890196 .847059 rgb
f
486.53 321.516 mo
486.918 319.92 487.256 318.249 487.541 316.505 cv
487.614 317.261 487.575 318.194 487.397 319.349 cv
488.357 317.425 488.966 314.363 489.559 311.362 cv
489.628 311.014 489.697 310.665 489.766 310.317 cv
489.519 310.269 489.075 310.212 488.305 310.181 cv
488.323 309.961 488.34 309.742 488.356 309.519 cv
488.867 309.54 489.306 309.575 489.652 309.625 cv
489.807 310.222 489.992 310.893 490.19 311.588 cv
489.334 315.919 488.488 320.131 486.53 321.516 cv
.886274 .815686 .776471 rgb
f
479.477 315.16 mo
478.169 315.16 477.109 314.1 477.109 312.793 cv
477.109 311.485 478.169 310.425 479.477 310.425 cv
479.713 310.425 479.94 310.46 480.155 310.524 cv
479.667 310.571 479.188 310.622 478.723 310.676 cv
478.758 310.754 478.795 310.83 478.833 310.903 cv
478.815 310.903 478.797 310.902 478.779 310.902 cv
478.12 310.902 477.586 311.436 477.586 312.095 cv
477.586 312.753 478.12 313.287 478.779 313.287 cv
479.412 313.287 479.93 312.794 479.969 312.17 cv
480.522 312.531 481.168 312.725 481.844 312.853 cv
481.812 314.133 480.764 315.16 479.477 315.16 cv
.54902 .505882 .501961 rgb
f
478.779 313.287 mo
478.12 313.287 477.586 312.753 477.586 312.095 cv
477.586 311.436 478.12 310.902 478.779 310.902 cv
478.797 310.902 478.815 310.903 478.833 310.903 cv
479.129 311.472 479.518 311.876 479.969 312.17 cv
479.93 312.794 479.412 313.287 478.779 313.287 cv
.956863 .996078 1 rgb
f
490.19 311.588 mo
489.992 310.893 489.807 310.222 489.652 309.625 cv
490.197 309.705 490.511 309.822 490.511 309.982 cv
490.511 310.001 490.507 310.019 490.498 310.039 cv
490.394 310.554 490.292 311.072 490.19 311.588 cv
.882353 .807843 .572549 rgb
f
479.579 322.434 mo
476.891 322.434 474.225 322.083 473.552 320.87 cv
472.726 319.38 472.02 317.099 472.023 314.73 cv
472.02 317.099 472.726 319.38 473.552 320.87 cv
474.225 322.083 476.891 322.434 479.579 322.434 cv
482.457 322.434 485.36 322.032 485.87 321.857 cv
486.103 321.777 486.323 321.662 486.53 321.516 cv
488.488 320.131 489.334 315.919 490.19 311.588 cv
490.292 311.072 490.394 310.554 490.498 310.039 cv
490.507 310.019 490.511 310.001 490.511 309.982 cv
490.511 310.001 490.507 310.019 490.498 310.039 cv
489.427 315.331 488.573 320.93 485.87 321.857 cv
485.36 322.032 482.457 322.434 479.579 322.434 cv
.54902 .505882 .501961 rgb
f
457.623 322.434 mo
454.745 322.434 451.842 322.032 451.332 321.857 cv
450.408 321.54 449.7 320.676 449.125 319.465 cv
448.453 316.421 447.963 313.126 447.683 309.608 cv
448.288 309.531 449.139 309.496 450.14 309.496 cv
455.232 309.496 464.215 310.413 464.679 311.509 cv
465.029 312.557 465.177 313.653 465.179 314.73 cv
465.183 317.099 464.477 319.38 463.651 320.87 cv
462.977 322.083 460.311 322.434 457.623 322.434 cv
462.08 315.139 mo
463.242 316.019 463.753 317.584 462.93 320.727 cv
462.925 320.743 462.926 320.75 462.93 320.75 cv
462.949 320.75 463.051 320.586 463.071 320.548 cv
464.278 318.373 465.05 314.845 464.084 311.823 cv
463.851 311.646 463.133 311.436 462.144 311.226 cv
461.758 310.953 461.287 310.793 460.779 310.793 cv
460.576 310.793 460.378 310.818 460.19 310.867 cv
457.867 310.493 455.021 310.192 453.081 310.192 cv
452.843 310.192 452.617 310.196 452.409 310.206 cv
453.529 312.944 456.143 313.433 458.534 313.914 cv
458.849 314.852 459.735 315.528 460.779 315.528 cv
461.26 315.528 461.707 315.385 462.08 315.139 cv
.956863 .890196 .847059 rgb
f
449.125 319.465 mo
448.053 317.206 447.446 313.739 446.768 310.356 cv
446.941 309.764 li
447.111 309.7 447.363 309.648 447.683 309.608 cv
447.963 313.126 448.453 316.421 449.125 319.465 cv
.886274 .815686 .776471 rgb
f
460.779 315.528 mo
459.735 315.528 458.849 314.852 458.534 313.914 cv
459.894 314.187 461.182 314.458 462.08 315.139 cv
461.707 315.385 461.26 315.528 460.779 315.528 cv
462.144 311.226 mo
461.57 311.104 460.905 310.982 460.19 310.867 cv
460.378 310.818 460.576 310.793 460.779 310.793 cv
461.287 310.793 461.758 310.953 462.144 311.226 cv
.54902 .505882 .501961 rgb
f
446.768 310.356 mo
446.747 310.25 446.725 310.144 446.704 310.039 cv
446.696 310.019 446.692 310.001 446.692 309.982 cv
446.691 309.898 446.779 309.825 446.941 309.764 cv
446.768 310.356 li
.882353 .807843 .572549 rgb
f
457.623 322.434 mo
454.745 322.434 451.842 322.032 451.332 321.857 cv
448.63 320.93 447.775 315.331 446.704 310.039 cv
446.696 310.019 446.692 310.001 446.692 309.982 cv
446.692 310.001 446.696 310.019 446.704 310.039 cv
446.725 310.144 446.747 310.25 446.768 310.356 cv
447.446 313.739 448.053 317.206 449.125 319.465 cv
449.7 320.676 450.408 321.54 451.332 321.857 cv
451.842 322.032 454.745 322.434 457.623 322.434 cv
460.311 322.434 462.977 322.083 463.651 320.87 cv
464.477 319.38 465.183 317.099 465.179 314.73 cv
465.183 317.099 464.477 319.38 463.651 320.87 cv
462.977 322.083 460.311 322.434 457.623 322.434 cv
.54902 .505882 .501961 rgb
f
487.541 316.505 mo
487.194 312.908 484.312 313.32 481.844 312.853 cv
481.844 312.833 481.845 312.813 481.845 312.793 cv
481.845 311.721 481.132 310.815 480.155 310.524 cv
482.436 310.303 484.922 310.159 487.063 310.159 cv
487.55 310.159 487.96 310.167 488.305 310.181 cv
488.126 312.38 487.869 314.491 487.541 316.505 cv
.933333 .945098 .92549 rgb
f
487.397 319.349 mo
487.575 318.194 487.614 317.261 487.541 316.505 cv
487.869 314.491 488.126 312.38 488.305 310.181 cv
489.075 310.212 489.519 310.269 489.766 310.317 cv
489.697 310.665 489.628 311.014 489.559 311.362 cv
488.966 314.363 488.357 317.425 487.397 319.349 cv
.901961 .905882 .890196 rgb
f
481.844 312.853 mo
481.168 312.725 480.522 312.531 479.969 312.17 cv
479.97 312.145 479.971 312.12 479.971 312.095 cv
479.971 311.454 479.466 310.932 478.833 310.903 cv
478.795 310.83 478.758 310.754 478.723 310.676 cv
479.188 310.622 479.667 310.571 480.155 310.524 cv
481.132 310.815 481.845 311.721 481.845 312.793 cv
481.845 312.813 481.844 312.833 481.844 312.853 cv
.733333 .752941 .752941 rgb
f
479.969 312.17 mo
479.518 311.876 479.129 311.472 478.833 310.903 cv
479.466 310.932 479.971 311.454 479.971 312.095 cv
479.971 312.12 479.97 312.145 479.969 312.17 cv
.933333 .996078 1 rgb
f
462.93 320.75 mo
462.926 320.75 462.925 320.743 462.93 320.727 cv
463.753 317.584 463.242 316.019 462.08 315.139 cv
462.723 314.715 463.147 313.987 463.147 313.16 cv
463.147 312.361 462.751 311.654 462.144 311.226 cv
463.133 311.436 463.851 311.646 464.084 311.823 cv
465.05 314.845 464.278 318.373 463.071 320.548 cv
463.051 320.586 462.949 320.75 462.93 320.75 cv
458.534 313.914 mo
456.143 313.433 453.529 312.944 452.409 310.206 cv
452.617 310.196 452.843 310.192 453.081 310.192 cv
455.021 310.192 457.867 310.493 460.19 310.867 cv
459.167 311.129 458.412 312.056 458.412 313.16 cv
458.412 313.424 458.455 313.677 458.534 313.914 cv
.933333 .945098 .92549 rgb
f
462.08 315.139 mo
461.182 314.458 459.894 314.187 458.534 313.914 cv
458.455 313.677 458.412 313.424 458.412 313.16 cv
458.412 312.056 459.167 311.129 460.19 310.867 cv
460.905 310.982 461.57 311.104 462.144 311.226 cv
462.751 311.654 463.147 312.361 463.147 313.16 cv
463.147 313.987 462.723 314.715 462.08 315.139 cv
459.928 311.27 mo
459.269 311.27 458.735 311.804 458.735 312.462 cv
458.735 313.121 459.269 313.655 459.928 313.655 cv
460.586 313.655 461.12 313.121 461.12 312.462 cv
461.12 311.804 460.586 311.27 459.928 311.27 cv
.733333 .752941 .752941 rgb
f
459.928 313.655 mo
459.269 313.655 458.735 313.121 458.735 312.462 cv
458.735 311.804 459.269 311.27 459.928 311.27 cv
460.586 311.27 461.12 311.804 461.12 312.462 cv
461.12 313.121 460.586 313.655 459.928 313.655 cv
.933333 .996078 1 rgb
f
471.7 335.582 mo
471.7 334.769 471.04 334.109 470.227 334.109 cv
469.413 334.109 468.753 334.769 468.753 335.582 cv
468.753 336.396 469.413 337.056 470.227 337.056 cv
471.04 337.056 471.7 336.396 471.7 335.582 cv
cp
.184314 .0117647 0 rgb
f
474.298 452.821 mo
476.798 451.558 480.349 449.704 483.076 445.787 cv
485.198 442.741 486.704 442.865 488.606 444.868 cv
490.508 446.871 488.094 451.782 485.154 453.953 cv
483.003 455.542 474.298 452.821 474.298 452.821 cv
cp
.976471 .72549 .635294 rgb
f
465.916 466.485 mo
468.841 467.106 485.321 466.721 487.639 457.323 cv
485.327 453.974 470.894 454.174 466.576 460.035 cv
462.258 465.896 465.916 466.485 465.916 466.485 cv
cp
f
434.497 432.621 mo
443.143 436.862 454.642 453.299 465.482 457.083 cv
467.778 457.209 469.934 454.92 472.793 453.463 cv
469.745 456.843 466.919 460.796 465.241 465.231 cv
464.613 465.031 464.308 464.971 463.117 464.718 cv
454.11 462.806 457.426 461.909 429.773 455.573 cv
422.445 453.894 413.056 447.533 414.374 439.791 cv
415.625 432.437 423.718 427.333 434.497 432.621 cv
cp
1 .780392 .690196 rgb
f
429.219 430.601 mo
416.019 431.858 414.38 443.249 444.992 455.337 cv
471.504 465.807 460.398 458.922 466.082 457.061 cv
468.162 456.812 470.187 454.785 472.799 453.456 cv
469.748 456.837 466.954 460.761 465.275 465.199 cv
464.646 464.999 464.308 464.971 463.117 464.718 cv
454.11 462.806 463.261 464.042 435.608 457.705 cv
428.281 456.026 412.934 453.711 414.374 439.791 cv
414.588 437.719 416.545 428.119 429.219 430.601 cv
cp
.976471 .72549 .635294 rgb
f
493.303 454.89 mo
493.861 453.006 492.544 453.155 493.321 451.371 cv
491.556 450.524 489.783 449.588 488.553 448.654 cv
485.031 445.978 483.308 448.635 480.331 449.403 cv
477.63 450.1 476.869 451.842 474.228 452.399 cv
472.193 452.828 471.304 455.204 469.756 456.379 cv
463.928 460.802 465.072 463.709 465.1 465.224 cv
468.65 463.406 li
470.31 464.42 473.692 466.091 475.251 467.67 cv
475.483 468.913 476.022 471.001 476.843 472.18 cv
476.759 473.672 478.003 477.427 481.121 477.016 cv
481.977 476.903 482.222 475.577 481.034 472.91 cv
480.682 472.121 480.174 468.13 479.849 467.058 cv
479.524 465.987 475.661 461.586 475.46 461.148 cv
475.259 460.711 477.676 463.143 480.349 465.778 cv
480.597 466.022 480.872 467.544 482.217 470.679 cv
482.415 479.012 488.112 476.903 487.663 475.197 cv
487.449 474.327 486.655 471.742 486.367 470.269 cv
486.288 469.862 485.459 464.52 485.116 464.003 cv
484.57 463.178 482.11 460.332 480.414 457.371 cv
480.337 457.568 485.756 461.373 486.736 461.872 cv
487.365 462.193 487.914 465.111 488.927 468.362 cv
488.883 470.03 489.078 471.139 489.537 472.782 cv
490.57 476.485 495.013 475.394 494.523 473.66 cv
493.966 471.691 494.353 470.697 493.743 468.651 cv
492.854 465.672 493.161 462.689 492.904 461.261 cv
492.474 458.871 489.183 456.218 487.515 454.772 cv
489.254 455.599 490.193 454.635 493.303 454.89 cv
cp
1 .780392 .690196 rgb
f
468.573 461.099 mo
468.489 462.591 475.059 465.787 475.683 466.616 cv
476.059 467.116 476.533 470.144 477.602 472.157 cv
477.923 474.53 478.722 475.955 481.833 476.089 cv
481.7 476.592 481.365 476.983 481.121 477.016 cv
478.003 477.427 476.759 473.672 476.843 472.18 cv
476.022 471.001 475.483 468.913 475.251 467.67 cv
473.692 466.091 472.88 465.907 471.22 464.892 cv
471.22 464.892 467.44 469.06 463.482 464.794 cv
462.035 463.234 465.225 461.952 465.269 461.867 cv
466.1 465.133 468.612 460.411 468.573 461.099 cv
cp
.976471 .72549 .635294 rgb
f
482.217 470.679 mo
480.872 467.544 480.597 466.022 480.349 465.778 cv
478.042 463.504 475.931 461.386 475.523 461.128 cv
477.803 460.239 478.813 463.588 481.736 465.339 cv
482.062 468.247 482.778 468.811 483.396 470.67 cv
483.218 475.147 485.989 475.64 487.6 475.76 cv
486.922 477.24 482.393 478.096 482.217 470.679 cv
cp
f
489.537 472.782 mo
489.078 471.139 488.883 470.031 488.927 468.362 cv
487.914 465.111 487.365 462.193 486.736 461.872 cv
485.85 461.421 481.351 458.277 480.549 457.53 cv
480.224 457.339 480.756 456.803 481.023 456.668 cv
482.428 455.957 483.656 457.814 485.115 459.079 cv
486.795 460.535 487.386 460.398 488.959 460.846 cv
488.533 462.03 488.704 463.181 488.995 464.588 cv
489.426 466.678 489.815 467.419 490.607 468.393 cv
490.092 469.174 489.856 470.232 490.178 471.874 cv
490.563 473.838 492.758 473.82 494.533 474.146 cv
493.523 476.011 490.31 475.553 489.537 472.782 cv
cp
f
488.497 448.695 mo
493.126 450.855 495.978 451.151 498.183 451.631 cv
500.388 452.111 504.021 454.19 509.727 455.095 cv
511.094 455.311 512.006 457.731 510.559 459.108 cv
509.111 460.485 507.404 460.484 503.807 459.386 cv
500.596 458.406 498.674 458.515 495.685 457.635 cv
492.696 456.755 489.057 455.987 487.912 455.183 cv
486.767 454.38 488.497 448.695 488.497 448.695 cv
cp
1 .780392 .690196 rgb
f
469.702 371.565 mo
474.994 408.423 li
475.103 409.019 476.026 409.49 477.059 409.49 cv
489.632 409.49 li
490.664 409.49 491.587 409.019 491.696 408.423 cv
496.988 371.565 li
469.702 371.565 li
cp
.909804 .317647 .0196078 rgb
f
469.702 370.066 mo
474.994 362.899 li
475.103 362.783 476.026 362.691 477.059 362.691 cv
489.632 362.691 li
490.664 362.691 491.587 362.783 491.696 362.899 cv
496.988 370.066 li
469.702 370.066 li
cp
f
481.272 369.359 mo
495.587 369.359 li
491.258 363.496 li
491.001 363.453 490.423 363.399 489.632 363.399 cv
481.272 363.399 li
481.272 369.359 li
cp
1 .392157 .121569 rgb
f
498.52 370.912 mo
498.52 371.645 497.926 372.238 497.194 372.238 cv
469.084 372.238 li
468.351 372.238 467.758 371.645 467.758 370.912 cv
467.758 370.18 468.351 369.586 469.084 369.586 cv
497.194 369.586 li
497.926 369.586 498.52 370.18 498.52 370.912 cv
cp
.878431 .878431 .878431 rgb
f
495.832 370.199 mo
481.154 370.199 li
481.154 371.626 li
495.832 371.626 li
496.226 371.626 496.545 371.306 496.545 370.912 cv
496.545 370.518 496.226 370.199 495.832 370.199 cv
cp
1 1 1 rgb
f
475.713 373.308 mo
470.702 373.308 li
475.606 407.465 li
475.707 408.017 476.563 408.454 477.519 408.454 cv
478.542 408.454 li
475.713 373.308 li
cp
.768627 .235294 0 rgb
f
485.614 373.308 mo
484.553 408.454 li
489.171 408.454 li
490.128 408.454 490.983 408.017 491.084 407.465 cv
495.988 373.308 li
485.614 373.308 li
cp
1 .392157 .121569 rgb
f
493.241 397.663 mo
495.338 383.056 li
471.352 383.056 li
473.449 397.663 li
493.241 397.663 li
cp
.203922 .00784314 .0117647 rgb
f
476.598 383.056 mo
472.178 383.056 li
474.299 397.663 li
477.703 397.663 li
476.598 383.056 li
cp
.156863 .00392157 .0117647 rgb
f
485.47 383.056 mo
484.73 397.663 li
492.509 397.663 li
494.453 383.056 li
485.47 383.056 li
cp
.329412 .0313726 .0470588 rgb
f
470.571 334.757 mo
469.982 334.492 469.069 335.612 469.982 336.113 cv
472.828 337.673 482.711 342.654 482.711 342.654 cv
482.711 362.712 li
484.597 362.712 li
484.597 341.357 li
484.597 341.357 474.461 336.466 470.571 334.757 cv
cp
.768627 .235294 0 rgb
f
531.467 420.857 mo
524.864 414.708 506.294 411.085 499.404 402.728 cv
498.557 400.673 499.944 397.726 500.353 394.486 cv
498.261 398.712 495.579 402.976 492.094 406.389 cv
492.476 406.881 492.628 407.136 493.237 408.122 cv
497.844 415.587 497.599 412.164 512.167 434.884 cv
516.028 440.904 524.79 446.842 531.388 442.364 cv
537.656 438.111 539.7 428.524 531.467 420.857 cv
cp
1 .780392 .690196 rgb
f
534.085 423.808 mo
537.157 436.461 528.251 443.818 507.525 420.808 cv
489.573 400.88 499.359 408.173 499.233 402.168 cv
498.795 400.152 499.986 397.437 500.357 394.478 cv
498.265 398.707 495.599 402.929 492.112 406.344 cv
492.494 406.837 492.628 407.136 493.237 408.122 cv
497.844 415.587 493.804 407.705 508.372 430.425 cv
512.232 436.446 519.228 449.562 531.388 442.364 cv
533.198 441.293 540.379 434.4 534.085 423.808 cv
cp
.976471 .72549 .635294 rgb
f
499.683 377.983 mo
497.904 376.927 495.76 374.846 494.026 373.121 cv
491.792 370.898 490.501 371.592 489.253 371.972 cv
487.219 372.591 484.641 373.037 483.065 373.651 cv
480.038 374.831 478.048 375.764 477.584 375.95 cv
476.816 376.257 476.925 380.66 480.59 379.927 cv
484.126 379.22 484.921 378.248 484.921 378.248 cv
485.532 378.117 489.734 378.049 490.313 377.718 cv
491.388 379.407 494.007 380.751 494.468 381.519 cv
492.625 380.597 489.17 378.694 486.866 379.309 cv
485.489 379.676 482.883 381.216 479.899 381.658 cv
477.849 381.961 477.072 382.736 475.109 383.056 cv
473.38 383.338 473.81 387.879 477.496 387.264 cv
479.132 386.992 480.199 386.703 481.698 385.958 cv
484.968 385.516 487.789 384.789 488.28 385.231 cv
489.046 385.921 494.224 389.29 494.378 389.137 cv
491.152 388.829 487.787 387.772 486.866 387.618 cv
486.287 387.521 481.18 389.016 480.786 389.114 cv
479.359 389.471 476.761 389.833 475.905 390.005 cv
474.215 390.312 474.121 396.434 481.739 393.098 cv
485.01 393.01 486.477 392.621 486.777 392.745 cv
490.02 394.088 492.995 395.28 492.535 395.28 cv
492.074 395.28 486.852 393.591 485.777 393.744 cv
484.701 393.898 480.921 395.116 480.094 395.127 cv
477.296 395.162 476.173 395.946 476.344 396.78 cv
476.966 399.817 480.767 399.375 482.092 398.667 cv
483.423 398.923 485.488 398.537 486.689 398.225 cv
488.618 398.991 491.212 401.392 492.661 402.488 cv
491.933 406.776 li
493.315 406.161 496.528 405.725 498.678 398.506 cv
499.25 396.588 501.119 394.769 500.859 392.719 cv
500.521 390.058 501.858 388.624 501.628 385.85 cv
501.375 382.791 503.233 380.088 499.683 377.983 cv
cp
1 .780392 .690196 rgb
f
470.041 373.919 mo
468.646 373.11 467.451 372.845 466.753 373.891 cv
464.404 377.415 467.515 380.587 469.984 381.127 cv
470.362 381.209 470.731 381.243 471.094 381.254 cv
470.041 373.919 li
cp
.976471 .72549 .635294 rgb
f
494.777 401.584 mo
493.451 402.292 488.457 397.607 487.507 397.384 cv
486.934 397.25 484.037 398.093 481.871 397.96 cv
479.617 398.667 478.07 398.535 476.956 395.735 cv
476.543 396.07 476.295 396.542 476.344 396.78 cv
476.966 399.817 480.767 399.375 482.092 398.667 cv
483.423 398.923 485.488 398.537 486.689 398.225 cv
488.618 398.991 491.095 401.302 492.544 402.399 cv
491.933 406.776 li
493.916 406.582 495.071 405.019 495.135 404.943 cv
491.908 405.558 495.388 401.259 494.777 401.584 cv
cp
f
481.739 393.098 mo
485.01 393.01 486.477 392.621 486.777 392.745 cv
489.575 393.903 492.169 394.949 492.533 395.214 cv
492.612 392.745 489.253 393.231 486.733 391.286 cv
483.993 392.215 483.253 391.794 481.37 392.011 cv
477.369 394.065 476.037 391.728 475.415 390.3 cv
474.289 391.547 474.959 396.067 481.739 393.098 cv
cp
f
477.496 387.264 mo
479.132 386.992 480.199 386.703 481.698 385.958 cv
484.968 385.516 487.789 384.789 488.28 385.231 cv
488.973 385.854 493.257 388.659 494.191 389.08 cv
494.468 389.297 494.784 388.583 494.821 388.281 cv
495.017 386.69 492.941 386.346 491.33 385.541 cv
489.474 384.612 489.409 384.012 488.501 382.756 cv
487.564 383.648 486.466 383.976 485.098 384.303 cv
483.065 384.789 482.269 384.745 481.134 384.429 cv
480.59 385.231 479.706 385.894 478.115 386.292 cv
476.212 386.768 475.527 384.744 474.665 383.252 cv
473.297 384.966 474.737 387.724 477.496 387.264 cv
cp
f
490.674 375.118 mo
489.686 375.555 487.352 377.276 484.426 376.593 cv
483.639 378.027 482.137 378.557 480.59 378.513 cv
479.019 378.468 477.962 377.557 477.263 376.492 cv
476.982 377.726 477.611 380.523 480.59 379.927 cv
484.126 379.22 484.921 378.248 484.921 378.248 cv
485.532 378.117 489.734 378.049 490.313 377.718 cv
491.232 379.161 493.604 380.723 494.468 381.519 cv
494.963 380.459 493.545 379.313 492.877 378.513 cv
492.026 377.495 491.381 376.228 490.674 375.118 cv
cp
f
235.937 345.345 mo
235.705 344.217 234.913 342.77 234.711 340.894 cv
234.285 336.931 232.151 335.589 230.952 337.356 cv
229.753 339.123 232.557 343.504 231.362 348.913 cv
235.937 345.345 li
cp
f
242.731 332.966 mo
242.057 333.466 240.099 336.511 239.933 338.497 cv
238.59 340.263 237.361 344.499 237.413 344.38 cv
237.413 344.38 235.564 341.88 235.302 341.727 cv
233.404 341.262 229.94 339.493 229.486 339.452 cv
226.288 339.802 224.687 339.907 224.356 340.197 cv
224.063 341.63 225.721 342.597 228.7 342.017 cv
229.983 343.093 232.134 343.962 232.38 344.064 cv
229.735 343.838 227.831 344.583 226.549 345.093 cv
223.774 346.168 222.411 345.92 222.246 346.527 cv
222.025 349.617 225.869 347.828 225.394 348.322 cv
225.097 348.632 224.301 349.442 223.79 349.782 cv
222.976 350.325 224.728 352.485 227.246 349.994 cv
228.201 350.422 229.211 350.186 229.211 350.186 cv
229.211 350.186 229.055 350.899 229.213 351.703 cv
229.21 351.846 228.398 353.66 226.806 356.295 cv
225.213 358.929 226.579 362.203 226.579 362.203 cv
226.124 364.323 li
223.024 377.625 213.359 400.12 209.786 406.186 cv
203.462 403.531 196.005 400.11 192.088 396.26 cv
187.401 391.651 182.375 390.436 182.375 390.436 cv
174.001 395.384 174.381 423.851 180.457 405.782 cv
180.457 405.782 201.521 420.707 211.199 423.485 cv
215.474 424.33 221.439 418.512 222.989 413.137 cv
227.786 396.508 227.946 384.996 231.647 365.504 cv
231.857 364.396 232.077 363.541 232.224 363.036 cv
233.215 361.253 236.833 359.167 237.793 355.462 cv
238.929 351.073 241.316 348.344 240.989 347.355 cv
240.531 345.973 242.268 341.936 242.692 339.435 cv
243.197 338.592 244.374 335.196 244.992 333.766 cv
245.136 333.566 247.106 331.131 247.049 330.937 cv
245.559 329.392 243.116 331.139 242.731 332.966 cv
cp
1 .780392 .690196 rgb
f
241.013 347.521 mo
237.06 349.346 236.991 357.513 231.901 359.992 cv
229.729 361.051 225.049 359.81 229.446 354.083 cv
230.561 352.631 229.855 350.987 229.502 349.203 cv
228.606 350.089 227.754 349.644 227.244 349.378 cv
227.632 350.501 225.183 350.954 223.817 350.482 cv
223.776 350.645 li
224.25 351.254 225.58 351.643 227.246 349.994 cv
228.201 350.422 229.211 350.186 229.211 350.186 cv
229.211 350.186 229.055 350.899 229.213 351.703 cv
229.21 351.846 228.398 353.66 226.806 356.295 cv
225.477 358.493 226.206 361.129 226.485 361.945 cv
227.594 362.029 229.761 362.861 229.225 368.207 cv
227.649 383.939 223.629 417.774 213.715 420.333 cv
208.886 419.291 180.246 407.994 180.553 392.015 cv
177.526 395.567 176.087 402.47 175.988 407.089 cv
176.612 408.302 177.433 409.467 178.408 410.58 cv
178.993 409.646 179.678 408.099 180.457 405.782 cv
180.457 405.782 201.521 420.707 211.199 423.485 cv
215.474 424.33 221.439 418.512 222.989 413.137 cv
227.786 396.508 227.946 384.996 231.647 365.504 cv
231.857 364.396 232.077 363.541 232.224 363.036 cv
233.215 361.253 236.833 359.167 237.793 355.462 cv
238.872 351.294 241.074 348.627 241.013 347.521 cv
cp
.976471 .72549 .635294 rgb
f
229.789 339.543 mo
231.748 340.518 233.538 341.279 235.155 341.686 cv
235.962 341.89 237.435 344.611 238.216 345.741 cv
237.032 344.69 235.919 342.591 234.519 342.162 cv
233.233 341.768 230.934 340.776 229.789 339.543 cv
cp
1 .823529 .760784 rgb
f
226.821 344.993 mo
229.445 343.921 231.582 343.826 232.892 344.168 cv
233.697 344.378 235.899 348.084 236.681 349.215 cv
235.497 348.163 233.907 344.898 232.464 344.65 cv
230.885 344.38 228.576 345.369 226.821 344.993 cv
cp
f
225.152 348.662 mo
225.152 348.662 227.739 346.836 230.623 346.918 cv
231.392 346.94 233.831 350.109 233.914 350.225 cv
233.152 348.78 231.174 346.484 230.732 346.433 cv
230.289 346.382 227.677 345.989 225.152 348.662 cv
cp
f
223.079 374.677 mo
223.079 374.677 222.456 376.517 221.913 378.025 cv
220.259 376.974 220.934 375.332 223.079 374.677 cv
cp
.74902 .705882 .211765 rgb
f
229.522 378.073 mo
229.522 378.073 228.917 382.172 228.6 384.512 cv
232.207 384.547 233.639 381.855 229.522 378.073 cv
cp
f
232.588 382.897 mo
232.465 380.515 230.734 378.605 229.581 377.683 cv
229.497 378.237 li
234.147 382.523 231.388 385.472 226.167 382.093 cv
221.431 379.028 221.004 375.429 222.932 375.072 cv
223.167 374.44 li
222.578 374.424 222.038 374.655 221.515 375.068 cv
220.712 375.703 219.526 377.332 219.108 379.276 cv
218.812 380.656 221.229 384.549 225.382 386.477 cv
229.983 388.613 232.682 384.711 232.588 382.897 cv
cp
.964706 .917647 .352941 rgb
f
221.75 375.412 mo
221.35 376.548 221.386 379.74 226.45 382.553 cv
231.515 385.365 232.41 383.004 232.018 381.461 cv
233.26 383.876 231.127 385.601 226.887 383.5 cv
222.647 381.399 220.239 377.913 221.75 375.412 cv
cp
1 .960784 .501961 rgb
f
225.757 365.832 mo
225.757 365.832 225.074 368.332 224.539 370.207 cv
223.053 368.71 223.504 366.551 225.757 365.832 cv
cp
.74902 .211765 .239216 rgb
f
230.92 369.48 mo
230.92 369.48 229.589 376.8 229.225 380.588 cv
232.832 380.876 236.256 377.27 230.92 369.48 cv
cp
f
230.966 369.22 mo
230.848 369.89 li
235.862 376.436 232.709 380.706 227.77 375.638 cv
223.524 371.28 223.679 366.507 225.667 366.164 cv
225.742 365.909 225.867 365.389 225.867 365.389 cv
225.281 365.328 224.841 365.555 224.25 366.065 cv
223.342 366.848 221.891 368.915 221.159 371.452 cv
220.639 373.25 222.428 378.544 226.275 381.365 cv
230.536 384.49 233.87 379.526 234.07 377.128 cv
234.456 372.497 230.966 369.22 230.966 369.22 cv
cp
.964706 .352941 .364706 rgb
f
224.429 366.534 mo
223.844 368.005 223.364 372.215 227.98 376.263 cv
232.596 380.31 233.874 377.257 233.732 375.197 cv
234.584 378.464 232.17 380.594 228.264 377.541 cv
224.358 374.487 222.512 369.729 224.429 366.534 cv
cp
1 .501961 .52549 rgb
f
124.333 406.582 mo
124.333 406.582 113.78 428.488 106.425 435.363 cv
98.4302 439.36 92.5141 427.848 97.3109 422.252 cv
102.108 416.655 108.983 408.66 111.062 402.424 cv
113.141 396.189 116.179 391.871 121.775 390.752 cv
124.493 394.59 126.412 403.224 124.333 406.582 cv
cp
.858824 .631373 .552941 rgb
f
142.402 665.146 mo
142.402 665.146 142.172 672.673 142.688 675.267 cv
143.671 680.198 140.204 682.734 140.38 690.736 cv
139.524 695.778 131.584 693.333 125.269 693.36 cv
120.104 693.383 121.821 691.747 123.425 690.484 cv
129.421 685.768 135.082 677.986 135.225 677.048 cv
135.891 672.672 133.912 664.973 133.912 664.973 cv
142.402 665.146 li
cp
1 .780392 .690196 rgb
f
110.964 652.813 mo
110.964 652.813 109.134 659.959 108.205 662.435 cv
107.276 664.911 105.778 665.576 105.01 666.977 cv
103.386 669.684 106.994 673.022 106.724 682.044 cv
106.583 686.747 109.157 692.172 115.114 694.268 cv
119.986 695.982 121.07 690.146 119.626 688.703 cv
118.183 687.259 117.887 681.505 117.008 676.541 cv
116.626 674.378 115.758 667.364 115.788 666.416 cv
115.879 663.515 119.535 655.61 119.535 655.61 cv
110.964 652.813 li
cp
f
132.87 469.597 mo
131.413 472.695 117.075 489.304 118.576 504.767 cv
119.863 518.035 127.293 540.672 130 571.256 cv
130 571.256 130.609 578.574 130.234 580.942 cv
129.164 587.68 126.713 598.358 127.332 607.382 cv
128.733 627.824 134.617 669.732 134.617 669.732 cv
142.693 668.833 li
144.013 640.05 142.835 640.203 145.699 620.488 cv
148.897 598.476 147.329 589.357 145.098 579.26 cv
144.502 576.565 145.136 570.942 145.67 568.234 cv
152.67 532.704 149.487 496.826 149.487 496.826 cv
174.116 498.992 li
172.323 470.819 li
172.323 470.819 135.036 464.996 132.87 469.597 cv
cp
.247059 .0313726 .054902 rgb
f
146.548 498.517 mo
136.003 516.394 131.985 535.44 127.743 551.111 cv
128.606 557.72 129.402 564.501 130 571.256 cv
130 571.256 130.609 578.574 130.234 580.942 cv
129.164 587.68 126.713 598.358 127.332 607.382 cv
128.733 627.824 134.617 669.732 134.617 669.732 cv
142.693 668.833 li
142.693 668.833 142.912 639.67 145.699 620.488 cv
148.897 598.476 147.329 589.357 145.098 579.26 cv
144.502 576.565 145.136 570.942 145.67 568.234 cv
149.665 547.956 146.702 512.287 146.548 498.517 cv
cp
.2 .0235294 .0470588 rgb
f
173.495 473.769 mo
166.486 469.814 134.673 471.249 134.673 471.249 cv
134.673 471.249 142.383 475.461 146.571 487.707 cv
150.57 488.707 li
170.057 485.73 li
153.276 491.955 li
159.23 495.202 li
148.011 494.415 li
148.041 494.712 148.077 495.005 148.099 495.308 cv
148.099 495.308 138.844 511.815 132.128 552.083 cv
131.794 554.005 131.47 556.008 131.198 557.928 cv
131.185 558.009 li
131.186 558.01 li
130.672 561.659 130.352 564.991 130.541 566.835 cv
131.141 572.68 122.944 585.293 121.05 603.968 cv
119.155 622.643 114.282 638.982 109.791 654.709 cv
108.975 657.565 117.355 661.418 119.444 657.595 cv
130.271 619.703 145.427 604.276 147.051 581 cv
148.946 579.917 150.992 577.063 154.792 561.755 cv
162.471 546.737 174.604 530.287 179.981 509.818 cv
185.754 494.708 173.495 473.769 173.495 473.769 cv
cp
.266667 .0313726 .0431373 rgb
f
132.022 555.175 mo
131.978 554.086 132.1 552.996 132.158 551.907 cv
132.128 552.083 li
131.794 554.005 131.47 556.008 131.198 557.928 cv
131.185 558.009 li
131.186 558.01 li
130.672 561.659 130.352 564.991 130.541 566.835 cv
130.66 567.992 130.549 569.398 130.284 571.047 cv
130.228 570.887 130.167 570.732 130.115 570.567 cv
128.438 577.329 122.609 588.591 121.05 603.968 cv
119.155 622.643 114.282 638.982 109.791 654.709 cv
108.975 657.565 117.115 661.487 119.444 657.595 cv
130.271 619.703 145.427 604.276 147.051 581 cv
147.154 580.941 147.26 580.863 147.369 580.773 cv
145.189 581.646 133.248 585.06 132.022 555.175 cv
cp
.247059 .0313726 .054902 rgb
f
147.051 581 mo
147.154 580.941 147.26 580.863 147.369 580.773 cv
145.556 581.499 136.986 583.984 133.451 567.593 cv
134.511 583.616 140.826 589.931 147.051 581 cv
cp
.2 .0235294 .0470588 rgb
f
103.746 669.503 mo
105.099 673.786 103.611 679.112 102.055 683.036 cv
102.123 683.916 102.935 683.442 102.935 683.442 cv
102.935 683.442 104.651 676.399 105.844 677.217 cv
105.844 677.217 105.844 674.849 103.679 669.368 cv
103.746 669.503 li
cp
.337255 .294118 .0392157 rgb
f
107.857 663.236 mo
104.558 664.226 104.423 665.85 103.611 668.962 cv
103.522 669.237 103.523 669.393 104.257 671.138 cv
105.365 673.772 106.304 678.776 105.641 683.983 cv
105.127 688.02 104.874 696.343 113.851 698.103 cv
119.326 699.176 122.422 696.975 121.88 694.404 cv
120.798 687.908 118.226 685.066 117.956 683.307 cv
118.632 687.231 119.58 689.261 117.82 689.532 cv
116.061 689.803 110.36 688.971 109.396 683.874 cv
108.39 678.561 107.719 676.555 106.994 673.293 cv
105.912 668.421 107.315 664.319 107.857 663.236 cv
cp
.466667 .419608 .0941176 rgb
f
107.857 663.236 mo
104.558 664.226 104.423 665.85 103.611 668.962 cv
104.558 671.804 107.265 676.541 106.318 683.983 cv
105.804 688.02 105.996 694.56 113.49 696.434 cv
118.903 697.787 122.422 696.975 121.88 694.404 cv
120.798 687.908 118.226 685.066 117.956 683.307 cv
118.632 687.231 119.573 689.219 117.82 689.532 cv
115.294 689.983 110.155 687.48 109.701 683.758 cv
108.799 676.36 106.633 673.658 106.633 670.315 cv
106.633 667.338 107.315 664.319 107.857 663.236 cv
cp
.976471 .92549 .478431 rgb
f
141.395 696.101 mo
142.222 696.101 li
142.111 693.729 143.226 683.699 144.566 679.746 cv
144.566 679.746 143.189 680.086 141.63 682.005 cv
143.297 684.85 141.632 694.196 141.395 696.101 cv
cp
.337255 .294118 .0392157 rgb
f
142.568 673.008 mo
142.568 673.008 143.496 675.704 142.629 678.567 cv
141.507 681.393 141.621 684.34 141.19 686.002 cv
140.524 688.57 133.179 693.283 127.423 693.283 cv
124.39 693.283 123.503 691.855 123.473 691.239 cv
121.664 691.239 li
120.279 693.606 121.027 697.48 122.946 698.319 cv
126.783 699.998 140.943 698.399 141.662 691.084 cv
142.028 687.367 142.549 682.993 143.668 681.405 cv
144.359 680.425 146.369 677.696 142.568 673.008 cv
cp
.466667 .419608 .0941176 rgb
f
133.294 680.09 mo
133.294 680.09 127.822 687.846 124.465 690.005 cv
123.462 690.649 125.608 691.206 129.423 691.206 cv
135.18 691.206 140.004 687.811 140.67 685.243 cv
141.101 683.581 140.419 681.313 141.541 678.487 cv
142.408 675.624 142.378 672.395 142.378 672.395 cv
146.658 676.568 144 679.945 143.309 680.925 cv
142.189 682.513 141.596 689.813 140.703 692.523 cv
139.099 697.391 126.449 698.406 122.706 697.48 cv
121.076 697.077 119.482 692.402 122.662 690.294 cv
126.1 688.016 129.634 684.854 133.294 680.09 cv
cp
1 .960784 .501961 rgb
f
190.602 358.53 mo
190.68 358.162 190.714 357.843 190.701 357.582 cv
186.966 357.362 179.597 347.847 177.62 338.84 cv
175.643 329.834 172.348 294.467 137.86 303.474 cv
130.766 305.326 113.257 309.624 115.015 339.06 cv
116.772 368.496 114.136 368.935 107.985 373.548 cv
108.112 373.775 108.247 374.001 108.39 374.226 cv
110.006 373.909 113.688 372.787 115.898 368.714 cv
114.576 371.636 112.731 374.036 109.37 375.587 cv
111.054 377.674 113.51 379.623 116.847 381.236 cv
119.967 378.296 124.285 371.629 124.285 366.745 cv
124.814 369.392 124.632 377.849 121.694 383.124 cv
128.76 385.32 138.563 386.274 151.699 384.971 cv
160.803 384.068 168.268 381.085 174.144 377.378 cv
172.001 374.343 170.513 370.372 168.877 365.647 cv
170.846 370.032 174.492 374.416 176.369 375.89 cv
178.691 374.242 180.728 372.497 182.481 370.755 cv
181.781 369.928 181.091 368.832 180.376 367.188 cv
181.334 368.69 182.452 369.594 183.16 370.064 cv
184.114 369.075 184.977 368.092 185.748 367.134 cv
184.348 365.996 183.345 364.659 182.276 362.821 cv
183.946 364.401 186.249 364.989 187.202 365.213 cv
188.391 363.533 189.274 361.983 189.857 360.681 cv
185.836 358.787 183.969 355.197 182.424 352.54 cv
186.238 357.208 188.574 358.565 190.602 358.53 cv
.8 .211765 .152941 rgb
f
167.957 385.963 mo
135.616 385.963 li
135.616 376.685 li
167.957 376.685 li
167.957 385.963 li
cp
0 .282353 .298039 rgb
f
179.817 422.571 mo
127.021 423.683 li
127.021 433.219 li
133.067 442.038 144.946 454.688 129.229 475.082 cv
129.229 475.082 144.413 477.973 149.543 478.009 cv
155.792 478.052 175.079 475.756 175.079 475.756 cv
158.659 450.402 179.817 422.571 179.817 422.571 cv
cp
0 .466667 .529412 rgb
f
150.248 412.457 mo
150.264 476.025 li
151.915 476.297 li
153.325 476.076 li
152.956 412.457 li
150.248 412.457 li
cp
0 .403922 .447059 rgb
f
130.983 439.446 mo
173.798 439.446 li
195.789 429.478 169.943 409.824 182.866 390.439 cv
170.164 384.736 li
152.947 383.59 li
152.947 383.516 li
152.39 383.553 li
151.834 383.516 li
151.834 383.59 li
137.253 386.362 li
137.253 386.362 128.925 387.185 120.02 391.081 cv
132.008 413.617 111.657 430.523 130.983 439.446 cv
cp
0 .501961 .6 rgb
f
152.467 383.59 mo
152.467 383.516 li
151.997 383.553 li
151.528 383.516 li
151.528 383.59 li
149.889 383.719 li
149.889 439.446 li
153.637 439.446 li
153.637 383.682 li
152.467 383.59 li
cp
0 .466667 .529412 rgb
f
135.616 376.685 mo
145.681 399.097 li
140.483 403.704 li
131.412 385.092 li
135.616 376.685 li
cp
0 .403922 .447059 rgb
f
167.953 376.685 mo
151.784 402.031 li
164.719 409.021 li
172.156 385.092 li
167.953 376.685 li
cp
f
152.746 403.883 mo
152.746 404.473 152.268 404.95 151.679 404.95 cv
151.09 404.95 150.612 404.473 150.612 403.883 cv
150.612 403.294 151.09 402.816 151.679 402.816 cv
152.268 402.816 152.746 403.294 152.746 403.883 cv
cp
1 1 1 rgb
f
152.746 420.62 mo
152.746 421.209 152.268 421.687 151.679 421.687 cv
151.09 421.687 150.612 421.209 150.612 420.62 cv
150.612 420.03 151.09 419.552 151.679 419.552 cv
152.268 419.552 152.746 420.03 152.746 420.62 cv
cp
f
152.746 437.356 mo
152.746 437.945 152.268 438.423 151.679 438.423 cv
151.09 438.423 150.612 437.945 150.612 437.356 cv
150.612 436.767 151.09 436.289 151.679 436.289 cv
152.268 436.289 152.746 436.767 152.746 437.356 cv
cp
f
152.746 454.092 mo
152.746 454.682 152.268 455.159 151.679 455.159 cv
151.09 455.159 150.612 454.682 150.612 454.092 cv
150.612 453.503 151.09 453.025 151.679 453.025 cv
152.268 453.025 152.746 453.503 152.746 454.092 cv
cp
f
152.746 470.829 mo
152.746 471.418 152.268 471.896 151.679 471.896 cv
151.09 471.896 150.612 471.418 150.612 470.829 cv
150.612 470.239 151.09 469.761 151.679 469.761 cv
152.268 469.761 152.746 470.239 152.746 470.829 cv
cp
f
159.544 417.204 mo
159.544 421.113 li
168.795 426.454 li
178.046 421.113 li
178.046 417.204 li
159.544 417.204 li
cp
0 .466667 .529412 rgb
f
169.928 423.074 mo
169.928 423.664 169.45 424.142 168.86 424.142 cv
168.271 424.142 167.793 423.664 167.793 423.074 cv
167.793 422.485 168.271 422.007 168.86 422.007 cv
169.45 422.007 169.928 422.485 169.928 423.074 cv
cp
1 1 1 rgb
f
159.544 421.113 mo
168.795 426.371 li
178.046 421.113 li
168.838 425.403 li
159.544 421.113 li
cp
0 .403922 .447059 rgb
f
125.409 417.204 mo
125.409 421.113 li
134.66 426.454 li
143.911 421.113 li
143.911 417.204 li
125.409 417.204 li
cp
0 .466667 .529412 rgb
f
135.792 423.074 mo
135.792 423.664 135.314 424.142 134.725 424.142 cv
134.135 424.142 133.658 423.664 133.658 423.074 cv
133.658 422.485 134.135 422.007 134.725 422.007 cv
135.314 422.007 135.792 422.485 135.792 423.074 cv
cp
1 1 1 rgb
f
125.409 421.113 mo
134.66 426.371 li
143.911 421.113 li
134.702 425.403 li
125.409 421.113 li
cp
0 .403922 .447059 rgb
f
142.702 368.641 mo
143.201 384.996 li
139.757 385.906 li
151.679 419.552 li
164.867 382.365 li
162.307 368.641 li
142.702 368.641 li
cp
1 .780392 .690196 rgb
f
142.702 368.641 mo
143.201 384.996 li
139.757 385.906 li
151.679 419.552 li
144.8 391.552 li
152.475 388.354 li
163.872 377.032 li
162.307 368.641 li
142.702 368.641 li
cp
.858824 .631373 .552941 rgb
f
172.409 331.339 mo
171.688 331.363 171.016 331.705 170.426 332.296 cv
166.749 317.427 160.319 302.924 139.939 307.385 cv
120.524 311.635 119.717 327.813 122.678 342.919 cv
121.797 342.529 120.944 342.454 120.202 342.766 cv
117.835 343.762 125.683 363.62 129.417 357.14 cv
131.504 369.002 151.933 379.107 155.377 377.916 cv
159.235 376.583 173.79 361.094 170.386 347.914 cv
176.207 351.209 174.975 331.255 172.409 331.339 cv
cp
1 .780392 .690196 rgb
f
159.494 333.563 mo
159.615 334.176 157.364 333.906 154.767 334.527 cv
152.169 335.147 150.243 336.414 150.087 335.81 cv
149.803 334.704 151.27 332.426 153.868 331.805 cv
156.465 331.185 159.259 332.369 159.494 333.563 cv
cp
.858824 .631373 .552941 rgb
f
132.316 339.778 mo
132.555 340.356 134.44 338.966 137.048 338.396 cv
139.656 337.826 141.864 338.331 141.759 337.714 cv
141.403 335.633 138.99 334.76 136.383 335.329 cv
133.775 335.899 131.57 337.974 132.316 339.778 cv
cp
f
159.384 333.076 mo
159.669 334.269 157.058 332.946 154.461 333.567 cv
151.863 334.187 150.262 336.516 149.977 335.323 cv
149.692 334.13 151.335 331.687 153.932 331.067 cv
156.53 330.446 159.099 331.883 159.384 333.076 cv
cp
.647059 .152941 .105882 rgb
f
132.145 339.038 mo
132.384 340.241 134.203 337.949 136.823 337.427 cv
139.442 336.906 141.869 338.353 141.63 337.15 cv
141.39 335.947 138.878 334.414 136.258 334.935 cv
133.639 335.457 131.905 337.835 132.145 339.038 cv
cp
f
144.248 346.719 mo
144.51 347.918 143.751 349.102 142.553 349.364 cv
141.354 349.627 140.17 348.868 139.908 347.669 cv
139.646 346.471 140.405 345.287 141.603 345.025 cv
142.801 344.762 143.985 345.521 144.248 346.719 cv
cp
.184314 .0117647 0 rgb
f
160.088 343.252 mo
160.35 344.451 159.591 345.635 158.393 345.897 cv
157.195 346.16 156.01 345.401 155.748 344.202 cv
155.486 343.004 156.245 341.82 157.443 341.557 cv
158.641 341.295 159.826 342.054 160.088 343.252 cv
cp
f
143.451 345.876 mo
143.451 346.271 143.131 346.59 142.737 346.59 cv
142.343 346.59 142.023 346.271 142.023 345.876 cv
142.023 345.482 142.343 345.162 142.737 345.162 cv
143.131 345.162 143.451 345.482 143.451 345.876 cv
cp
1 1 1 rgb
f
159.487 342.472 mo
159.487 342.866 159.167 343.185 158.773 343.185 cv
158.378 343.185 158.059 342.866 158.059 342.472 cv
158.059 342.077 158.378 341.758 158.773 341.758 cv
159.167 341.758 159.487 342.077 159.487 342.472 cv
cp
f
148.776 358.813 mo
149.145 359.672 150.239 360.151 151.377 359.902 cv
152.515 359.653 153.308 358.761 153.285 357.826 cv
148.776 358.813 li
cp
.858824 .631373 .552941 rgb
f
174.435 329.944 mo
173.056 327.132 166.095 299.746 144.128 304.432 cv
110.299 305.604 115.023 336.044 116.113 349.824 cv
116.997 361.007 124.503 363.771 130.194 362.928 cv
115.44 355.973 132.677 339.545 133.73 330.06 cv
134.152 331.957 135.152 340.844 130.094 345.903 cv
142.108 340.001 147.184 331.152 149.502 323.354 cv
149.292 333.681 142.74 339.791 139.157 342.109 cv
154.543 337.683 156.651 325.88 157.704 320.4 cv
164.449 328.198 169.463 343.973 169.463 343.973 cv
169.599 343.43 171.977 341.422 172.364 338.853 cv
174.731 343.552 176.359 348.994 169.163 356.634 cv
174.325 353.558 182.782 346.968 174.435 329.944 cv
.827451 .266667 .176471 rgb
f
145.219 305.121 mo
151.739 304.131 159.914 311.322 156.728 323.953 cv
154.418 333.116 149.547 337.675 141.492 341.044 cv
147.829 337.647 149.306 335.633 152.915 328.596 cv
155.844 322.884 157.455 306.043 145.219 305.121 cv
cp
.976471 .384314 .282353 rgb
f
145.219 305.121 mo
144.86 304.725 114.4 308.826 115.718 339.14 cv
117.914 328.742 121.283 324.056 126.555 320.395 cv
131.827 316.734 136.279 308.927 145.219 305.121 cv
cp
.886275 .266667 .203922 rgb
f
145.041 305.198 mo
143.283 304.466 114.4 309.851 115.718 339.14 cv
116.158 330.374 120.111 321.273 125.383 317.612 cv
130.655 313.951 136.547 308.127 145.041 305.198 cv
cp
.976471 .384314 .282353 rgb
f
146.471 304.432 mo
160.969 303.553 167.917 310.244 173.124 324.642 cv
178.104 338.408 179.715 349.977 169.61 356.274 cv
172.685 352.613 176.932 347.487 173.124 336.943 cv
169.317 326.399 160.663 305.074 146.471 304.432 cv
cp
.886275 .266667 .203922 rgb
f
146.471 304.432 mo
160.969 303.553 167.917 310.244 173.124 324.642 cv
178.104 338.408 179.715 349.977 169.61 356.274 cv
174.442 352.759 178.25 346.609 174.442 336.065 cv
170.635 325.52 167.56 303.993 146.471 304.432 cv
cp
.976471 .384314 .282353 rgb
f
145.219 305.121 mo
145.715 307.745 142.562 318.222 135.488 327.278 cv
128.165 336.65 119.455 349.209 122.747 354.37 cv
117.199 349.403 114.327 332.01 126.79 323.878 cv
139.253 315.745 143.669 308.615 145.219 305.121 cv
cp
.886275 .266667 .203922 rgb
f
145.219 305.121 mo
145.715 307.745 140.585 317.028 132.705 324.642 cv
119.672 337.236 119.178 348.695 122.469 353.857 cv
116.921 348.89 117.767 332.939 129.484 323.763 cv
141.639 314.244 143.669 308.615 145.219 305.121 cv
cp
.976471 .384314 .282353 rgb
f
145.219 305.121 mo
145.203 304.774 152.578 309.515 149.393 322.146 cv
147.082 331.309 140.935 339.06 132.258 344.442 cv
135.444 339.5 138.211 336.491 141.704 329.395 cv
143.828 325.081 145.768 316.874 145.219 305.121 cv
cp
.886275 .266667 .203922 rgb
f
145.219 305.121 mo
151.739 304.131 159.914 311.322 156.728 323.953 cv
154.418 333.116 149.547 337.675 141.492 341.044 cv
146.495 336.977 147.549 335.633 151.158 328.596 cv
154.086 322.884 155.142 310.236 145.219 305.121 cv
cp
f
145.219 305.121 mo
145.115 304.79 152.578 312.151 145.439 327.418 cv
142.019 334.73 137.465 338.532 132.258 344.442 cv
135.444 339.5 137.001 338.433 140.915 331.56 cv
145.418 323.652 147.965 313.908 145.219 305.121 cv
cp
.976471 .384314 .282353 rgb
f
143.132 365.97 mo
148.285 365.681 147.745 361.906 152.139 362.785 cv
155.434 360.039 156.521 363.81 160.815 361.576 cv
156.642 364.542 147.196 366.299 143.132 365.97 cv
cp
.858824 .631373 .552941 rgb
f
148.624 368.716 mo
153.517 369.392 155.935 367.339 157.74 364.652 cv
153.237 372.56 152.798 370.583 148.624 368.716 cv
cp
f
160.971 360.52 mo
160.636 360.631 160.358 361.334 160.54 361.719 cv
160.722 362.105 161.349 362.016 161.946 361.806 cv
161.946 361.806 161.062 361.5 160.971 360.52 cv
cp
f
142.302 365.16 mo
142.648 365.093 143.235 365.57 143.264 365.995 cv
143.294 366.421 142.704 366.65 142.08 366.758 cv
142.08 366.758 142.702 366.06 142.302 365.16 cv
cp
f
130.388 380.352 mo
130.831 382.353 130.155 383.598 129.079 383.777 cv
124.835 381.903 li
124.349 381.855 123.803 381.133 123.617 380.291 cv
116.557 351.498 li
116.371 350.655 116.586 349.705 117.038 349.374 cv
120.346 346.023 li
120.883 345.514 122.549 344.914 123.076 347.297 cv
130.388 380.352 li
.176471 .141176 .223529 rgb
f
130.06 380.66 mo
130.503 382.661 129.934 383.534 129.122 383.769 cv
124.507 382.211 li
124.02 382.163 123.475 381.441 123.289 380.599 cv
116.117 351.48 li
115.93 350.638 116.145 349.687 116.597 349.357 cv
120.315 346.039 li
120.699 345.689 122.108 344.897 122.636 347.279 cv
130.06 380.66 li
1 1 1 rgb
f
123.797 383.278 mo
123.289 383.229 122.716 382.472 122.522 381.592 cv
115.085 351.728 li
114.89 350.848 115.116 349.851 115.587 349.506 cv
120.362 346.012 li
120.834 345.666 121.377 346.101 121.571 346.981 cv
129.512 382.276 li
129.706 383.156 129.451 383.832 128.943 383.782 cv
123.797 383.278 li
.901961 .831373 .752941 rgb
f
129.471 382.272 mo
129.657 383.115 129.414 383.759 128.927 383.711 cv
123.782 383.207 li
123.295 383.16 122.749 382.438 122.563 381.596 cv
115.123 351.7 li
114.936 350.858 115.151 349.907 115.603 349.576 cv
120.378 346.082 li
120.83 345.752 121.347 346.167 121.533 347.009 cv
129.471 382.272 li
.8 .686275 .576471 rgb
f
120.512 346.19 mo
118.216 347.87 li
120.399 346.429 li
120.777 346.153 121.279 346.451 121.435 347.155 cv
129.342 382.227 li
129.498 382.931 129.22 383.465 128.813 383.425 cv
126.516 383.302 li
128.99 383.544 li
129.419 383.586 129.635 383.015 129.471 382.272 cv
121.533 347.009 li
121.369 346.266 120.911 345.899 120.512 346.19 cv
cp
1 1 1 rgb
f
118.789 351.59 mo
118.626 351.124 118.294 350.896 118.049 351.081 cv
117.803 351.267 117.736 351.796 117.898 352.262 cv
118.061 352.729 118.392 352.957 118.638 352.771 cv
118.884 352.585 118.951 352.057 118.789 351.59 cv
.886275 .886275 .886275 rgb
f
118.656 351.69 mo
118.541 351.363 118.309 351.203 118.136 351.333 cv
117.964 351.463 117.917 351.834 118.031 352.162 cv
118.145 352.489 118.378 352.649 118.55 352.519 cv
118.723 352.389 118.77 352.018 118.656 351.69 cv
.00784314 .0235294 .0588235 rgb
f
118.672 351.741 mo
118.672 351.741 118.672 351.741 118.672 351.741 cv
118.672 351.741 118.672 351.741 118.672 351.741 cv
118.668 351.728 mo
118.668 351.728 118.668 351.728 118.668 351.728 cv
118.668 351.728 118.668 351.728 118.668 351.728 cv
118.665 351.717 mo
118.664 351.716 118.664 351.715 118.664 351.715 cv
118.664 351.715 118.664 351.716 118.665 351.717 cv
118.66 351.704 mo
118.66 351.703 118.66 351.702 118.66 351.701 cv
118.66 351.702 118.66 351.703 118.66 351.704 cv
118.13 351.339 mo
118.13 351.338 118.13 351.338 118.13 351.338 cv
118.13 351.338 118.13 351.338 118.13 351.339 cv
.494118 .780392 .890196 rgb
f
118.717 352.096 mo
117.99 351.596 li
118.016 351.485 118.063 351.393 118.13 351.339 cv
118.13 351.338 118.13 351.338 118.13 351.338 cv
118.132 351.336 118.134 351.335 118.136 351.333 cv
118.177 351.302 118.221 351.288 118.267 351.288 cv
118.412 351.288 118.569 351.44 118.656 351.69 cv
118.657 351.694 118.658 351.698 118.66 351.701 cv
118.66 351.702 118.66 351.703 118.66 351.704 cv
118.662 351.707 118.663 351.711 118.664 351.715 cv
118.664 351.715 118.664 351.716 118.665 351.717 cv
118.666 351.721 118.667 351.724 118.668 351.728 cv
118.668 351.728 118.668 351.728 118.668 351.728 cv
118.67 351.732 118.671 351.737 118.672 351.741 cv
118.672 351.741 118.672 351.741 118.672 351.741 cv
118.707 351.86 118.721 351.982 118.717 352.096 cv
.054902 .352941 .47451 rgb
f
130.671 371.371 mo
131.392 369.868 130.34 368.119 129.976 367.843 cv
130.467 366.432 129.17 364.339 128.454 364.064 cv
128.505 363.039 128.14 361.854 126.557 361.275 cv
125.228 360.788 123.521 359.83 122.088 360.662 cv
120.655 361.493 116.291 364.131 115.506 365.03 cv
114.72 365.928 115.3 369.876 114.525 374.648 cv
113.819 378.991 117.785 382.149 117.425 384.768 cv
113.181 396.996 95.6516 418.406 91.3829 425.354 cv
89.556 428.328 92.1205 441.435 95.0724 441.999 cv
96.489 442.269 107.724 436.522 109.463 431.206 cv
116.026 411.141 121.133 394.197 123.154 387.639 cv
123.973 384.982 124.468 384.601 124.468 384.601 cv
124.468 384.601 127.324 382.735 126.744 379.535 cv
126.164 376.334 126.091 374.236 126.155 374.093 cv
126.718 373.354 126.877 372.589 126.877 372.589 cv
126.877 372.589 127.423 373.211 128.308 373.253 cv
128.552 374.043 128.939 375.429 128.939 375.429 cv
128.939 375.429 131.106 375.471 131.236 374.437 cv
131.367 373.404 131.871 372.875 130.671 371.371 cv
cp
1 .780392 .690196 rgb
f
128.454 364.064 mo
126.238 363.551 124.859 363.184 123.194 362.787 cv
122.209 362.552 119.097 364.92 117.664 365.752 cv
119.522 365.147 121.63 363.254 123.441 363.346 cv
125.103 363.43 126.868 363.965 128.454 364.064 cv
cp
1 .823529 .760784 rgb
f
129.922 367.82 mo
130.488 366.634 127.451 365.509 125.625 365.35 cv
124.601 365.261 120.318 368.121 118.885 368.952 cv
120.742 368.348 124.114 365.698 125.888 365.986 cv
127.828 366.301 129.408 367.394 129.922 367.82 cv
cp
f
130.671 371.371 mo
130.671 371.371 127.863 369.053 126.927 368.915 cv
125.992 368.776 121.733 370.893 121.581 370.977 cv
123.141 369.826 126.5 368.28 127.032 368.394 cv
127.564 368.507 129.837 369.931 130.671 371.371 cv
cp
f
129.64 372.602 mo
128.929 372.678 127.74 372.804 127.131 371.594 cv
125.881 373.232 124.291 374.601 124.883 376.453 cv
127.218 383.755 121.258 383.256 119.265 381.404 cv
114.595 377.064 115.608 367.004 115.265 365.527 cv
114.848 366.963 115.2 370.492 114.525 374.648 cv
113.86 378.741 117.343 381.781 117.444 384.31 cv
119.383 386.723 117.574 398.485 106.825 421.012 cv
105.9 422.951 97.97 445.873 91.2314 433.515 cv
91.9582 437.622 93.4563 441.69 95.0724 441.999 cv
96.489 442.269 107.724 436.522 109.463 431.206 cv
116.026 411.141 121.133 394.197 123.154 387.639 cv
123.973 384.982 124.468 384.601 124.468 384.601 cv
124.468 384.601 127.324 382.735 126.744 379.535 cv
126.164 376.334 126.091 374.236 126.155 374.093 cv
126.718 373.354 126.877 372.589 126.877 372.589 cv
126.877 372.589 127.423 373.211 128.308 373.253 cv
128.552 374.043 128.939 375.429 128.939 375.429 cv
128.939 375.429 129.185 375.432 129.514 375.4 cv
129.517 375.399 li
128.996 374.454 128.662 373.572 129.64 372.602 cv
cp
.976471 .72549 .635294 rgb
f
651.697 701.008 mo
651.697 710.629 640.127 717.453 623.53 717.453 cv
606.932 717.453 591.593 711.114 591.593 701.008 cv
591.593 694.543 605.717 689.302 621.645 689.302 cv
637.573 689.302 651.697 694.543 651.697 701.008 cv
cp
0 .298039 .337255 rgb
f
650.485 699.499 mo
650.485 707.004 639.284 712.098 623.356 712.098 cv
607.427 712.098 592.804 707.004 592.804 699.499 cv
592.804 691.993 605.717 685.909 621.645 685.909 cv
637.573 685.909 650.485 691.993 650.485 699.499 cv
cp
0 .501961 .6 rgb
f
616.962 621.078 mo
616.962 695.825 li
616.962 699.482 626.504 699.272 626.504 695.825 cv
626.504 621.078 li
616.962 621.078 li
cp
.878431 .878431 .878431 rgb
f
614.771 618.22 mo
614.771 655.111 li
614.771 660.445 628.694 660.139 628.694 655.111 cv
628.694 618.22 li
614.771 618.22 li
cp
.607843 .603922 .603922 rgb
f
687.386 600.491 mo
687.386 621.539 657.953 627.37 621.645 627.37 cv
585.337 627.37 555.903 622.599 555.903 600.491 cv
555.903 586.348 586.801 574.883 621.645 574.883 cv
656.489 574.883 687.386 586.348 687.386 600.491 cv
cp
0 .298039 .337255 rgb
f
684.735 600.491 mo
684.735 614.634 656.489 621.008 621.645 621.008 cv
586.801 621.008 558.554 614.634 558.554 600.491 cv
558.554 586.348 586.801 574.883 621.645 574.883 cv
656.489 574.883 684.735 586.348 684.735 600.491 cv
cp
0 .501961 .6 rgb
f
687.386 490.922 mo
687.386 558.742 657.953 577.534 621.645 577.534 cv
585.337 577.534 555.903 562.159 555.903 490.922 cv
555.903 445.351 586.801 408.409 621.645 408.409 cv
656.489 408.409 687.386 445.351 687.386 490.922 cv
cp
0 .298039 .337255 rgb
f
684.735 496.417 mo
684.735 545.022 656.489 566.931 621.645 566.931 cv
586.801 566.931 558.554 545.022 558.554 496.417 cv
558.554 447.811 586.801 408.409 621.645 408.409 cv
656.489 408.409 684.735 447.811 684.735 496.417 cv
cp
0 .501961 .6 rgb
f
1003.2 587.085 mo
964.822 595.482 905.246 620.006 902.292 629.842 cv
898.916 641.084 893.549 646.223 889.966 656.05 cv
886.383 665.878 876.129 705.691 865.046 736.601 cv
864.324 738.617 845.49 748.798 837.371 751.83 cv
831.334 754.084 814.847 754.645 819.315 762.317 cv
822.991 765.993 851.21 764.047 862.546 761.559 cv
872.719 759.326 882.245 762.885 878.352 746.519 cv
876.77 739.867 882.402 730.895 889.696 716.804 cv
904.821 687.585 915.827 688.863 920.373 662.768 cv
923.364 645.601 933.76 641.62 942.45 639.162 cv
957.731 634.841 983.751 637.254 1025.77 623.376 cv
1018.29 611.233 1011.01 598.978 1003.2 587.085 cv
cp
.968627 .701961 .611765 rgb
f
1002.83 586.52 mo
962.368 595.056 902.909 616.99 899.94 626.877 cv
896.564 638.119 891.979 645.697 888.397 655.524 cv
886.13 661.741 882.764 680.48 876.637 700.849 cv
876.196 702.317 872.255 707.526 872.154 707.834 cv
871.967 708.401 872.423 714.275 871.56 717.021 cv
870.552 720.226 867.134 724.256 867.072 724.455 cv
866.883 725.07 866.365 732.82 866.196 733.353 cv
866.196 733.353 874.504 737.258 879.418 737.638 cv
879.418 737.638 883.54 733.808 885.499 730.995 cv
886.684 729.296 887.489 725.07 889.438 723.17 cv
889.438 723.17 894.407 717.386 894.5 717.214 cv
894.5 717.214 895.28 711.13 896.743 708.64 cv
909.039 687.704 917.091 681.282 920.461 668.545 cv
924.919 651.699 937.857 642.837 937.857 642.837 cv
970.796 632.013 986.931 637.816 1025.85 623.518 cv
1018.23 611.136 1010.81 598.636 1002.83 586.52 cv
cp
.27451 .329412 .368627 rgb
f
1021.63 616.636 mo
1009.15 618.509 951.636 639.162 939.235 634.569 cv
936.042 633.387 929.469 651.049 926.412 649.485 cv
924.705 648.612 920.705 633.804 919.091 632.762 cv
917.702 631.866 921.433 645.758 921.68 647.457 cv
922.309 651.791 918.417 648.839 910.18 650.139 cv
920.21 654.514 911.357 655.984 909.84 660.538 cv
906.417 670.823 908.231 682.281 887.091 718.538 cv
883.323 724.999 870.924 729.257 871.17 718.041 cv
869.874 721.022 867.127 724.277 867.072 724.455 cv
866.883 725.07 866.365 732.82 866.196 733.353 cv
866.196 733.353 874.504 737.258 879.418 737.638 cv
879.418 737.638 883.54 733.808 885.499 730.995 cv
886.684 729.296 887.489 725.07 889.438 723.17 cv
889.438 723.17 894.407 717.386 894.5 717.214 cv
894.5 717.214 895.28 711.13 896.743 708.64 cv
909.039 687.704 917.091 681.282 920.461 668.545 cv
924.919 651.699 938.775 643.296 938.775 643.296 cv
965.874 635.029 981.581 644.886 1025.85 623.518 cv
1024.44 621.227 1023.04 618.933 1021.63 616.636 cv
cp
.211765 .266667 .298039 rgb
f
877.216 752.298 mo
877.216 752.298 881.21 756.479 878.456 762.966 cv
877.509 764.992 820.566 765.728 818.45 764.372 cv
816.335 763.015 817.651 760.161 818.991 761.02 cv
822.528 763.288 877.216 752.298 877.216 752.298 cv
cp
f
863.676 737.625 mo
866.536 747.76 li
878.573 743.236 li
878.573 743.236 881.538 752.501 878.853 758.827 cv
877.928 760.803 848.469 762.682 841.244 762.641 cv
836.342 762.613 820.06 762.702 817.997 761.38 cv
817.755 761.224 815.132 753.193 822.883 752.695 cv
841.371 751.505 845.047 747.505 863.676 737.625 cv
cp
.0627451 .639216 .698039 rgb
f
853.351 753.366 mo
855.097 752.944 866.536 747.76 866.536 747.76 cv
865.411 743.773 li
861.513 747.119 857.361 750.153 853.351 753.366 cv
cp
.211765 .266667 .298039 rgb
f
862.671 759.939 mo
869.726 759.335 878.607 755.737 879.935 750.944 cv
880.081 753.545 879.882 756.402 878.853 758.827 cv
877.001 764.285 820.06 762.702 817.997 761.38 cv
817.841 761.28 816.346 757.297 818.027 755.295 cv
817.545 760.543 823.618 759.805 830.56 760.047 cv
835.768 760.228 857.014 760.422 862.671 759.939 cv
cp
.0392157 .552941 .576471 rgb
f
953.126 393.945 mo
952.687 399.555 951.989 409.518 955.054 415.465 cv
956.131 417.553 956.385 419.708 956.377 420.019 cv
956.176 427.501 954.142 432.967 956.481 433.268 cv
958.82 433.569 960.452 433.115 961.063 434.107 cv
961.416 434.68 961.732 435.678 962.181 436.855 cv
962.313 437.2 961.966 438.608 963.29 439.103 cv
962.508 439.966 963.542 440.744 964.376 442.59 cv
965.551 445.976 966.731 448.722 968.89 449.695 cv
972.867 451.487 986.08 443.214 986.569 445.107 cv
987.351 447.619 990.3 453.546 991.514 458.705 cv
987.169 470.465 li
1018.66 448.58 li
1018.66 448.58 1010.98 430.516 1013.15 420.734 cv
1015.32 410.953 1018.69 400.41 1010.85 390.255 cv
1003.01 380.099 995.348 365.854 975.336 373.523 cv
955.324 381.193 953.409 390.322 953.126 393.945 cv
cp
.968627 .701961 .611765 rgb
f
989.508 464.135 mo
987.169 470.465 li
1018.66 448.58 li
1018.66 448.58 1017.96 447.12 1016.75 443.521 cv
1011.61 447.588 995.479 460.361 989.508 464.135 cv
cp
.917647 .631373 .54902 rgb
f
991.432 458.928 mo
991.432 458.928 993.967 455.118 994.93 453.656 cv
996.374 451.465 993.145 439.224 993.145 439.224 cv
989.677 436.474 988.407 430.825 986.983 426.412 cv
986.174 423.906 984.428 415.766 984.749 410.353 cv
984.856 408.551 983.791 411.894 982.512 412.091 cv
982.512 412.091 982.756 427.633 983.954 433.426 cv
984.782 437.43 974.389 446.658 965.397 445.272 cv
966.298 447.377 967.341 448.997 968.89 449.695 cv
972.867 451.487 986.08 443.214 986.569 445.106 cv
987.351 447.619 990.3 453.546 991.514 458.705 cv
991.432 458.928 li
cp
f
963.163 410.698 mo
963.305 411.329 960.955 410.76 958.268 411.037 cv
955.581 411.315 953.61 412.331 953.432 411.703 cv
953.107 410.555 954.575 408.463 957.263 408.186 cv
959.95 407.908 962.887 409.468 963.163 410.698 cv
cp
.917647 .623529 .545098 rgb
f
962.664 409.759 mo
963.705 410.82 959.88 409.54 957.227 409.969 cv
954.573 410.398 954.095 412.372 953.053 411.311 cv
952.012 410.25 952.471 408.177 955.124 407.749 cv
957.778 407.32 961.622 408.698 962.664 409.759 cv
cp
.196078 0 .00392157 rgb
f
961.969 418.143 mo
962.205 419.399 961.536 420.579 960.474 420.779 cv
959.411 420.98 958.358 420.124 958.122 418.868 cv
957.885 417.612 958.555 416.432 959.617 416.232 cv
960.679 416.032 961.732 416.888 961.969 418.143 cv
cp
.184314 .0117647 0 rgb
f
961.58 417.522 mo
961.699 418.155 961.362 418.749 960.826 418.85 cv
960.291 418.951 959.761 418.52 959.642 417.887 cv
959.523 417.255 959.86 416.66 960.395 416.56 cv
960.93 416.459 961.46 416.89 961.58 417.522 cv
cp
1 1 1 rgb
f
962.28 429.671 mo
962.979 433.231 958.729 431.938 955.598 432.612 cv
955.768 433.013 956.051 433.254 956.489 433.311 cv
958.086 433.516 960.174 433.294 960.79 433.837 cv
961.981 433.367 963.533 432.526 962.28 429.671 cv
cp
.917647 .623529 .545098 rgb
f
991.882 406.055 mo
993.611 407.632 994.683 410.448 994.502 413.528 cv
994.239 418.006 991.426 421.344 988.22 420.983 cv
987.194 420.867 986.254 420.383 985.456 419.637 cv
986.376 421.595 987.856 422.895 989.591 422.997 cv
992.694 423.178 995.435 419.462 995.714 414.696 cv
995.952 410.617 994.306 407.1 991.882 406.055 cv
cp
f
986.98 417.915 mo
990.276 417.608 992.547 414.965 990.622 412.333 cv
987.938 408.661 987.923 412.744 988.348 413.477 cv
989.491 415.452 988.174 415.815 986.98 417.915 cv
cp
f
983.995 411.288 mo
983.995 411.288 982.011 421.508 985.705 433.022 cv
987.502 438.621 974.141 449.006 965.819 446.148 cv
964.328 447.955 965.305 451.324 969.838 451.081 cv
974.37 450.838 989.893 439.864 988.046 434.107 cv
986.199 428.35 984.989 422.685 983.995 411.288 cv
cp
.2 .215686 .227451 rgb
f
961.291 434.872 mo
960.302 435.058 961.977 436.689 961.977 436.689 cv
961.977 436.689 965.955 434.108 968.68 437.029 cv
968.034 433.602 963.612 434.435 961.291 434.872 cv
cp
f
963.073 440.031 mo
963.278 440.77 963.97 441.623 964.383 442.536 cv
964.423 442.652 964.538 442.997 964.677 443.39 cv
964.817 443.226 964.946 442.295 964.833 441.548 cv
964.788 441.249 967.174 440.166 967.693 439.124 cv
967.209 439.444 964.161 440.854 963.073 440.031 cv
cp
.917647 .623529 .545098 rgb
f
1007.16 379.055 mo
1001.86 374.406 991.744 366.086 977.007 371.303 cv
962.27 376.52 949.425 386.112 952.802 391.886 cv
957.696 392.605 967.861 386.761 968.664 388.593 cv
968.979 389.311 969.007 389.868 969.304 391.694 cv
990.374 389.446 li
969.591 393.247 li
969.692 393.72 969.93 395.272 970.056 395.71 cv
977.063 395.847 li
970.753 397.685 li
971.148 398.503 971.642 399.096 972.289 399.264 cv
975.017 399.971 977.652 401.001 979.203 404.372 cv
980.753 407.743 983.873 415.396 983.873 415.396 cv
983.873 415.396 984.712 403.639 990.148 404.142 cv
995.584 404.644 997.995 414.109 998.486 416.002 cv
999.599 420.294 1004.84 426.251 1008.01 426.875 cv
1011.18 427.499 1012.9 427.556 1012.9 427.556 cv
1012.9 427.556 1014.38 415.298 1016.62 409.382 cv
1018.86 403.465 1016.62 387.348 1007.16 379.055 cv
cp
.407843 .435294 .447059 rgb
f
968.664 388.593 mo
968.912 389.16 969.093 390.329 969.304 391.694 cv
974.179 390.334 1010.86 387.814 1013.86 388.296 cv
1017.17 387.988 1002.5 357.062 967.398 372.485 cv
953.086 378.774 946.759 390.128 953.532 392.057 cv
958.426 392.777 967.861 386.761 968.664 388.593 cv
cp
.2 .215686 .227451 rgb
f
987.169 468.465 mo
987.169 468.465 979.704 492.271 979.292 503.394 cv
978.88 514.517 988.27 526.668 990.742 539.027 cv
993.214 551.386 988.355 590.181 988.355 590.181 cv
1046.3 605.836 li
1046.3 605.836 1048.11 567.651 1049.1 515.805 cv
1049.88 475.106 1035.51 465.624 1018.14 445.302 cv
1010.73 449.421 987.169 468.465 987.169 468.465 cv
cp
.615686 .752941 .180392 rgb
f
1042.8 604.889 mo
1038.96 598.355 1033.03 527.87 1033.53 521.655 cv
1033.97 516.183 1035.22 491.154 1033.73 485.798 cv
1030.66 474.773 1013.35 471.348 1006.82 482.37 cv
1002.48 489.692 999.714 506.095 995.867 513.641 cv
992.802 519.653 984.124 521.175 984.124 521.175 cv
986.682 527.013 989.536 532.995 990.742 539.027 cv
993.214 551.386 988.355 590.181 988.355 590.181 cv
1042.8 604.889 li
cp
.568627 .666667 .14902 rgb
f
1026.66 433.966 mo
1026.66 433.966 1021.1 433.162 1014.57 436.429 cv
1015.13 438.762 1017.12 445.87 1018.9 448.017 cv
1020.58 449.977 1026.66 433.966 1026.66 433.966 cv
cp
.360784 .407843 .0745098 rgb
f
987.169 470.465 mo
987.169 470.465 1015.41 452.526 1025.71 457.469 cv
1031.47 463.649 1038.37 471.037 1040.85 476.804 cv
1047.85 466.917 1056.19 451.29 1047.95 446.758 cv
1039.71 442.227 1026.84 430.961 1024.78 434.669 cv
1020.66 444.144 994.161 463.979 987.169 470.465 cv
cp
.568627 .666667 .14902 rgb
f
931.845 542.232 mo
926.221 544.42 918.155 542.444 915.357 540.469 cv
912.558 538.493 906.961 538.329 905.974 538.164 cv
904.986 538 901.858 534.049 909.43 531.744 cv
917.003 529.44 928.388 538.611 931.845 542.232 cv
cp
.917647 .631373 .54902 rgb
f
914.326 533.647 mo
914.108 531.379 911.612 532.294 910.162 532.435 cv
907.473 532.697 904.761 532.779 902.078 533.226 cv
901.267 533.362 897.958 535.977 895.093 538.132 cv
892.508 540.076 889.832 541.035 891.63 542.349 cv
892.546 543.018 895.27 543.174 896.95 540.719 cv
898.938 540.413 901.892 538.538 901.894 538.537 cv
902.551 538.121 905.343 537.673 906.051 537.543 cv
909.73 536.869 914.508 535.533 914.326 533.647 cv
cp
.886275 .584314 .513726 rgb
f
931.563 533.445 mo
918.924 527.815 918.702 527.05 915.192 527.738 cv
909.71 530.12 906.967 531.01 904.218 532.348 cv
903.392 532.749 900.118 536.163 898.029 538.929 cv
896.144 541.425 893.673 543.162 896.298 543.569 cv
897.635 543.776 900.708 542.917 901.346 540.338 cv
903.382 539.374 906.632 536.683 906.632 536.683 cv
906.632 536.683 911.178 536.164 914.369 535.448 cv
915.766 535.396 916.751 536.261 918.919 537.322 cv
923.578 539.599 926.014 542.078 931.014 540.538 cv
934.538 539.451 940.316 541.216 940.316 541.216 cv
940.316 541.216 940.229 541.407 941.215 537.222 cv
935.524 538.375 934.519 534.762 931.563 533.445 cv
cp
.917647 .631373 .54902 rgb
f
931.175 531.909 mo
918.089 526.751 915.945 527.615 913.591 528.854 cv
910.276 530.968 907.52 532.032 904.71 533.369 cv
903.867 533.771 903.472 536.007 901.337 538.774 cv
899.41 541.27 896.885 543.007 899.568 543.414 cv
900.934 543.62 903.423 542.518 904.075 539.939 cv
906.155 538.974 907.161 536.685 907.161 536.685 cv
907.161 536.685 909.868 537.177 913.129 536.461 cv
914.557 536.408 915.978 538.164 918.194 539.224 cv
922.955 541.501 925.59 543.98 930.7 542.44 cv
934.301 541.354 946.393 544.978 946.393 544.978 cv
946.393 544.978 950.028 539.221 951.036 535.036 cv
941.876 536.079 935.217 533.502 931.175 531.909 cv
cp
.968627 .701961 .611765 rgb
f
1011.12 475.457 mo
1019.56 470.342 1028.12 471.001 1033.06 482.195 cv
1034.72 485.967 1033.28 493.963 1030.47 503.235 cv
1027.79 528.178 1016.49 538.932 1012.21 550.565 cv
992.881 557.132 963.645 550.193 942.786 543.992 cv
944.336 538.066 945.83 535.28 948.019 535.198 cv
963.73 534.605 980.686 529.872 994.156 529.586 cv
997.131 530.293 991.903 531.58 1005.4 500.303 cv
1004.08 493.718 1005.71 478.74 1011.12 475.457 cv
cp
f
938.313 543.219 mo
938.313 543.219 938.412 534.068 940.134 534.068 cv
941.857 534.068 944.565 534.275 944.636 535.416 cv
944.69 536.277 943.848 544.306 943.418 544.403 cv
942.415 544.63 938.582 544.134 938.313 543.219 cv
cp
.2 .215686 .227451 rgb
f
946.541 534.221 mo
946.44 534.977 945.745 535.508 944.989 535.407 cv
939.112 534.622 li
938.356 534.521 937.825 533.826 937.926 533.07 cv
938.027 532.314 938.722 531.783 939.478 531.884 cv
945.355 532.669 li
946.111 532.77 946.642 533.465 946.541 534.221 cv
cp
f
937.926 533.07 mo
937.825 533.826 938.356 534.521 939.112 534.622 cv
944.989 535.407 li
945.745 535.508 946.44 534.977 946.541 534.221 cv
946.555 534.114 937.956 532.842 937.926 533.07 cv
cp
.0666667 .0941176 .109804 rgb
f
946.226 533.153 mo
946.012 532.898 945.71 532.717 945.355 532.669 cv
939.478 531.884 li
939.094 531.832 938.727 531.945 938.445 532.166 cv
938.642 532.243 945.973 533.277 946.226 533.153 cv
cp
.745098 .858824 .929412 rgb
f
1023.66 503.238 mo
1023.66 503.238 1024.62 523.969 1007.27 541.23 cv
1007.27 541.23 1005.27 546.026 1003.97 547.042 cv
993.016 555.617 956.875 547.469 943.776 542.792 cv
943.596 544.024 li
964.455 550.225 992.881 557.132 1012.21 550.565 cv
1016.49 538.932 1027.79 528.178 1030.47 503.235 cv
1032.03 498.098 1033.16 493.357 1033.58 489.505 cv
1033.12 491.136 1024.45 502.429 1023.66 503.238 cv
cp
.917647 .631373 .54902 rgb
f
994.79 589.929 mo
994.79 589.929 966.597 589.786 942.211 593.038 cv
920.587 595.921 908.941 608.016 912.506 620.491 cv
915.731 631.777 913.986 639 916.273 649.207 cv
918.561 659.414 931.415 698.465 938.767 730.469 cv
939.246 732.556 937.139 742.9 931.941 749.835 cv
928.075 754.991 910.782 754.559 915.539 764.506 cv
932.834 764.506 939.582 764.696 950.131 752.829 cv
957.051 745.044 967.431 743.314 955.321 731.637 cv
950.399 726.891 950.298 716.298 948.834 700.499 cv
945.798 667.738 955.754 662.874 945.498 638.452 cv
938.751 622.385 946.12 624.832 954.769 627.427 cv
971.072 632.317 1009.96 632.168 1022.5 632.168 cv
1035.04 632.168 1050.18 626.113 1047.15 601.894 cv
1008.23 593.677 994.79 589.929 994.79 589.929 cv
cp
.968627 .701961 .611765 rgb
f
1047.15 601.894 mo
1008.23 593.677 994.309 589.417 994.309 589.417 cv
994.309 589.417 965.981 589.444 941.595 592.696 cv
919.971 595.579 905.361 606.789 908.926 619.264 cv
912.151 630.55 912.381 639.404 914.668 649.611 cv
916.115 656.068 923.394 673.66 929.23 694.115 cv
929.65 695.588 929.144 702.1 929.225 702.414 cv
929.374 702.993 932.928 707.692 933.683 710.469 cv
934.565 713.711 933.862 718.949 933.918 719.15 cv
934.09 719.769 937.837 726.574 937.982 727.114 cv
937.982 727.114 947.083 725.918 951.425 723.585 cv
951.425 723.585 952.829 718.136 952.96 714.711 cv
953.04 712.641 951.438 708.649 952.053 705.997 cv
952.053 705.997 953.114 698.446 953.1 698.252 cv
953.1 698.252 950.473 692.709 950.361 689.823 cv
949.414 665.561 952.726 655.81 948.69 643.268 cv
943.351 626.68 947.969 627.266 947.969 627.266 cv
964.272 632.157 1010.34 632.986 1022.88 632.986 cv
1035.42 632.986 1051.19 625.703 1047.15 601.894 cv
cp
.337255 .392157 .435294 rgb
f
1045.9 601.63 mo
1041.18 625.623 1021.7 618.009 1011.97 616.711 cv
1006.4 615.968 969.016 630.87 944.042 613.825 cv
941.23 611.906 946.831 623.677 943.413 624.01 cv
941.505 624.196 930.145 613.889 928.225 613.883 cv
926.571 613.878 937.21 623.559 938.334 624.857 cv
941.203 628.165 936.334 627.781 930.101 633.321 cv
940.905 631.591 934.246 637.607 935.427 642.259 cv
938.095 652.765 945.807 661.432 947.577 703.364 cv
947.892 710.837 939.752 721.114 933.905 711.538 cv
934.423 714.747 933.867 718.97 933.918 719.15 cv
934.09 719.769 937.837 726.574 937.982 727.114 cv
937.982 727.114 947.083 725.918 951.425 723.585 cv
951.425 723.585 952.828 718.136 952.96 714.711 cv
953.04 712.641 951.438 708.649 952.053 705.997 cv
952.053 705.997 953.114 698.446 953.1 698.252 cv
953.1 698.252 950.473 692.709 950.361 689.823 cv
949.414 665.561 952.726 655.81 948.69 643.268 cv
943.351 626.68 947.969 627.266 947.969 627.266 cv
964.272 632.157 1010.34 632.986 1022.88 632.986 cv
1035.42 632.986 1051.78 625.35 1046.73 601.805 cv
1046.3 601.715 1046.32 601.719 1045.9 601.63 cv
cp
.27451 .329412 .368627 rgb
f
957.484 737.115 mo
957.484 737.115 962.466 736.501 963.648 743.449 cv
963.944 745.666 956.109 751.283 952.414 755.127 cv
948.718 758.97 938.291 767.101 933.265 767.101 cv
928.239 767.101 918.125 767.101 915.612 767.101 cv
913.099 767.101 912.339 763.752 913.931 763.752 cv
918.133 763.752 957.484 737.115 957.484 737.115 cv
cp
f
938.166 732.07 mo
946.044 739.059 li
953.735 728.754 li
953.735 728.754 961.232 734.953 962.385 741.729 cv
962.673 743.891 955.033 749.369 951.429 753.117 cv
947.825 756.865 937.157 764.794 932.256 764.794 cv
927.354 764.794 915.539 764.794 913.089 764.794 cv
912.801 764.794 910.533 758.86 914.38 755.712 cv
917.552 753.117 924.615 751.243 925.624 750.234 cv
930.008 748.404 938.166 732.07 938.166 732.07 cv
cp
.0784314 .670588 .768627 rgb
f
937.969 750.895 mo
939.211 749.597 946.044 739.059 946.044 739.059 cv
942.944 736.309 li
941.469 741.23 939.611 746.025 937.969 750.895 cv
cp
.27451 .329412 .368627 rgb
f
938.509 759.586 mo
938.509 759.586 960.511 739.26 959.042 734.508 cv
960.569 736.619 961.943 739.131 962.385 741.729 cv
962.673 743.891 955.033 749.369 951.429 753.117 cv
947.825 756.865 937.157 764.794 932.256 764.794 cv
927.354 764.794 915.539 764.794 913.089 764.794 cv
912.904 764.794 911.897 762.333 912.231 759.741 cv
912.34 758.897 918.726 762.662 926.183 762.884 cv
931.392 763.039 938.509 759.586 938.509 759.586 cv
cp
.0470588 .627451 .686275 rgb
f
349.701 701.008 mo
349.701 710.629 338.131 717.453 321.534 717.453 cv
304.936 717.453 289.597 711.114 289.597 701.008 cv
289.597 694.543 303.721 689.302 319.649 689.302 cv
335.577 689.302 349.701 694.543 349.701 701.008 cv
cp
.498039 .152941 0 rgb
f
348.489 699.499 mo
348.489 707.004 337.288 712.098 321.36 712.098 cv
305.432 712.098 290.808 707.004 290.808 699.499 cv
290.808 691.993 303.721 685.909 319.649 685.909 cv
335.577 685.909 348.489 691.993 348.489 699.499 cv
cp
.909804 .317647 .0196078 rgb
f
314.966 621.078 mo
314.966 695.825 li
314.966 699.482 324.508 699.272 324.508 695.825 cv
324.508 621.078 li
314.966 621.078 li
cp
.878431 .878431 .878431 rgb
f
312.776 618.22 mo
312.776 655.111 li
312.776 660.445 326.698 660.139 326.698 655.111 cv
326.698 618.22 li
312.776 618.22 li
cp
.607843 .603922 .603922 rgb
f
385.39 600.491 mo
385.39 621.539 355.957 627.37 319.649 627.37 cv
283.341 627.37 253.907 622.599 253.907 600.491 cv
253.907 586.348 284.805 574.883 319.649 574.883 cv
354.493 574.883 385.39 586.348 385.39 600.491 cv
cp
.498039 .152941 0 rgb
f
382.739 600.491 mo
382.739 614.634 354.493 621.008 319.649 621.008 cv
284.805 621.008 256.558 614.634 256.558 600.491 cv
256.558 586.348 284.805 574.883 319.649 574.883 cv
354.493 574.883 382.739 586.348 382.739 600.491 cv
cp
.909804 .317647 .0196078 rgb
f
385.39 490.922 mo
385.39 558.742 355.957 577.534 319.649 577.534 cv
283.341 577.534 253.907 562.159 253.907 490.922 cv
253.907 445.351 284.805 408.409 319.649 408.409 cv
354.493 408.409 385.39 445.351 385.39 490.922 cv
.498039 .152941 0 rgb
f
382.739 491.917 mo
382.739 540.522 354.493 562.431 319.649 562.431 cv
284.805 562.431 256.558 540.522 256.558 491.917 cv
256.558 443.312 284.805 403.909 319.649 403.909 cv
354.493 403.909 382.739 443.312 382.739 491.917 cv
.909804 .317647 .0196078 rgb
f
335.984 458.881 mo
301.698 458.881 li
301.698 449.045 li
335.984 449.045 li
335.984 458.881 li
cp
.290196 .317647 .0431373 rgb
f
348.439 580.715 mo
350.086 525.041 358.188 486.969 358.188 486.969 cv
280.775 486.969 li
280.775 486.969 289.227 536.901 290.522 580.715 cv
348.439 580.715 li
cp
.568627 .666667 .14902 rgb
f
317.226 486.969 mo
317.226 580.677 li
320.6 580.677 li
320.6 486.969 li
317.226 486.969 li
cp
.27451 .298039 .0470588 rgb
f
296.786 515.582 mo
342.177 515.582 li
363.762 508.053 364.147 484.108 367.801 470.863 cv
368.017 469.84 338.325 457.58 338.325 457.58 cv
320.072 456.365 li
320.072 456.287 li
319.482 456.326 li
318.891 456.287 li
318.891 456.365 li
300.638 457.58 li
300.638 457.58 270.215 469.736 271.26 471.045 cv
274.914 484.291 275.442 507.408 296.786 515.582 cv
cp
.615686 .752941 .180392 rgb
f
319.562 456.365 mo
319.562 456.287 li
319.065 456.326 li
318.568 456.287 li
318.568 456.365 li
316.83 456.502 li
316.83 515.582 li
320.803 515.582 li
320.803 456.463 li
319.562 456.365 li
cp
.360784 .407843 .0745098 rgb
f
301.698 449.045 mo
318.839 475.916 li
302.86 476.857 li
297.241 457.958 li
301.698 449.045 li
cp
f
335.98 449.045 mo
318.839 475.916 li
336.161 477.523 li
340.437 457.958 li
335.98 449.045 li
cp
f
319.859 477.88 mo
319.859 478.504 319.352 479.011 318.727 479.011 cv
318.102 479.011 317.596 478.504 317.596 477.88 cv
317.596 477.255 318.102 476.748 318.727 476.748 cv
319.352 476.748 319.859 477.255 319.859 477.88 cv
cp
.0823529 .117647 .00392157 rgb
f
319.859 495.623 mo
319.859 496.248 319.352 496.754 318.727 496.754 cv
318.102 496.754 317.596 496.248 317.596 495.623 cv
317.596 494.998 318.102 494.491 318.727 494.491 cv
319.352 494.491 319.859 494.998 319.859 495.623 cv
cp
f
319.859 513.366 mo
319.859 513.991 319.352 514.497 318.727 514.497 cv
318.102 514.497 317.596 513.991 317.596 513.366 cv
317.596 512.741 318.102 512.235 318.727 512.235 cv
319.352 512.235 319.859 512.741 319.859 513.366 cv
cp
f
319.859 531.109 mo
319.859 531.734 319.352 532.24 318.727 532.24 cv
318.102 532.24 317.596 531.734 317.596 531.109 cv
317.596 530.484 318.102 529.978 318.727 529.978 cv
319.352 529.978 319.859 530.484 319.859 531.109 cv
cp
f
319.859 548.852 mo
319.859 549.477 319.352 549.984 318.727 549.984 cv
318.102 549.984 317.596 549.477 317.596 548.852 cv
317.596 548.227 318.102 547.721 318.727 547.721 cv
319.352 547.721 319.859 548.227 319.859 548.852 cv
cp
f
319.859 568.693 mo
319.859 569.318 319.352 569.824 318.727 569.824 cv
318.102 569.824 317.596 569.318 317.596 568.693 cv
317.596 568.068 318.102 567.561 318.727 567.561 cv
319.352 567.561 319.859 568.068 319.859 568.693 cv
cp
f
327.066 492.002 mo
327.066 496.145 li
336.874 501.808 li
346.681 496.145 li
346.681 492.002 li
327.066 492.002 li
cp
.568627 .666667 .14902 rgb
f
338.074 498.225 mo
338.074 498.85 337.567 499.357 336.943 499.357 cv
336.318 499.357 335.811 498.85 335.811 498.225 cv
335.811 497.601 336.318 497.094 336.943 497.094 cv
337.567 497.094 338.074 497.601 338.074 498.225 cv
cp
.0823529 .117647 .00392157 rgb
f
327.066 496.145 mo
336.874 501.72 li
346.681 496.145 li
336.919 500.694 li
327.066 496.145 li
cp
.360784 .407843 .0745098 rgb
f
290.877 492.002 mo
290.877 496.145 li
300.684 501.808 li
310.492 496.145 li
310.492 492.002 li
290.877 492.002 li
cp
.568627 .666667 .14902 rgb
f
301.885 498.225 mo
301.885 498.85 301.378 499.357 300.753 499.357 cv
300.128 499.357 299.622 498.85 299.622 498.225 cv
299.622 497.601 300.128 497.094 300.753 497.094 cv
301.378 497.094 301.885 497.601 301.885 498.225 cv
cp
.0823529 .117647 .00392157 rgb
f
290.877 496.145 mo
300.684 501.72 li
310.492 496.145 li
300.729 500.694 li
290.877 496.145 li
cp
.360784 .407843 .0745098 rgb
f
271.489 470.863 mo
265.162 473.86 263.622 484.329 257.17 495.839 cv
250.183 508.301 217.145 539.1 240.808 550.786 cv
260.717 560.617 275.697 506.701 286.611 509.385 cv
277.218 500.445 271.489 470.863 271.489 470.863 cv
cp
.568627 .666667 .14902 rgb
f
286.611 509.385 mo
286.224 509.053 279.715 504.219 272.399 475.645 cv
273.999 495.95 280.386 504.786 281.436 506.717 cv
274.776 512.267 266.96 527.071 263.231 532.248 cv
259.306 537.697 235.924 561.331 232.68 535.561 cv
231.598 541.726 233.488 547.171 240.808 550.786 cv
257.734 559.144 271.641 519.472 282.386 510.873 cv
282.572 510.725 285.01 508.787 286.611 509.385 cv
cp
.470588 .537255 .0823529 rgb
f
310.51 528.568 mo
313.174 527.569 316.347 523.978 313.516 521.148 cv
311.345 518.977 306.19 525.643 302.693 527.808 cv
302.693 527.808 306.43 530.099 310.51 528.568 cv
cp
.976471 .72549 .635294 rgb
f
308.513 547.676 mo
310.829 547.645 312.355 545.258 312.472 544.635 cv
314.531 544.374 316.333 541.47 316.234 540.409 cv
317.54 539.84 318.788 538.654 318.532 536.328 cv
318.317 534.374 318.455 531.661 316.536 530.392 cv
314.617 529.123 308.643 525.323 307.041 524.901 cv
305.438 524.479 300.885 527.636 294.473 529.617 cv
288.636 531.421 287.156 538.302 283.677 539.471 cv
271.918 539.767 262.088 527.053 252.343 526.014 cv
240.195 524.717 233.787 533.217 234.759 541.386 cv
235.782 549.984 246.889 552.946 254.575 551.827 cv
283.58 547.606 274.239 549.902 283.641 548.368 cv
287.451 547.747 288.231 548.128 288.231 548.128 cv
288.231 548.128 292.314 550.527 295.937 547.831 cv
299.559 545.134 302.124 543.748 302.342 543.74 cv
303.608 543.983 304.657 543.709 304.657 543.709 cv
304.657 543.709 304.221 544.773 304.715 545.899 cv
303.884 546.69 302.399 548.027 302.399 548.027 cv
302.399 548.027 303.684 550.747 305.049 550.272 cv
306.415 549.797 307.384 550.097 308.513 547.676 cv
cp
1 .780392 .690196 rgb
f
316.234 540.409 mo
315.504 537.336 315.109 535.395 314.576 533.079 cv
314.26 531.708 309.393 529.3 307.474 528.031 cv
309.373 529.968 313.029 531.422 314.032 533.731 cv
314.954 535.851 315.377 538.375 316.234 540.409 cv
cp
1 .823529 .760784 rgb
f
312.468 544.553 mo
314.293 544.525 313.818 540.054 312.888 537.684 cv
312.367 536.356 306.166 532.793 304.247 531.524 cv
306.146 533.461 311.523 536.02 312.259 538.404 cv
313.065 541.012 312.681 543.651 312.468 544.553 cv
cp
f
308.513 547.676 mo
308.513 547.676 309.664 542.753 309.259 541.504 cv
308.853 540.255 303.592 536.264 303.394 536.128 cv
305.788 537.357 309.783 540.581 309.971 541.313 cv
310.159 542.045 309.791 545.75 308.513 547.676 cv
cp
f
306.347 547.154 mo
305.814 546.316 304.923 544.915 306.052 543.412 cv
303.243 542.867 300.559 541.735 298.621 543.615 cv
290.98 551.026 287.922 543.305 288.996 539.683 cv
291.511 531.197 304.649 526.247 306.273 524.908 cv
304.23 525.277 300.058 527.892 294.473 529.617 cv
288.971 531.317 287.34 537.525 284.258 539.212 cv
279.242 543.383 292.189 546.218 263.067 545.678 cv
229.441 545.054 237.022 532.279 240.017 528.947 cv
235.358 532.386 234.417 539.127 234.759 541.386 cv
235.924 549.097 246.889 552.946 254.575 551.827 cv
283.58 547.606 274.239 549.902 283.641 548.368 cv
287.451 547.747 288.231 548.128 288.231 548.128 cv
288.231 548.128 292.314 550.527 295.937 547.831 cv
299.559 545.134 302.124 543.748 302.342 543.74 cv
303.608 543.983 304.657 543.709 304.657 543.709 cv
304.657 543.709 304.221 544.773 304.715 545.899 cv
303.884 546.69 302.399 548.027 302.399 548.027 cv
302.399 548.027 302.546 548.335 302.79 548.724 cv
302.792 548.727 li
303.646 547.496 304.537 546.537 306.347 547.154 cv
cp
.976471 .72549 .635294 rgb
f
367.801 470.863 mo
374.129 473.86 375.668 484.329 382.121 495.839 cv
389.107 508.301 422.146 539.1 398.482 550.786 cv
378.574 560.617 363.594 506.701 352.68 509.385 cv
362.073 500.445 367.801 470.863 367.801 470.863 cv
cp
.568627 .666667 .14902 rgb
f
352.68 509.385 mo
353.067 509.053 359.575 504.219 366.892 475.645 cv
365.292 495.95 358.904 504.786 357.855 506.717 cv
364.515 512.267 372.33 527.071 376.059 532.248 cv
379.985 537.697 403.366 561.331 406.611 535.561 cv
407.693 541.726 405.802 547.171 398.482 550.786 cv
381.557 559.144 367.65 519.472 356.905 510.873 cv
356.719 510.725 354.281 508.787 352.68 509.385 cv
cp
.470588 .537255 .0823529 rgb
f
328.781 528.568 mo
326.117 527.569 322.944 523.978 325.775 521.148 cv
327.946 518.977 333.101 525.643 336.597 527.808 cv
336.597 527.808 332.861 530.099 328.781 528.568 cv
cp
.976471 .72549 .635294 rgb
f
330.777 547.676 mo
328.462 547.645 326.936 545.258 326.818 544.635 cv
324.76 544.374 322.957 541.47 323.056 540.409 cv
321.75 539.84 320.503 538.654 320.759 536.328 cv
320.974 534.374 320.836 531.661 322.755 530.392 cv
324.673 529.123 330.647 525.323 332.25 524.901 cv
333.853 524.479 338.405 527.636 344.818 529.617 cv
350.655 531.421 352.134 538.302 355.614 539.471 cv
367.373 539.767 377.203 527.053 386.948 526.014 cv
399.096 524.717 405.504 533.217 404.532 541.386 cv
403.509 549.984 392.402 552.946 384.716 551.827 cv
355.711 547.606 365.052 549.902 355.649 548.368 cv
351.839 547.747 351.06 548.128 351.06 548.128 cv
351.06 548.128 346.976 550.527 343.354 547.831 cv
339.731 545.134 337.167 543.748 336.949 543.74 cv
335.683 543.983 334.634 543.709 334.634 543.709 cv
334.634 543.709 335.07 544.773 334.576 545.899 cv
335.407 546.69 336.892 548.027 336.892 548.027 cv
336.892 548.027 335.607 550.747 334.241 550.272 cv
332.876 549.797 331.906 550.097 330.777 547.676 cv
cp
1 .780392 .690196 rgb
f
323.056 540.409 mo
323.787 537.336 324.181 535.395 324.715 533.079 cv
325.031 531.708 329.897 529.3 331.816 528.031 cv
329.918 529.968 326.261 531.422 325.258 533.731 cv
324.337 535.851 323.914 538.375 323.056 540.409 cv
cp
1 .823529 .760784 rgb
f
326.823 544.553 mo
324.998 544.525 325.473 540.054 326.402 537.684 cv
326.924 536.356 333.125 532.793 335.043 531.524 cv
333.145 533.461 327.768 536.02 327.031 538.404 cv
326.226 541.012 326.61 543.651 326.823 544.553 cv
cp
f
330.777 547.676 mo
330.777 547.676 329.627 542.753 330.032 541.504 cv
330.437 540.255 335.699 536.264 335.897 536.128 cv
333.503 537.357 329.507 540.581 329.32 541.313 cv
329.132 542.045 329.5 545.75 330.777 547.676 cv
cp
f
332.944 547.154 mo
333.477 546.316 334.367 544.915 333.239 543.412 cv
336.048 542.867 338.732 541.735 340.67 543.615 cv
348.311 551.026 351.368 543.305 350.295 539.683 cv
347.78 531.197 334.642 526.247 333.018 524.908 cv
335.061 525.277 339.233 527.892 344.818 529.617 cv
350.319 531.317 351.95 537.525 355.033 539.212 cv
360.048 543.383 347.101 546.218 376.224 545.678 cv
409.85 545.054 402.269 532.279 399.274 528.947 cv
403.933 532.386 404.873 539.127 404.532 541.386 cv
403.367 549.097 392.402 552.946 384.716 551.827 cv
355.711 547.606 365.052 549.902 355.649 548.368 cv
351.839 547.747 351.06 548.128 351.06 548.128 cv
351.06 548.128 346.976 550.527 343.354 547.831 cv
339.731 545.134 337.167 543.748 336.949 543.74 cv
335.683 543.983 334.634 543.709 334.634 543.709 cv
334.634 543.709 335.07 544.773 334.576 545.899 cv
335.407 546.69 336.892 548.027 336.892 548.027 cv
336.892 548.027 336.745 548.335 336.501 548.724 cv
336.499 548.727 li
335.645 547.496 334.754 546.537 332.944 547.154 cv
cp
.976471 .72549 .635294 rgb
f
306.391 436.703 mo
303.152 451.205 li
318.839 475.916 li
334.537 451.253 li
331.287 436.703 li
306.391 436.703 li
cp
1 .780392 .690196 rgb
f
306.391 436.703 mo
303.152 451.205 li
318.839 475.916 li
318.954 458.172 li
333.274 445.599 li
331.287 436.703 li
306.391 436.703 li
cp
.858824 .631373 .552941 rgb
f
349.4 402.164 mo
348.578 402.012 347.733 402.233 346.92 402.755 cv
346.443 385.032 342.761 367.041 318.613 367.041 cv
295.607 367.041 290.69 385.136 290.299 402.95 cv
289.4 402.29 288.454 401.995 287.537 402.164 cv
284.615 402.704 283.097 407.755 284.148 413.446 cv
285.199 419.138 288.42 423.314 291.343 422.774 cv
292.221 422.612 292.97 422.041 293.563 421.171 cv
293.563 434.697 307.747 450.616 318.613 450.616 cv
329.405 450.616 343.566 435.179 343.566 421.435 cv
344.126 422.157 344.809 422.63 345.594 422.774 cv
348.516 423.314 351.738 419.138 352.788 413.446 cv
353.84 407.755 352.322 402.704 349.4 402.164 cv
1 .780392 .690196 rgb
f
343.667 421.435 mo
344.227 422.157 344.909 422.63 345.695 422.774 cv
348.507 423.294 351.594 419.446 352.76 414.084 cv
350.464 418.705 346.865 422.176 344.525 418.07 cv
344.353 417.767 345.018 404.608 344.679 404.564 cv
344.797 404.145 346.912 403.145 347.019 402.721 cv
346.723 391.805 345.205 380.795 338.436 373.95 cv
340.353 381.059 341.451 389.319 341.451 398.132 cv
341.451 424.757 331.436 446.339 319.083 446.339 cv
306.729 446.339 296.715 424.757 296.715 398.132 cv
296.715 389.192 297.846 380.821 299.814 373.644 cv
293.275 379.923 291.026 389.902 290.504 400.11 cv
290.764 401.423 292.77 403.68 293.128 404.949 cv
292.789 404.994 293.65 417.228 293.513 417.548 cv
292.356 420.248 289.054 422.239 285.629 417.889 cv
287.122 421.143 289.358 423.16 291.444 422.774 cv
292.321 422.612 293.071 422.041 293.664 421.171 cv
293.664 434.697 307.848 450.616 318.713 450.616 cv
329.505 450.616 343.667 435.179 343.667 421.435 cv
.858824 .631373 .552941 rgb
f
288.759 403.441 mo
288.245 395.965 286.944 381.709 294.658 376.211 cv
292.858 372.473 296.029 364.924 309.727 361.607 cv
321.204 358.828 354.569 356.793 345.429 393.571 cv
343.779 391.322 342.801 390.72 340.185 389.257 cv
340.185 392.555 334.799 397.568 329.365 397.482 cv
331.981 396.363 333.29 392.576 329.767 389.306 cv
331.567 391.945 329.969 394.556 328.358 396.019 cv
328.358 393.6 324.229 389.784 312.659 389.564 cv
301.089 389.344 298.784 385.023 298.02 382.199 cv
291.982 389.859 295.172 410.953 295.172 410.953 cv
288.759 403.441 li
cp
f
334.451 401.216 mo
334.436 401.938 331.957 401.077 328.867 401.135 cv
325.776 401.194 323.284 402.15 323.258 401.428 cv
323.21 400.107 325.433 397.894 328.524 397.836 cv
331.615 397.777 334.48 399.807 334.451 401.216 cv
cp
f
302.18 401.516 mo
302.308 402.229 304.784 401.125 307.874 401.126 cv
310.964 401.127 313.336 402.244 313.369 401.52 cv
313.483 399.079 310.97 397.494 307.88 397.493 cv
304.79 397.492 301.784 399.293 302.18 401.516 cv
cp
f
334.447 400.638 mo
334.474 402.058 331.849 399.916 328.758 399.974 cv
325.668 400.033 323.281 402.27 323.254 400.85 cv
323.227 399.43 325.689 397.075 328.78 397.017 cv
331.87 396.958 334.42 399.218 334.447 400.638 cv
cp
.196078 0 .00392157 rgb
f
302.17 400.638 mo
302.143 402.058 304.768 399.916 307.858 399.974 cv
310.949 400.033 313.336 402.27 313.363 400.85 cv
313.39 399.43 310.928 397.075 307.837 397.017 cv
304.747 396.958 302.197 399.218 302.17 400.638 cv
cp
f
312.353 413.475 mo
312.353 414.896 311.202 416.047 309.782 416.047 cv
308.362 416.047 307.211 414.896 307.211 413.475 cv
307.211 412.056 308.362 410.904 309.782 410.904 cv
311.202 410.904 312.353 412.056 312.353 413.475 cv
.184314 .0117647 0 rgb
f
311.835 412.717 mo
311.835 413.433 311.255 414.012 310.54 414.012 cv
309.825 414.012 309.245 413.433 309.245 412.717 cv
309.245 412.002 309.825 411.422 310.54 411.422 cv
311.255 411.422 311.835 412.002 311.835 412.717 cv
1 1 1 rgb
f
331.122 413.475 mo
331.122 414.896 329.971 416.047 328.551 416.047 cv
327.131 416.047 325.98 414.896 325.98 413.475 cv
325.98 412.056 327.131 410.904 328.551 410.904 cv
329.971 410.904 331.122 412.056 331.122 413.475 cv
.184314 .0117647 0 rgb
f
330.771 412.717 mo
330.771 413.433 330.191 414.012 329.476 414.012 cv
328.761 414.012 328.181 413.433 328.181 412.717 cv
328.181 412.002 328.761 411.422 329.476 411.422 cv
330.191 411.422 330.771 412.002 330.771 412.717 cv
1 1 1 rgb
f
329.122 420.898 mo
324.058 420.898 319.938 417.199 319.938 412.654 cv
319.938 411.867 320.062 411.092 320.307 410.342 cv
337.937 410.342 li
338.182 411.092 338.306 411.867 338.306 412.654 cv
338.306 417.199 334.186 420.898 329.122 420.898 cv
308.075 420.898 mo
303.011 420.898 298.891 417.199 298.891 412.654 cv
298.891 411.867 299.015 411.092 299.26 410.342 cv
316.89 410.342 li
317.135 411.092 317.259 411.867 317.259 412.654 cv
317.259 417.199 313.139 420.898 308.075 420.898 cv
348.438 402.169 mo
347.507 401.396 li
340.964 411.78 li
339.289 411.78 li
339.2 410.918 338.98 410.091 338.649 409.313 cv
319.595 409.313 li
319.256 410.111 319.034 410.962 318.949 411.848 cv
318.248 411.848 li
318.163 410.962 317.941 410.111 317.602 409.313 cv
298.548 409.313 li
298.217 410.091 297.997 410.918 297.907 411.78 cv
296.233 411.78 li
289.69 401.396 li
288.759 402.169 li
295.578 412.99 li
297.872 412.99 li
298.067 417.955 302.559 421.926 308.075 421.926 cv
313.566 421.926 318.044 417.991 318.276 413.057 cv
318.92 413.057 li
319.153 417.991 323.631 421.926 329.122 421.926 cv
334.638 421.926 339.13 417.955 339.325 412.99 cv
341.619 412.99 li
348.438 402.169 li
.215686 .207843 .211765 rgb
f
344.158 408.384 mo
344.158 408.384 348.586 402.849 349.693 402.044 cv
351.706 386.244 347.58 371.753 335.101 369.036 cv
335.101 369.036 346.171 387.15 344.158 408.384 cv
cp
.129412 .00784314 .0156863 rgb
f
288.759 402.169 mo
288.245 393.427 286.944 376.757 294.658 370.329 cv
292.858 365.958 296.029 357.13 309.727 353.252 cv
321.204 350.002 361.321 353.998 344.538 395.526 cv
344.035 391.199 341.542 390.169 338.925 388.458 cv
338.925 392.315 334.799 395.302 329.365 395.201 cv
331.981 393.893 333.29 389.465 329.767 385.641 cv
331.567 388.726 329.969 391.779 328.358 393.49 cv
328.358 390.662 324.229 386.2 312.659 385.943 cv
301.089 385.685 299.297 382.331 298.268 381.816 cv
292.23 390.773 295.172 410.953 295.172 410.953 cv
288.759 402.169 li
cp
.203922 .00784314 .0117647 rgb
f
295.686 371.186 mo
296.543 375.471 299.114 382.671 308.199 384.213 cv
317.284 385.756 328.768 381.985 328.597 392.441 cv
329.454 387.47 329.111 380.785 315.227 379.757 cv
301.343 378.728 298.6 374.957 295.686 371.186 cv
cp
.266667 .0352941 .0470588 rgb
f
295.515 368.444 mo
296.577 371.346 299.764 376.223 311.027 377.268 cv
322.289 378.313 335.837 383.815 335.625 390.898 cv
338.196 382.671 336.951 374.946 319.739 374.249 cv
302.527 373.553 299.127 370.998 295.515 368.444 cv
cp
f
323.776 437.308 mo
313.234 437.308 li
311.921 437.308 310.856 436.243 310.856 434.929 cv
310.856 433.616 311.921 432.551 313.234 432.551 cv
323.776 432.551 li
325.089 432.551 326.154 433.616 326.154 434.929 cv
326.154 436.243 325.089 437.308 323.776 437.308 cv
344.667 406.839 mo
341.54 434.438 332.582 432.422 323.675 429.208 cv
323.583 429.241 323.484 429.262 323.372 429.262 cv
313.806 429.262 li
304.938 431.412 296.309 436.229 293.383 408.503 cv
292.99 409.461 293.227 421.726 293.227 421.726 cv
294.529 439.622 308.22 451.902 318.613 451.902 cv
328.905 451.902 344.157 439.457 344.157 421.973 cv
344.795 416.696 345.105 407.568 344.667 406.839 cv
.203922 .00784314 .0117647 rgb
f
308.075 420.898 mo
308.054 420.898 308.033 420.898 308.012 420.897 cv
306.775 420.89 305.596 420.661 304.52 420.254 cv
308.888 415.887 li
309.166 415.99 309.467 416.047 309.782 416.047 cv
311.202 416.047 312.353 414.896 312.353 413.475 cv
312.353 413.161 312.296 412.86 312.193 412.581 cv
314.433 410.342 li
316.89 410.342 li
317.135 411.092 317.259 411.867 317.259 412.654 cv
317.259 417.199 313.139 420.898 308.075 420.898 cv
.960784 .909804 .87451 rgb
f
309.782 416.047 mo
309.467 416.047 309.166 415.99 308.888 415.887 cv
310.785 413.989 li
311.304 413.89 311.712 413.481 311.812 412.963 cv
312.193 412.581 li
312.296 412.86 312.353 413.161 312.353 413.475 cv
312.353 414.896 311.202 416.047 309.782 416.047 cv
.635294 .603922 .6 rgb
f
310.785 413.989 mo
311.812 412.963 li
311.712 413.481 311.304 413.89 310.785 413.989 cv
.960784 .996078 1 rgb
f
308.075 420.898 mo
308.054 420.898 308.033 420.898 308.012 420.897 cv
308.033 420.898 308.054 420.898 308.075 420.898 cv
313.139 420.898 317.259 417.199 317.259 412.654 cv
317.259 412.654 li
317.259 417.199 313.139 420.898 308.075 420.898 cv
.647059 .682353 .686274 rgb
f
302.952 419.491 mo
302.478 419.204 302.034 418.878 301.628 418.518 cv
307.284 412.862 li
307.236 413.059 307.211 413.264 307.211 413.475 cv
307.211 413.977 307.354 414.445 307.603 414.841 cv
302.952 419.491 li
311.147 411.296 mo
310.751 411.048 310.283 410.904 309.782 410.904 cv
309.57 410.904 309.365 410.93 309.168 410.978 cv
309.804 410.342 li
312.102 410.342 li
311.147 411.296 li
.960784 .909804 .87451 rgb
f
307.603 414.841 mo
307.354 414.445 307.211 413.977 307.211 413.475 cv
307.211 413.264 307.236 413.059 307.284 412.862 cv
309.168 410.978 li
309.365 410.93 309.57 410.904 309.782 410.904 cv
310.283 410.904 310.751 411.048 311.147 411.296 cv
310.954 411.49 li
310.824 411.446 310.685 411.422 310.54 411.422 cv
309.825 411.422 309.245 412.002 309.245 412.717 cv
309.245 412.862 309.268 413.001 309.312 413.131 cv
307.603 414.841 li
.635294 .603922 .6 rgb
f
309.312 413.131 mo
309.268 413.001 309.245 412.862 309.245 412.717 cv
309.245 412.002 309.825 411.422 310.54 411.422 cv
310.685 411.422 310.824 411.446 310.954 411.49 cv
309.312 413.131 li
.960784 .996078 1 rgb
f
300.503 417.312 mo
300.374 417.144 300.253 416.971 300.138 416.795 cv
306.59 410.342 li
307.473 410.342 li
300.503 417.312 li
.960784 .909804 .87451 rgb
f
329.122 420.898 mo
329.097 420.898 329.073 420.898 329.049 420.897 cv
329.036 420.897 329.023 420.897 329.01 420.897 cv
329.006 420.897 329.001 420.897 328.997 420.897 cv
328.979 420.897 328.961 420.896 328.944 420.896 cv
328.927 420.896 328.911 420.895 328.894 420.895 cv
328.891 420.895 328.888 420.895 328.885 420.895 cv
328.88 420.895 328.875 420.895 328.87 420.895 cv
328.865 420.894 328.86 420.894 328.856 420.894 cv
328.852 420.894 328.848 420.894 328.844 420.894 cv
326.42 420.829 324.228 419.916 322.626 418.476 cv
326.33 414.771 li
326.776 415.534 327.604 416.047 328.551 416.047 cv
329.971 416.047 331.122 414.896 331.122 413.475 cv
331.122 412.528 330.61 411.7 329.847 411.254 cv
330.759 410.342 li
337.937 410.342 li
338.182 411.092 338.306 411.867 338.306 412.654 cv
338.306 417.199 334.186 420.898 329.122 420.898 cv
.952941 .929412 .905882 rgb
f
328.551 416.047 mo
327.604 416.047 326.776 415.534 326.33 414.771 cv
328.195 412.907 li
328.286 413.532 328.825 414.012 329.476 414.012 cv
330.191 414.012 330.771 413.433 330.771 412.717 cv
330.771 412.066 330.291 411.528 329.665 411.436 cv
329.847 411.254 li
330.61 411.7 331.122 412.528 331.122 413.475 cv
331.122 414.896 329.971 416.047 328.551 416.047 cv
.705882 .698039 .698039 rgb
f
329.476 414.012 mo
328.825 414.012 328.286 413.532 328.195 412.907 cv
329.665 411.436 li
330.291 411.528 330.771 412.066 330.771 412.717 cv
330.771 413.433 330.191 414.012 329.476 414.012 cv
.952941 .996078 1 rgb
f
329.122 420.898 mo
329.097 420.898 329.073 420.898 329.049 420.897 cv
329.073 420.898 329.097 420.898 329.122 420.898 cv
334.186 420.898 338.306 417.199 338.306 412.654 cv
338.306 412.654 li
338.306 417.199 334.186 420.898 329.122 420.898 cv
329.01 420.897 mo
329.006 420.897 329.001 420.897 328.997 420.897 cv
329.001 420.897 329.006 420.897 329.01 420.897 cv
328.944 420.896 mo
328.927 420.896 328.911 420.895 328.894 420.895 cv
328.911 420.895 328.927 420.896 328.944 420.896 cv
328.885 420.895 mo
328.88 420.895 328.875 420.895 328.87 420.895 cv
328.875 420.895 328.88 420.895 328.885 420.895 cv
328.856 420.894 mo
328.852 420.894 328.848 420.894 328.844 420.894 cv
328.848 420.894 328.852 420.894 328.856 420.894 cv
.717647 .756863 .760784 rgb
f
321.509 417.261 mo
321.21 416.864 320.953 416.439 320.734 415.997 cv
326.388 410.342 li
328.428 410.342 li
327.733 411.037 li
326.971 411.293 326.369 411.895 326.113 412.657 cv
321.509 417.261 li
.952941 .929412 .905882 rgb
f
326.113 412.657 mo
326.369 411.895 326.971 411.293 327.733 411.037 cv
326.113 412.657 li
.705882 .698039 .698039 rgb
f
312.914 427.114 mo
313.363 428.177 315.806 428.99 318.753 428.99 cv
321.701 428.99 324.144 428.177 324.593 427.114 cv
312.914 427.114 li
cp
.858824 .631373 .552941 rgb
f
325.901 433.865 mo
325.735 433.535 325.494 433.248 325.201 433.028 cv
311.809 433.028 li
311.516 433.248 311.276 433.535 311.109 433.865 cv
325.901 433.865 li
cp
325.967 435.856 mo
325.606 436.709 324.761 437.308 323.776 437.308 cv
313.234 437.308 li
312.249 437.308 311.404 436.709 311.043 435.856 cv
325.967 435.856 li
cp
f
295.515 368.444 mo
296.577 371.346 303.905 375.468 316.578 375.975 cv
335.001 376.712 335.837 383.815 335.625 390.898 cv
338.196 382.671 336.951 374.946 319.739 374.249 cv
302.527 373.553 299.127 370.998 295.515 368.444 cv
cp
.376471 .0666667 .0941176 rgb
f
294.765 368.016 mo
298.155 362.71 307.649 363.519 315.841 365.069 cv
332.201 368.164 341.644 376.004 344.319 394.279 cv
346.155 385.694 348.708 369.195 327.19 362.71 cv
314.879 359 295.06 358.878 294.765 368.016 cv
cp
.266667 .0352941 .0470588 rgb
f
295.764 364.02 mo
299.154 358.714 310.02 356.973 320.509 358.471 cv
336.992 360.826 348.982 367.296 345.485 391.106 cv
349.148 380.783 351.352 361.46 329.834 354.975 cv
317.523 351.264 296.059 354.882 295.764 364.02 cv
cp
f
294.903 366.916 mo
295.615 362.821 308.03 359.173 323.505 363.447 cv
344.661 369.29 343.309 385.767 344.086 392.812 cv
345.922 384.227 345.885 366.033 324.179 361.909 cv
304.035 358.082 294.912 363.153 294.903 366.916 cv
cp
.376471 .0666667 .0941176 rgb
f
295.686 371.186 mo
296.543 375.471 299.592 379.54 308.767 380.397 cv
319.821 381.428 328.768 381.985 328.597 392.441 cv
329.454 387.47 329.111 380.785 315.227 379.757 cv
301.343 378.728 298.6 374.957 295.686 371.186 cv
cp
f
296.091 367.869 mo
298.668 364.983 328.959 361.973 337.949 379.218 cv
327.043 371.554 320.465 372.97 316.136 372.29 cv
308.619 371.111 303.313 365.953 296.091 367.869 cv
cp
.266667 .0352941 .0470588 rgb
f
296.091 367.869 mo
298.668 364.983 328.959 361.973 337.949 379.218 cv
330.138 370.522 324.645 370.092 319.084 368.606 cv
311.733 366.641 303.313 365.953 296.091 367.869 cv
cp
.376471 .0666667 .0941176 rgb
f
295.764 364.02 mo
299.154 358.714 310.41 353.786 320.842 355.641 cv
343.321 359.637 351.479 370.127 345.485 391.106 cv
349.148 380.783 351.352 361.46 329.834 354.975 cv
317.523 351.264 296.059 354.882 295.764 364.02 cv
cp
f
347.983 579.655 mo
293.14 579.655 li
293.14 579.655 li
290.254 579.655 li
290.254 579.655 263.45 582.836 262.92 607.754 cv
262.821 612.433 263.545 616.121 264.815 619.026 cv
367.895 619.026 li
369.164 616.121 375.417 612.433 375.317 607.754 cv
374.787 582.836 347.983 579.655 347.983 579.655 cv
cp
.247059 .0313726 .054902 rgb
f
263.27 613.448 mo
263.588 615.567 264.114 617.422 264.815 619.026 cv
367.894 619.026 li
368.597 617.418 370.824 615.57 372.657 613.448 cv
263.27 613.448 li
cp
.2 .0235294 .0470588 rgb
f
313.688 713.428 mo
313.688 713.428 316.348 708.323 316.266 708.052 cv
315.202 704.553 309.897 700.546 309.603 698.711 cv
300.563 608.814 li
298.53 596.751 289.49 587.686 279.876 587.686 cv
272.564 587.686 262.866 595.715 263.665 607.518 cv
282.429 699.549 li
281.988 703.297 281.606 709.238 281.606 709.238 cv
282.7 711.825 284.583 714.861 284.583 714.861 cv
284.538 715.516 282.785 720.385 281.937 720.924 cv
285.244 727.208 li
287.07 741.426 li
312.512 742.255 li
312.916 726.657 li
316.444 719.932 li
313.688 713.428 li
cp
.266667 .0313726 .0431373 rgb
f
311.421 758.045 mo
311.421 754.706 311.288 746.223 309.861 739.604 cv
294.856 735.202 283.572 738.112 282.754 743.121 cv
277.191 746.669 266.191 752.863 270.076 758.179 cv
311.421 758.045 li
cp
.458824 .556863 .054902 rgb
f
310.62 758.045 mo
309.628 747.859 306.078 741.178 304.135 739.44 cv
298.282 736.911 289.044 736.565 284.419 738.775 cv
284.419 738.775 283.359 740.812 281.953 743.121 cv
276.39 746.669 265.39 752.863 269.274 758.179 cv
310.62 758.045 li
cp
.615686 .752941 .180392 rgb
f
312.518 759.678 mo
312.518 760.678 311.707 761.489 310.707 761.489 cv
269.177 761.489 li
268.176 761.489 267.365 760.678 267.365 759.678 cv
267.365 758.677 268.176 757.866 269.177 757.866 cv
310.707 757.866 li
311.707 757.866 312.518 758.677 312.518 759.678 cv
cp
.878431 .878431 .878431 rgb
f
303.839 742.621 mo
303.581 741.588 303.257 740.582 302.961 739.568 cv
301.311 738.953 299.47 738.45 297.497 738.108 cv
292.369 737.22 287.601 737.618 284.577 738.95 cv
284.132 739.951 283.707 740.962 283.32 741.984 cv
286.181 740.18 291.836 740.154 297.674 741.166 cv
300.081 741.583 302.201 742.348 303.991 743.296 cv
303.895 742.843 303.895 742.843 303.839 742.621 cv
cp
f
304.212 743.728 mo
302.562 743.113 298.321 742.162 296.349 741.82 cv
291.22 740.931 286.029 741.247 283.006 742.579 cv
281.415 744.17 li
284.276 742.366 298.911 743.198 305.008 746.556 cv
305.197 746.048 304.212 743.728 304.212 743.728 cv
cp
f
331.134 684.253 mo
331.134 684.253 334.635 678.456 335.224 676.609 cv
340.03 615.008 li
341.007 600.796 347.218 585.203 358.784 585.203 cv
372.12 585.882 377.29 595.756 375.576 610.168 cv
354.997 675.593 li
355.143 675.728 355.222 675.802 355.222 675.802 cv
353.477 681.606 356.914 685.103 355.903 687.379 cv
349.916 693.945 li
347.889 705.802 li
347.889 705.802 341.011 708.414 332.135 702.824 cv
332.025 698.31 333.728 690.03 333.728 690.03 cv
331.134 684.253 li
cp
.266667 .0313726 .0431373 rgb
f
348.19 724.564 mo
348.658 716.428 348.56 710.344 347.888 705.801 cv
347.888 705.801 340.741 708.36 332.166 702.662 cv
331.564 709.335 329.846 714.792 326.147 723.046 cv
320.918 734.713 318.07 739.688 332.92 742.654 cv
347.881 745.642 347.457 737.329 348.19 724.564 cv
cp
.423529 .486275 .0509804 rgb
f
341.519 733.432 mo
336.74 732.15 331.826 731.204 326.875 730.922 cv
325.65 730.852 324.286 730.774 322.903 730.796 cv
320.516 737.721 317.254 741.688 332.505 744.734 cv
348.275 747.883 346.16 742.178 347.315 735.246 cv
345.405 734.582 343.481 733.958 341.519 733.432 cv
cp
.878431 .878431 .878431 rgb
f
341.519 733.432 mo
336.74 732.15 331.826 731.204 326.875 730.922 cv
325.65 730.852 324.286 730.774 322.903 730.796 cv
320.516 737.721 321.752 740.424 332.92 742.654 cv
343.268 744.721 346.16 742.178 347.315 735.246 cv
345.405 734.582 343.481 733.958 341.519 733.432 cv
cp
.568627 .666667 .14902 rgb
f
346.204 708.359 mo
341.193 709.612 333.887 706.271 333.887 706.271 cv
333.887 706.271 333.469 707.524 333.26 708.359 cv
341.193 713.161 346.622 710.864 346.622 710.864 cv
346.622 710.864 346.622 710.864 346.204 708.359 cv
cp
.878431 .878431 .878431 rgb
f
346.577 713.322 mo
341.567 714.574 333.039 710.601 333.039 710.601 cv
333.039 710.601 332.39 712.378 332.181 713.213 cv
340.114 718.015 346.995 715.827 346.995 715.827 cv
346.995 715.827 346.995 715.827 346.577 713.322 cv
cp
f
346.4 719.331 mo
341.39 720.583 331.464 717.185 331.464 717.185 cv
331.464 717.185 330.815 718.962 330.606 719.797 cv
338.539 724.599 346.818 721.836 346.818 721.836 cv
346.818 721.836 346.818 721.836 346.4 719.331 cv
cp
f
652.479 577.666 mo
654.126 521.991 662.228 483.92 662.228 483.92 cv
584.815 483.92 li
584.815 483.92 593.267 533.852 594.562 577.666 cv
652.479 577.666 li
cp
.8 .211765 .152941 rgb
f
647.943 459.369 mo
597.463 459.369 li
588.591 463.022 573.833 469.281 574.566 470.199 cv
578.22 483.445 578.747 506.562 600.092 514.736 cv
645.482 514.736 li
667.067 507.206 667.453 483.262 671.107 470.016 cv
671.258 469.298 656.647 463.033 647.943 459.369 cv
cp
.886275 .266667 .203922 rgb
f
574.525 470.106 mo
568.198 473.103 566.658 483.573 560.206 495.082 cv
556.399 501.871 547.75 528.173 545.554 528.282 cv
516.407 529.721 515.571 552.508 528.562 552.508 cv
531.681 552.508 556.196 552.603 557.828 552.603 cv
571.502 552.603 578.733 505.945 589.647 508.628 cv
580.254 499.689 574.525 470.106 574.525 470.106 cv
cp
f
575.705 474.799 mo
577.304 495.103 583.692 503.94 584.742 505.871 cv
578.081 511.421 572.023 531.473 568.294 536.649 cv
566.727 538.825 557.949 540.254 550.18 538.265 cv
546.779 539.221 546.661 544.485 543.803 544.329 cv
544.005 552.508 li
545.63 552.508 555.363 552.603 556.629 552.603 cv
571.022 552.603 574.947 518.625 585.692 510.027 cv
585.877 509.878 588.316 507.941 589.917 508.538 cv
589.53 508.207 583.021 503.373 575.705 474.799 cv
cp
.8 .211765 .152941 rgb
f
671.107 470.016 mo
677.434 473.013 678.974 483.483 685.427 494.992 cv
692.413 507.454 725.451 538.253 701.788 549.939 cv
681.88 559.771 666.9 505.855 655.986 508.538 cv
665.379 499.599 671.107 470.016 671.107 470.016 cv
cp
.886275 .266667 .203922 rgb
f
655.986 508.538 mo
656.372 508.207 662.881 503.373 670.197 474.799 cv
668.598 495.103 662.21 503.94 661.161 505.871 cv
667.821 511.421 675.636 526.225 679.365 531.402 cv
683.291 536.851 706.672 560.485 709.916 534.715 cv
710.999 540.879 709.108 546.324 701.788 549.939 cv
684.862 558.298 670.955 518.625 660.21 510.027 cv
660.025 509.878 657.586 507.941 655.986 508.538 cv
cp
.8 .211765 .152941 rgb
f
632.086 527.722 mo
629.422 526.723 626.25 523.132 629.08 520.301 cv
631.251 518.13 636.407 524.797 639.903 526.961 cv
639.903 526.961 636.167 529.252 632.086 527.722 cv
cp
.976471 .72549 .635294 rgb
f
634.083 546.83 mo
631.768 546.799 630.242 544.412 630.124 543.788 cv
628.066 543.528 626.263 540.623 626.362 539.562 cv
625.056 538.994 623.809 537.808 624.065 535.481 cv
624.28 533.528 624.142 530.814 626.06 529.545 cv
627.979 528.276 633.953 524.477 635.556 524.055 cv
637.158 523.633 641.711 526.79 648.123 528.771 cv
653.961 530.575 655.44 537.456 658.92 538.624 cv
670.679 538.921 680.509 526.207 690.253 525.167 cv
702.402 523.871 708.81 532.371 707.838 540.54 cv
706.815 549.138 695.708 552.1 688.022 550.981 cv
659.017 546.76 668.358 549.056 658.955 547.522 cv
655.145 546.9 654.366 547.282 654.366 547.282 cv
654.366 547.282 650.282 549.681 646.66 546.984 cv
643.037 544.288 640.473 542.901 640.255 542.894 cv
638.989 543.137 637.94 542.863 637.94 542.863 cv
637.94 542.863 638.375 543.926 637.881 545.053 cv
638.713 545.844 640.198 547.181 640.198 547.181 cv
640.198 547.181 638.913 549.901 637.547 549.426 cv
636.182 548.95 635.212 549.251 634.083 546.83 cv
cp
1 .780392 .690196 rgb
f
626.362 539.562 mo
627.093 536.49 627.487 534.548 628.021 532.233 cv
628.337 530.862 633.203 528.454 635.122 527.185 cv
633.223 529.122 629.567 530.576 628.564 532.884 cv
627.643 535.004 627.219 537.529 626.362 539.562 cv
cp
1 .823529 .760784 rgb
f
630.129 543.706 mo
628.303 543.679 628.779 539.207 629.708 536.838 cv
630.229 535.509 636.43 531.947 638.349 530.678 cv
636.451 532.615 631.074 535.173 630.337 537.558 cv
629.532 540.165 629.916 542.804 630.129 543.706 cv
cp
f
634.083 546.83 mo
634.083 546.83 632.933 541.906 633.338 540.657 cv
633.743 539.408 639.005 535.418 639.202 535.282 cv
636.809 536.511 632.813 539.734 632.625 540.466 cv
632.438 541.199 632.806 544.904 634.083 546.83 cv
cp
f
636.25 546.308 mo
636.783 545.47 637.673 544.069 636.544 542.565 cv
639.353 542.021 642.038 540.889 643.975 542.768 cv
651.616 550.179 654.674 542.458 653.601 538.836 cv
651.085 530.35 637.948 525.401 636.323 524.062 cv
638.367 524.43 642.539 527.045 648.123 528.771 cv
653.625 530.471 655.256 536.679 658.339 538.366 cv
663.354 542.536 650.407 545.372 679.53 544.831 cv
713.156 544.207 705.575 531.433 702.58 528.101 cv
707.239 531.539 708.179 538.281 707.838 540.54 cv
706.673 548.251 695.708 552.1 688.022 550.981 cv
659.017 546.76 668.358 549.056 658.955 547.522 cv
655.145 546.9 654.366 547.282 654.366 547.282 cv
654.366 547.282 650.282 549.681 646.66 546.984 cv
643.037 544.288 640.473 542.901 640.255 542.894 cv
638.989 543.137 637.94 542.863 637.94 542.863 cv
637.94 542.863 638.375 543.926 637.881 545.053 cv
638.713 545.844 640.198 547.181 640.198 547.181 cv
640.198 547.181 640.051 547.489 639.807 547.878 cv
639.804 547.881 li
638.951 546.65 638.06 545.69 636.25 546.308 cv
cp
.976471 .72549 .635294 rgb
f
550.062 538.988 mo
551.271 532.927 546.746 528.013 539.956 528.013 cv
533.166 528.013 526.682 532.927 525.473 538.988 cv
524.264 545.05 528.788 549.963 535.578 549.963 cv
542.368 549.963 548.853 545.05 550.062 538.988 cv
cp
f
520.417 535.266 mo
516.679 536.985 513.146 539.277 512.746 540.655 cv
512.347 542.032 510.686 548.277 511.033 549.132 cv
511.381 549.987 513.703 551.155 514.961 549.845 cv
515.781 548.99 515.784 546.625 515.904 546.506 cv
517.169 545.237 517.152 543.696 517.135 542.927 cv
519.182 543.165 528.121 539.014 528.121 539.014 cv
528.121 539.014 522.623 534.251 520.417 535.266 cv
cp
.858824 .631373 .552941 rgb
f
521.181 534.669 mo
518.72 536.695 516.319 537.551 515.478 539.387 cv
514.638 541.222 510.976 549.542 511.036 550.681 cv
511.096 551.82 512.982 553.375 514.638 551.63 cv
515.718 550.491 516.494 547.341 516.65 547.182 cv
518.3 545.491 518.786 543.438 519.021 542.414 cv
520.942 542.731 531.026 537.201 531.026 537.201 cv
531.026 537.201 523.552 532.719 521.181 534.669 cv
cp
1 .780392 .690196 rgb
f
526.993 535.204 mo
526.884 534.584 522.802 531.763 518.3 539.026 cv
518.181 540.795 517.339 542.388 514.983 545.008 cv
514.983 545.046 li
514.487 547.543 513.566 550.04 512.159 552.194 cv
512.855 552.549 513.777 552.538 514.638 551.63 cv
515.718 550.491 516.494 547.341 516.65 547.182 cv
518.3 545.491 519.558 543.376 519.793 542.352 cv
521.714 542.668 531.026 537.201 531.026 537.201 cv
531.026 537.201 529.158 536.08 526.993 535.204 cv
cp
.976471 .72549 .635294 rgb
f
544.437 552.508 mo
544.638 551.842 544.744 551.153 544.744 550.447 cv
544.744 544.758 537.892 540.147 529.441 540.147 cv
520.989 540.147 514.137 544.758 514.137 550.447 cv
514.137 551.153 514.243 551.842 514.444 552.508 cv
544.437 552.508 li
cp
1 1 1 rgb
f
547.475 540.707 mo
547.955 535.004 547.979 536.292 547.85 534.059 cv
547.406 526.381 533.906 527.114 528.143 530.316 cv
522.379 533.518 521.09 534.982 520.701 537.426 cv
520.315 539.85 519.347 544.94 519.214 547.01 cv
519.087 548.972 523.119 550.109 525.158 547.929 cv
527.1 545.852 526.544 540.961 527.174 540.365 cv
528.587 540.044 531.102 540.123 531.591 540.326 cv
531.071 542.931 530.466 545.03 530.466 547.191 cv
530.546 549.432 535.749 550.793 537.67 547.461 cv
538.506 546.011 538.387 544.436 538.573 542.451 cv
541.397 543.74 543.374 545.7 544.073 547.671 cv
545.194 551.753 551.437 552.153 551.597 547.831 cv
551.656 546.256 547.204 543.923 547.475 540.707 cv
cp
1 .780392 .690196 rgb
f
531.747 540.167 mo
531.567 539.807 531.871 535.934 533.01 533.907 cv
531.249 534.848 529.56 535.921 527.639 536.542 cv
525.93 537.094 526.083 537.258 526.085 539.133 cv
526.087 540.496 526.057 541.817 525.862 543.167 cv
525.318 546.917 522.357 548.527 519.261 547.438 cv
519.693 549.123 523.273 549.944 525.158 547.929 cv
527.1 545.852 526.544 540.961 527.174 540.365 cv
527.935 540.192 530.836 540.151 531.747 540.167 cv
cp
.976471 .72549 .635294 rgb
f
547.064 548.899 mo
545.336 547.681 544.269 545.975 543.684 543.939 cv
542.802 540.872 540.993 539.655 541.539 535.635 cv
540.388 537.2 537.609 537.403 537.69 538.066 cv
537.88 539.627 537.832 542.614 536.948 544.744 cv
535.661 547.843 533.182 548.876 530.534 547.569 cv
531.141 549.573 535.86 550.6 537.67 547.461 cv
538.506 546.011 538.387 544.436 538.573 542.451 cv
541.397 543.74 543.374 545.7 544.073 547.671 cv
545.032 551.163 549.728 551.949 551.169 549.401 cv
549.81 549.854 548.375 549.823 547.064 548.899 cv
cp
f
651.284 577.85 mo
596.441 577.85 li
596.441 577.85 li
593.555 577.85 li
593.555 577.85 566.751 581.031 566.221 605.949 cv
566.121 610.628 566.846 614.315 568.115 617.221 cv
671.195 617.221 li
672.465 614.315 678.646 609.031 678.546 604.352 cv
678.016 579.434 651.284 577.85 651.284 577.85 cv
cp
.109804 .223529 .227451 rgb
f
566.57 611.643 mo
566.889 613.762 567.414 615.617 568.115 617.221 cv
671.195 617.221 li
671.898 615.613 674.125 613.765 675.958 611.643 cv
622.359 605.018 li
566.57 611.643 li
cp
.0941176 .196078 .2 rgb
f
612.949 685.118 mo
612.949 685.118 617.931 679.602 618.951 677.734 cv
636.984 612.359 li
641.002 597.248 650.948 581.742 663.412 584.155 cv
677.64 587.669 681.151 599.388 676.297 614.561 cv
640.47 680.765 li
640.599 680.941 640.669 681.037 640.669 681.037 cv
637.578 686.927 640.551 691.413 638.987 693.655 cv
631.165 699.481 li
626.507 711.834 li
626.507 711.834 618.551 713.214 610.153 705.338 cv
610.976 700.451 614.539 691.884 614.539 691.884 cv
612.949 685.118 li
cp
.113725 .231373 .239216 rgb
f
640.47 680.765 mo
640.47 680.765 619.669 692.418 636.28 614.911 cv
618.951 677.734 li
617.931 679.602 612.949 685.118 612.949 685.118 cv
614.539 691.884 li
614.539 691.884 610.976 700.451 610.153 705.338 cv
618.551 713.214 626.507 711.834 626.507 711.834 cv
631.165 699.481 li
638.987 693.655 li
640.551 691.413 637.578 686.927 640.669 681.037 cv
640.669 681.037 640.599 680.941 640.47 680.765 cv
cp
.0941176 .196078 .2 rgb
f
604.769 754.342 mo
602.387 754.342 605.902 750.514 602.415 749.087 cv
595.939 746.437 591.218 747.739 590.357 744.787 cv
589.227 740.916 593.602 732.967 598.033 726.684 cv
598.892 725.465 li
604.802 717.057 607.585 711.693 609.529 704.97 cv
609.865 703.809 li
610.726 704.657 li
616.709 710.551 622.826 711.188 625.178 711.188 cv
625.947 711.188 626.394 711.122 626.399 711.122 cv
627.263 710.993 li
627.225 711.866 li
627 716.929 625.818 723.611 623.614 732.292 cv
623.426 733.031 623.245 733.757 623.068 734.468 cv
620.731 743.82 618.678 755.245 610.928 755.245 cv
604.769 754.342 li
cp
.8 .8 .8 rgb
f
622.917 732.115 mo
625.118 723.445 626.282 716.868 626.507 711.833 cv
626.507 711.833 618.271 713.1 610.22 705.17 cv
608.178 712.235 605.189 717.757 599.481 725.879 cv
591.411 737.36 587.304 742.127 602.687 748.421 cv
618.185 754.762 619.463 745.716 622.917 732.115 cv
cp
.498039 .152941 0 rgb
f
613.878 740.278 mo
608.995 737.899 603.898 735.854 598.622 734.518 cv
597.316 734.187 595.862 733.818 594.368 733.553 cv
590.35 740.517 584.971 746.448 600.769 752.912 cv
617.105 759.596 617.053 750.67 619.744 743.442 cv
617.825 742.328 615.882 741.254 613.878 740.278 cv
cp
.8 .8 .8 rgb
f
594.368 733.553 mo
590.35 740.517 591.118 743.687 602.687 748.421 cv
613.407 752.807 617.053 750.67 619.744 743.442 cv
613.363 731.411 595.551 732.401 594.368 733.553 cv
cp
.878431 .878431 .878431 rgb
f
624.158 714.238 mo
618.497 714.542 611.321 709.418 611.321 709.418 cv
611.321 709.418 610.609 710.681 610.21 711.537 cv
617.757 718.366 624.085 717.024 624.085 717.024 cv
624.085 717.024 624.085 717.024 624.158 714.238 cv
cp
.8 .8 .8 rgb
f
623.524 719.664 mo
617.864 719.968 609.504 713.907 609.504 713.907 cv
609.504 713.907 608.433 715.686 608.034 716.543 cv
615.581 723.372 623.451 722.45 623.451 722.45 cv
623.451 722.45 623.451 722.45 623.524 719.664 cv
cp
f
622.08 726.101 mo
616.42 726.406 606.433 720.673 606.433 720.673 cv
606.433 720.673 605.362 722.452 604.963 723.309 cv
612.51 730.138 622.007 728.888 622.007 728.888 cv
622.007 728.888 622.007 728.888 622.08 726.101 cv
cp
f
631.011 687.2 mo
631.011 687.2 625.961 681.745 624.918 679.891 cv
606.086 614.741 li
601.884 599.68 591.748 584.297 579.315 586.863 cv
565.131 590.551 561.764 602.311 566.803 617.423 cv
603.438 683.185 li
603.311 683.362 603.242 683.459 603.242 683.459 cv
606.406 689.311 603.488 693.833 605.079 696.055 cv
612.971 701.785 li
617.781 714.08 li
617.781 714.08 625.753 715.363 634.054 707.385 cv
633.171 702.508 629.503 693.985 629.503 693.985 cv
631.011 687.2 li
cp
.113725 .231373 .239216 rgb
f
646.435 728.583 mo
645.56 727.372 li
639.547 719.036 633.984 707.217 633.984 707.217 cv
629.247 711.651 624.739 714.697 617.781 714.08 cv
617.676 718.818 618.652 725.997 620.923 734.501 cv
621.12 735.239 621.311 735.963 621.497 736.672 cv
623.933 745.942 626.968 756.894 634.596 756.894 cv
637.006 756.894 638.787 752.535 642.326 751.036 cv
648.769 748.307 654.218 748.404 655.043 745.443 cv
656.126 741.558 650.942 734.809 646.435 728.583 cv
cp
.8 .8 .8 rgb
f
621.618 734.315 mo
619.311 725.673 618.066 719.112 617.781 714.08 cv
617.781 714.08 626.031 715.245 633.984 707.217 cv
636.112 714.257 639.169 719.742 644.976 727.793 cv
653.186 739.175 657.351 743.891 642.046 750.373 cv
626.627 756.903 625.238 747.874 621.618 734.315 cv
cp
.909804 .317647 .0196078 rgb
f
630.756 742.368 mo
635.61 739.929 640.681 737.822 645.941 736.421 cv
647.243 736.074 648.692 735.687 650.182 735.404 cv
654.285 742.319 660.747 747.694 645.029 754.351 cv
628.775 761.235 627.708 752.798 624.929 745.603 cv
626.835 744.466 628.765 743.369 630.756 742.368 cv
cp
.8 .8 .8 rgb
f
630.756 742.368 mo
635.61 739.929 640.681 737.822 645.941 736.421 cv
647.243 736.074 648.692 735.687 650.182 735.404 cv
654.285 742.319 653.556 745.498 642.046 750.373 cv
631.381 754.89 627.708 752.798 624.929 745.603 cv
626.835 744.466 628.765 743.369 630.756 742.368 cv
cp
.878431 .878431 .878431 rgb
f
620.159 716.455 mo
625.822 716.69 632.936 711.479 632.936 711.479 cv
632.936 711.479 633.663 712.732 634.072 713.584 cv
626.61 720.505 620.266 719.241 620.266 719.241 cv
620.266 719.241 620.266 719.241 620.159 716.455 cv
cp
f
620.858 721.873 mo
626.522 722.108 634.807 715.945 634.807 715.945 cv
634.807 715.945 635.9 717.711 636.309 718.562 cv
628.847 725.484 620.965 724.658 620.965 724.658 cv
620.965 724.658 620.965 724.658 620.858 721.873 cv
cp
f
622.381 728.292 mo
628.045 728.527 637.961 722.673 637.961 722.673 cv
637.961 722.673 639.053 724.439 639.463 725.29 cv
632 732.212 622.488 731.078 622.488 731.078 cv
622.488 731.078 622.488 731.078 622.381 728.292 cv
cp
f
609.882 440.072 mo
606.642 454.574 li
597.463 459.369 li
622.33 479.284 li
647.943 459.369 li
638.028 454.621 li
634.778 440.072 li
609.882 440.072 li
cp
1 .780392 .690196 rgb
f
609.882 440.072 mo
606.642 454.574 li
597.463 459.369 li
622.33 479.284 li
622.445 461.541 li
636.765 448.967 li
634.778 440.072 li
609.882 440.072 li
cp
.858824 .631373 .552941 rgb
f
652.453 406.444 mo
651.632 406.292 650.787 406.513 649.973 407.035 cv
649.496 389.312 645.814 371.321 621.666 371.321 cv
598.66 371.321 593.743 389.416 593.353 407.23 cv
592.453 406.57 591.507 406.275 590.591 406.444 cv
587.668 406.983 586.151 412.035 587.202 417.726 cv
588.253 423.418 591.474 427.594 594.396 427.054 cv
595.274 426.892 596.023 426.321 596.616 425.451 cv
596.616 438.977 610.801 454.896 621.666 454.896 cv
632.458 454.896 646.62 439.459 646.62 425.715 cv
647.18 426.436 647.862 426.909 648.647 427.054 cv
651.57 427.594 654.791 423.418 655.842 417.726 cv
656.893 412.035 655.376 406.983 652.453 406.444 cv
cp
1 .780392 .690196 rgb
f
646.616 425.721 mo
647.175 426.442 647.858 426.915 648.643 427.06 cv
651.455 427.579 654.543 423.732 655.708 418.37 cv
653.413 422.991 649.813 426.462 647.474 422.355 cv
647.302 422.053 647.966 408.894 647.628 408.849 cv
647.746 408.43 649.86 407.431 649.968 407.007 cv
649.672 396.091 648.153 385.081 641.385 378.236 cv
643.301 385.345 644.399 393.605 644.399 402.418 cv
644.399 429.042 634.385 450.625 622.031 450.625 cv
609.678 450.625 599.663 429.042 599.663 402.418 cv
599.663 393.477 600.794 385.107 602.762 377.93 cv
596.224 384.209 593.529 394.4 593.248 407.235 cv
593.685 407.54 596.076 409.235 596.076 409.235 cv
595.737 409.28 596.599 421.514 596.462 421.834 cv
595.305 424.533 592.002 426.525 588.578 422.175 cv
590.07 425.429 592.307 427.445 594.392 427.06 cv
595.27 426.898 596.019 426.327 596.612 425.456 cv
596.612 438.982 610.797 454.901 621.662 454.901 cv
632.454 454.901 646.616 439.465 646.616 425.721 cv
cp
.858824 .631373 .552941 rgb
f
637.942 404.584 mo
637.927 405.307 635.448 404.445 632.357 404.504 cv
629.267 404.563 626.775 405.519 626.749 404.797 cv
626.701 403.476 628.924 401.263 632.015 401.204 cv
635.105 401.146 637.971 403.176 637.942 404.584 cv
cp
f
605.671 404.885 mo
605.798 405.598 608.275 404.493 611.365 404.494 cv
614.454 404.495 616.827 405.612 616.86 404.889 cv
616.973 402.447 614.461 400.863 611.371 400.862 cv
608.281 400.86 605.275 402.661 605.671 404.885 cv
cp
f
637.937 404.006 mo
637.964 405.426 635.34 403.284 632.249 403.343 cv
629.158 403.402 626.771 405.639 626.745 404.219 cv
626.718 402.799 629.18 400.444 632.27 400.385 cv
635.361 400.326 637.911 402.587 637.937 404.006 cv
cp
.196078 0 .00392157 rgb
f
605.661 404.006 mo
605.634 405.426 608.258 403.284 611.349 403.343 cv
614.44 403.402 616.827 405.639 616.854 404.219 cv
616.881 402.799 614.419 400.444 611.328 400.385 cv
608.237 400.326 605.688 402.587 605.661 404.006 cv
cp
f
615.673 413.766 mo
615.673 415.186 614.522 416.337 613.102 416.337 cv
611.682 416.337 610.53 415.186 610.53 413.766 cv
610.53 412.346 611.682 411.195 613.102 411.195 cv
614.522 411.195 615.673 412.346 615.673 413.766 cv
cp
.184314 .0117647 0 rgb
f
615.155 413.008 mo
615.155 413.723 614.575 414.303 613.86 414.303 cv
613.144 414.303 612.565 413.723 612.565 413.008 cv
612.565 412.293 613.144 411.713 613.86 411.713 cv
614.575 411.713 615.155 412.293 615.155 413.008 cv
cp
1 1 1 rgb
f
635.978 414.165 mo
635.978 415.586 634.827 416.737 633.407 416.737 cv
631.987 416.737 630.836 415.586 630.836 414.165 cv
630.836 412.745 631.987 411.594 633.407 411.594 cv
634.827 411.594 635.978 412.745 635.978 414.165 cv
cp
.184314 .0117647 0 rgb
f
635.627 413.407 mo
635.627 414.123 635.047 414.702 634.332 414.702 cv
633.616 414.702 633.037 414.123 633.037 413.407 cv
633.037 412.692 633.616 412.112 634.332 412.112 cv
635.047 412.112 635.627 412.692 635.627 413.407 cv
cp
1 1 1 rgb
f
616.405 430.483 mo
616.854 431.546 619.297 432.358 622.244 432.358 cv
625.192 432.358 627.635 431.546 628.083 430.483 cv
616.405 430.483 li
cp
.858824 .631373 .552941 rgb
f
616.405 440.798 mo
616.854 441.861 619.297 444.553 622.244 444.553 cv
625.192 444.553 627.635 441.861 628.083 440.798 cv
616.405 440.798 li
cp
.203922 .00784314 .0117647 rgb
f
621.263 450.43 mo
609.766 450.43 599.231 432.236 596.794 413.359 cv
596.437 413.359 li
596.254 417.094 596.333 425.829 596.333 425.829 cv
597.62 443.725 611.536 455.271 621.811 455.271 cv
631.987 455.271 647.559 442.826 647.559 425.342 cv
647.971 421.892 647.853 416.89 647.877 413.575 cv
647.746 413.572 647.612 413.579 647.481 413.575 cv
646.442 423.753 639.241 450.43 621.263 450.43 cv
cp
f
652.677 424.087 mo
652.316 425.533 651.19 426.497 650.161 426.24 cv
649.133 425.984 648.592 424.603 648.953 423.157 cv
649.315 421.711 650.441 420.747 651.469 421.004 cv
652.498 421.261 653.038 422.641 652.677 424.087 cv
cp
.215686 .207843 .211765 rgb
f
591.259 424.087 mo
591.621 425.533 592.747 426.497 593.775 426.24 cv
594.804 425.984 595.344 424.603 594.983 423.157 cv
594.622 421.711 593.496 420.747 592.467 421.004 cv
591.439 421.261 590.898 422.641 591.259 424.087 cv
cp
f
613.152 435.917 mo
616.691 436.276 619.629 434.477 621.968 435.437 cv
624.907 434.657 627.497 436.807 631.024 436.096 cv
627.126 437.596 615.551 437.056 613.152 435.917 cv
cp
.858824 .631373 .552941 rgb
f
614.832 437.8 mo
616.832 439.703 622.088 441.674 628.985 439.335 cv
626.047 439.215 618.73 439.419 614.832 437.8 cv
cp
f
655.089 403.357 mo
655.091 403.157 655.104 402.959 655.104 402.758 cv
655.104 382.107 640.242 365.367 621.909 365.367 cv
603.576 365.367 588.714 382.107 588.714 402.758 cv
588.714 402.898 588.724 403.036 588.725 403.176 cv
591.469 403.176 li
593.873 385.429 606.583 371.885 621.909 371.885 cv
637.288 371.885 650.035 385.52 652.377 403.357 cv
655.089 403.357 li
cp
.596078 .866667 .419608 rgb
f
657.623 403.573 mo
657.623 401.773 656.173 400.313 654.385 400.313 cv
652.596 400.313 651.146 401.773 651.146 403.573 cv
651.146 405.373 652.596 406.832 654.385 406.832 cv
656.173 406.832 657.623 405.373 657.623 403.573 cv
cp
589.254 406.832 mo
587.466 406.832 586.016 405.373 586.016 403.573 cv
586.016 401.773 587.466 400.313 589.254 400.313 cv
591.043 400.313 592.493 401.773 592.493 403.573 cv
592.493 405.373 591.043 406.832 589.254 406.832 cv
cp
.878431 .878431 .878431 rgb
f
595.571 420.06 mo
595.449 424.842 593.265 426.428 590.675 426.535 cv
588.084 426.642 585.901 424.689 585.798 422.174 cv
585.28 409.475 li
585.178 406.96 587.194 404.834 589.785 404.727 cv
592.375 404.62 595.071 406.661 594.976 410.387 cv
595.571 420.06 li
cp
.968627 .968627 .968627 rgb
f
588.432 420.501 mo
588.511 422.425 587.63 424.024 586.466 424.073 cv
585.301 424.121 584.293 422.599 584.215 420.675 cv
583.819 410.959 li
583.741 409.035 584.621 407.436 585.786 407.387 cv
586.95 407.339 587.958 408.861 588.036 410.785 cv
588.432 420.501 li
cp
.596078 .866667 .419608 rgb
f
648.261 419.89 mo
648.243 424.674 650.38 426.324 652.966 426.508 cv
655.552 426.692 657.791 424.805 657.968 422.294 cv
658.859 409.616 li
659.035 407.105 657.082 404.92 654.496 404.736 cv
651.91 404.552 649.155 406.512 649.141 410.239 cv
648.261 419.89 li
cp
.968627 .968627 .968627 rgb
f
654.485 420.516 mo
654.35 422.438 655.183 424.062 656.346 424.145 cv
657.508 424.228 658.56 422.737 658.695 420.816 cv
659.376 411.116 li
659.511 409.195 658.678 407.57 657.515 407.487 cv
656.353 407.405 655.301 408.895 655.166 410.817 cv
654.485 420.516 li
cp
.596078 .866667 .419608 rgb
f
655.089 403.357 mo
655.091 403.157 653.32 402.959 653.305 402.758 cv
651.506 378.947 634.414 368.626 621.909 368.626 cv
606.526 368.626 590.334 385.647 590.334 402.758 cv
590.334 402.898 588.724 403.036 588.725 403.176 cv
591.469 403.176 li
593.873 385.429 606.583 371.885 621.909 371.885 cv
637.288 371.885 650.035 385.52 652.377 403.357 cv
655.089 403.357 li
cp
.878431 .878431 .878431 rgb
f
594.922 577.85 mo
622.719 590.265 li
652.544 577.982 li
651.749 577.879 651.284 577.85 651.284 577.85 cv
596.441 577.85 li
596.441 577.85 li
594.922 577.85 li
cp
.0941176 .196078 .2 rgb
f
987.269 552.603 mo
117.656 552.603 li
117.656 571.002 li
987.269 571.002 li
987.269 552.603 li
cp
.113725 .231373 .239216 rgb
f
177.229 777.148 mo
165.793 777.148 li
165.793 562.71 li
177.229 562.71 li
177.229 777.148 li
cp
f
905.654 777.148 mo
894.217 777.148 li
894.217 562.71 li
905.654 562.71 li
905.654 777.148 li
cp
f
968.602 569.719 mo
140.805 569.719 li
139.674 574.408 li
967.471 574.408 li
968.602 569.719 li
cp
0 .501961 .6 rgb
f
1061.39 546.202 mo
1061.39 631.405 li
1061.39 640.227 1054.22 647.405 1045.39 647.405 cv
963.978 647.405 li
963.978 647.405 960.809 653.405 973.309 653.405 cv
1000.81 653.405 1045.39 653.405 1045.39 653.405 cv
1057.54 653.405 1067.39 643.555 1067.39 631.405 cv
1067.39 631.405 1067.39 578.024 1067.39 556.238 cv
1067.39 541.488 1061.39 546.202 1061.39 546.202 cv
cp
.113725 .231373 .239216 rgb
f
1045.06 643.738 mo
1045.06 646.5 1042.82 648.738 1040.06 648.738 cv
954.728 648.738 li
951.966 648.738 949.728 646.5 949.728 643.738 cv
949.728 636.738 li
949.728 633.977 951.966 631.738 954.728 631.738 cv
1040.06 631.738 li
1042.82 631.738 1045.06 633.977 1045.06 636.738 cv
1045.06 643.738 li
cp
.521569 .345098 .729412 rgb
f
966.366 667.902 mo
966.869 662.573 972.863 658.238 979.728 658.238 cv
1035.73 658.238 li
1042.59 658.238 1048.59 662.573 1049.09 667.902 cv
1058.56 764.441 li
1063.23 764.441 li
1054.07 667.432 li
1053.32 659.49 1045.12 653.238 1035.73 653.238 cv
979.728 653.238 li
970.339 653.238 962.138 659.49 961.388 667.432 cv
952.228 764.441 li
957.405 764.441 li
966.366 667.902 li
cp
.0784314 .172549 .176471 rgb
f
1055.86 620.874 mo
1055.58 623.436 1053.28 625.284 1050.71 625.001 cv
1048.15 624.718 1046.3 622.412 1046.59 619.85 cv
1060.26 495.936 li
1060.54 493.374 1062.85 491.526 1065.41 491.809 cv
1067.97 492.092 1069.82 494.397 1069.54 496.959 cv
1055.86 620.874 li
cp
.521569 .345098 .729412 rgb
f
943.141 263.739 mo
936.792 263.739 931.645 258.593 931.645 252.244 cv
931.645 245.895 936.792 240.748 943.141 240.748 cv
949.489 240.748 954.636 245.895 954.636 252.244 cv
954.636 258.593 949.489 263.739 943.141 263.739 cv
cp
961.286 248.833 mo
960.946 246.904 961.872 245.049 963.465 244.109 cv
962.654 242.03 961.535 240.107 960.162 238.396 cv
958.552 239.302 956.483 239.177 954.984 237.919 cv
953.483 236.659 953 234.641 953.617 232.896 cv
951.706 231.847 949.621 231.078 947.416 230.639 cv
946.767 232.372 945.1 233.608 943.141 233.608 cv
941.181 233.608 939.514 232.372 938.865 230.639 cv
936.66 231.078 934.575 231.847 932.664 232.896 cv
933.281 234.641 932.798 236.659 931.297 237.919 cv
929.798 239.177 927.729 239.302 926.119 238.396 cv
924.746 240.107 923.627 242.03 922.816 244.109 cv
924.409 245.049 925.336 246.904 924.995 248.833 cv
924.656 250.76 923.153 252.186 921.338 252.527 cv
921.388 254.796 921.785 256.979 922.478 259.027 cv
924.302 258.724 926.205 259.549 927.184 261.246 cv
928.163 262.94 927.927 264.999 926.755 266.427 cv
928.212 268.084 929.912 269.521 931.805 270.675 cv
933.008 269.268 934.997 268.677 936.839 269.347 cv
938.68 270.017 939.824 271.749 939.841 273.6 cv
940.917 273.763 942.019 273.848 943.141 273.848 cv
944.262 273.848 945.364 273.763 946.44 273.6 cv
946.457 271.749 947.601 270.017 949.442 269.347 cv
951.284 268.677 953.273 269.268 954.476 270.675 cv
956.369 269.521 958.069 268.084 959.526 266.427 cv
958.354 264.999 958.119 262.94 959.097 261.246 cv
960.076 259.549 961.979 258.724 963.804 259.027 cv
964.496 256.979 964.893 254.796 964.943 252.527 cv
963.128 252.186 961.625 250.76 961.286 248.833 cv
cp
.94902 .94902 .94902 rgb
f
908.445 283.357 mo
902.989 283.357 898.565 278.934 898.565 273.477 cv
898.565 268.021 902.989 263.597 908.445 263.597 cv
913.902 263.597 918.325 268.021 918.325 273.477 cv
918.325 278.934 913.902 283.357 908.445 283.357 cv
cp
926.761 273.687 mo
925.647 273.5 924.705 272.328 924.478 271.039 cv
924.147 269.164 li
923.92 267.875 924.404 266.451 925.387 265.895 cv
926.956 265.006 li
926.288 263.508 925.446 262.107 924.452 260.826 cv
922.758 261.823 li
921.785 262.396 920.31 262.103 919.307 261.262 cv
917.849 260.038 li
916.847 259.197 916.303 257.795 916.697 256.737 cv
917.336 255.027 li
915.89 254.318 914.347 253.779 912.733 253.429 cv
912.067 255.307 li
911.689 256.372 910.371 257.096 909.062 257.096 cv
907.159 257.096 li
905.85 257.096 904.532 256.372 904.155 255.307 cv
903.536 253.564 li
901.935 253.961 900.409 254.548 898.983 255.301 cv
899.688 257.189 li
900.083 258.247 899.539 259.649 898.536 260.49 cv
897.078 261.713 li
896.075 262.555 894.6 262.847 893.627 262.275 cv
892.022 261.33 li
891.069 262.639 890.27 264.067 889.649 265.587 cv
891.415 266.587 li
892.397 267.143 892.882 268.567 892.655 269.856 cv
892.324 271.73 li
892.097 273.02 891.154 274.192 890.041 274.379 cv
888.204 274.687 li
888.321 276.345 888.635 277.948 889.126 279.472 cv
891.118 279.104 li
892.228 278.899 893.515 279.678 894.169 280.811 cv
895.121 282.46 li
895.775 283.593 895.807 285.097 895.074 285.956 cv
893.875 287.362 li
895.007 288.529 896.278 289.56 897.662 290.429 cv
898.937 288.883 li
899.655 288.012 901.142 287.783 902.371 288.23 cv
904.16 288.881 li
905.39 289.329 906.381 290.46 906.372 291.589 cv
906.356 293.42 li
907.037 293.489 907.728 293.525 908.427 293.525 cv
909.378 293.525 910.312 293.454 911.229 293.327 cv
911.212 291.349 li
911.203 290.22 912.194 289.089 913.424 288.641 cv
915.212 287.99 li
916.442 287.542 917.928 287.772 918.647 288.643 cv
919.798 290.038 li
921.149 289.122 922.383 288.046 923.474 286.839 cv
922.201 285.348 li
921.468 284.489 921.5 282.985 922.154 281.852 cv
923.106 280.203 li
923.76 279.07 925.047 278.29 926.157 278.496 cv
927.923 278.822 li
928.362 277.284 928.625 275.673 928.686 274.01 cv
926.761 273.687 li
cp
f
940.94 298.909 mo
939.74 295.614 li
940.178 295.356 940.565 295.022 940.89 294.633 cv
943.934 296.39 li
943.162 297.463 942.135 298.334 940.94 298.909 cv
cp
937.095 299.676 mo
936.576 299.648 936.074 299.568 935.588 299.446 cv
936.779 296.175 li
936.931 296.199 937.086 296.216 937.244 296.225 cv
937.605 296.244 937.957 296.215 938.297 296.152 cv
939.493 299.438 li
938.73 299.635 937.924 299.721 937.095 299.676 cv
cp
931.132 296.432 mo
934.131 294.7 li
934.468 295.088 934.872 295.414 935.325 295.667 cv
934.139 298.925 li
932.936 298.355 931.904 297.492 931.132 296.432 cv
cp
931.838 286.308 mo
934.063 288.958 li
933.729 289.361 933.464 289.822 933.288 290.329 cv
929.893 289.73 li
930.246 288.418 930.928 287.25 931.838 286.308 cv
cp
936.713 283.937 mo
936.713 287.414 li
936.183 287.507 935.683 287.692 935.233 287.957 cv
933.011 285.309 li
934.086 284.559 935.351 284.076 936.713 283.937 cv
cp
941.971 285.269 mo
939.721 287.951 li
939.276 287.691 938.782 287.506 938.253 287.414 cv
938.253 283.93 li
939.631 284.058 940.897 284.534 941.971 285.269 cv
cp
945.128 289.672 mo
941.666 290.283 li
941.489 289.792 941.224 289.343 940.895 288.948 cv
943.152 286.258 li
944.077 287.202 944.766 288.371 945.128 289.672 cv
cp
935.488 291.68 mo
935.547 290.578 936.489 289.733 937.591 289.792 cv
938.693 289.852 939.538 290.793 939.478 291.895 cv
939.419 292.997 938.477 293.842 937.375 293.783 cv
936.273 293.723 935.428 292.782 935.488 291.68 cv
cp
929.632 291.361 mo
929.643 291.25 li
933.045 291.85 li
933.052 292.387 933.153 292.903 933.337 293.38 cv
930.352 295.104 li
929.826 293.97 929.56 292.696 929.632 291.361 cv
cp
945.41 292.213 mo
945.355 293.228 945.104 294.185 944.706 295.058 cv
941.661 293.3 li
941.806 292.9 941.896 292.473 941.92 292.027 cv
941.921 291.802 li
945.391 291.19 li
945.417 291.526 945.428 291.867 945.41 292.213 cv
cp
952.136 292.744 mo
951.255 292.547 950.553 291.57 950.427 290.531 cv
950.244 289.02 li
950.118 287.981 950.566 286.865 951.375 286.463 cv
952.666 285.821 li
952.198 284.596 951.585 283.44 950.847 282.375 cv
949.451 283.098 li
948.65 283.513 947.484 283.217 946.72 282.502 cv
945.609 281.462 li
944.844 280.747 944.47 279.604 944.831 278.776 cv
945.415 277.438 li
944.291 276.81 943.082 276.312 941.808 275.964 cv
941.195 277.435 li
940.848 278.268 939.764 278.79 938.719 278.734 cv
937.199 278.652 li
936.154 278.595 935.133 277.96 934.877 277.094 cv
934.459 275.676 li
933.163 275.923 931.919 276.327 930.748 276.866 cv
931.23 278.404 li
931.499 279.265 931.005 280.361 930.168 280.99 cv
928.951 281.904 li
928.114 282.533 926.923 282.703 926.171 282.204 cv
924.93 281.38 li
924.113 282.385 923.413 283.49 922.852 284.677 cv
924.219 285.551 li
924.979 286.038 925.305 287.196 925.068 288.215 cv
924.723 289.698 li
924.486 290.717 923.683 291.613 922.786 291.714 cv
921.306 291.881 li
921.328 293.21 921.509 294.503 921.836 295.742 cv
923.442 295.534 li
924.338 295.418 925.331 296.095 925.805 297.028 cv
926.494 298.386 li
926.968 299.319 926.928 300.521 926.306 301.175 cv
925.288 302.246 li
926.142 303.227 927.112 304.105 928.179 304.858 cv
929.264 303.679 li
929.875 303.015 931.072 302.895 932.035 303.306 cv
933.435 303.903 li
934.398 304.313 935.14 305.259 935.084 306.16 cv
934.993 307.622 li
935.534 307.706 936.084 307.764 936.642 307.794 cv
937.401 307.835 938.15 307.819 938.888 307.757 cv
938.96 306.177 li
939.001 305.275 939.841 304.414 940.842 304.11 cv
942.299 303.667 li
943.3 303.363 944.477 303.61 945.013 304.337 cv
945.872 305.5 li
946.99 304.826 948.021 304.021 948.945 303.104 cv
947.993 301.858 li
947.444 301.141 947.534 299.942 948.106 299.065 cv
948.937 297.789 li
949.508 296.913 950.569 296.346 951.447 296.557 cv
952.843 296.894 li
953.26 295.685 953.539 294.41 953.66 293.085 cv
952.136 292.744 li
cp
f
612.678 300.941 mo
605.197 297.108 602.24 287.936 606.073 280.456 cv
609.907 272.975 619.079 270.018 626.559 273.851 cv
634.04 277.685 636.997 286.857 633.164 294.337 cv
629.331 301.818 620.159 304.775 612.678 300.941 cv
cp
643.059 294.334 mo
643.823 291.856 646.035 290.229 648.479 290.082 cv
648.779 287.144 648.622 284.203 648.037 281.357 cv
645.592 281.453 643.231 280.056 642.223 277.668 cv
641.215 275.277 641.865 272.608 643.646 270.924 cv
642.027 268.535 640.034 266.369 637.701 264.522 cv
635.89 266.171 633.18 266.621 630.871 265.438 cv
628.562 264.255 627.344 261.793 627.625 259.359 cv
624.763 258.544 621.841 258.192 618.956 258.273 cv
618.629 260.701 616.842 262.788 614.313 263.366 cv
611.786 263.943 609.273 262.843 607.923 260.802 cv
605.271 261.99 602.792 263.58 600.582 265.539 cv
601.891 267.609 601.862 270.355 600.297 272.422 cv
598.733 274.487 596.102 275.26 593.757 274.566 cv
592.446 277.27 591.595 280.082 591.175 282.913 cv
593.509 283.657 595.252 285.778 595.382 288.369 cv
595.511 290.956 593.992 293.24 591.748 294.215 cv
592.464 297.047 593.599 299.767 595.134 302.269 cv
597.4 301.338 600.101 301.842 601.867 303.744 cv
603.632 305.646 603.934 308.377 602.836 310.568 cv
604.006 311.41 605.253 312.175 606.574 312.853 cv
607.896 313.53 609.246 314.095 610.612 314.552 cv
611.75 312.382 614.143 311.031 616.718 311.354 cv
619.292 311.676 621.279 313.574 621.847 315.958 cv
624.775 315.742 627.646 315.074 630.362 314.002 cv
629.844 311.611 630.809 309.044 632.986 307.637 cv
635.164 306.23 637.904 306.406 639.871 307.865 cv
641.924 305.871 643.709 303.538 645.138 300.894 cv
643.205 299.396 642.296 296.809 643.059 294.334 cv
cp
f
621.088 337.243 mo
621.396 334.782 li
621.755 334.76 622.106 334.675 622.436 334.535 cv
623.785 336.623 li
622.954 337.05 622.026 337.266 621.088 337.243 cv
cp
618.42 336.485 mo
618.103 336.301 617.813 336.088 617.546 335.854 cv
619.351 334.179 li
619.439 334.244 619.531 334.305 619.627 334.361 cv
619.848 334.49 620.079 334.585 620.314 334.655 cv
620.007 337.109 li
619.463 336.987 618.928 336.781 618.42 336.485 cv
cp
615.713 332.52 mo
618.16 332.397 li
618.247 332.75 618.395 333.086 618.599 333.391 cv
616.802 335.059 li
616.228 334.312 615.857 333.437 615.713 332.52 cv
cp
619.423 326.375 mo
619.969 328.761 li
619.629 328.906 619.313 329.111 619.039 329.374 cv
617.095 327.902 li
617.74 327.189 618.546 326.675 619.423 326.375 cv
cp
623.257 326.455 mo
622.135 328.644 li
621.771 328.531 621.397 328.486 621.028 328.508 cv
620.484 326.124 li
621.402 325.999 622.355 326.103 623.257 326.455 cv
cp
626.137 328.99 mo
623.855 329.952 li
623.659 329.645 623.408 329.369 623.105 329.14 cv
624.228 326.947 li
625.055 327.473 625.698 328.18 626.137 328.99 cv
cp
626.704 332.779 mo
624.327 332.047 li
624.374 331.681 624.353 331.313 624.273 330.958 cv
626.561 329.993 li
626.839 330.885 626.896 331.843 626.704 332.779 cv
cp
619.988 330.934 mo
620.381 330.259 621.246 330.031 621.921 330.424 cv
622.595 330.816 622.823 331.682 622.431 332.356 cv
622.038 333.031 621.172 333.259 620.498 332.866 cv
619.823 332.473 619.595 331.608 619.988 330.934 cv
cp
616.404 328.844 mo
616.448 328.778 li
618.395 330.252 li
618.226 330.593 618.124 330.95 618.086 331.31 cv
615.651 331.432 li
615.685 330.549 615.928 329.661 616.404 328.844 cv
cp
626.062 334.469 mo
625.7 335.091 625.233 335.612 624.701 336.033 cv
623.351 333.944 li
623.571 333.739 623.766 333.5 623.925 333.227 cv
623.998 333.085 li
626.38 333.82 li
626.287 334.04 626.185 334.258 626.062 334.469 cv
cp
630.125 336.973 mo
629.634 336.565 629.507 335.724 629.763 335.029 cv
630.135 334.019 li
630.391 333.324 631.033 332.766 631.671 332.774 cv
632.691 332.786 li
632.791 331.864 632.779 330.939 632.657 330.031 cv
631.546 330.036 li
630.907 330.039 630.27 329.476 630.019 328.779 cv
629.655 327.766 li
629.404 327.069 629.537 326.229 630.031 325.825 cv
630.83 325.171 li
630.325 324.413 629.725 323.71 629.035 323.079 cv
628.175 323.808 li
627.688 324.22 626.837 324.199 626.198 323.826 cv
625.267 323.285 li
624.628 322.912 624.19 322.183 624.308 321.555 cv
624.502 320.527 li
623.607 320.265 622.694 320.118 621.783 320.08 cv
621.59 321.203 li
621.482 321.833 620.817 322.363 620.087 322.489 cv
619.026 322.672 li
618.296 322.797 617.492 322.52 617.18 321.963 cv
616.664 321.045 li
615.826 321.413 615.029 321.883 614.293 322.45 cv
614.871 323.441 li
615.193 323.993 615.024 324.826 614.546 325.392 cv
613.851 326.214 li
613.373 326.779 612.579 327.084 611.981 326.858 cv
610.996 326.486 li
610.581 327.329 610.278 328.202 610.084 329.087 cv
611.163 329.474 li
611.764 329.69 612.17 330.437 612.168 331.177 cv
612.163 332.254 li
612.161 332.994 611.748 333.738 611.145 333.949 cv
610.159 334.295 li
610.38 335.187 610.708 336.053 611.137 336.872 cv
612.2 336.479 li
612.799 336.258 613.591 336.569 614.065 337.138 cv
614.753 337.965 li
615.227 338.534 615.389 339.369 615.063 339.918 cv
614.535 340.809 li
614.848 341.036 615.175 341.25 615.517 341.449 cv
615.982 341.72 616.458 341.952 616.942 342.151 cv
617.497 341.179 li
617.814 340.625 618.621 340.354 619.349 340.485 cv
620.409 340.676 li
621.137 340.807 621.798 341.343 621.901 341.973 cv
622.067 342.982 li
622.988 342.919 623.897 342.745 624.774 342.466 cv
624.576 341.374 li
624.463 340.746 624.906 340.02 625.549 339.652 cv
626.483 339.118 li
627.126 338.75 627.976 338.735 628.461 339.152 cv
629.231 339.814 li
629.883 339.187 630.47 338.475 630.974 337.679 cv
630.125 336.973 li
cp
f
525.537 184.571 mo
508.655 184.571 494.97 193.984 494.97 205.595 cv
494.97 211.322 498.305 216.513 503.706 220.304 cv
491.149 247.174 li
511.725 224.347 li
515.874 225.796 520.565 226.618 525.537 226.618 cv
542.418 226.618 556.104 217.205 556.104 205.595 cv
556.104 193.984 542.418 184.571 525.537 184.571 cv
cp
f
68.7158 273.571 mo
85.5974 273.571 99.2827 282.683 99.2827 293.923 cv
99.2827 299.468 95.948 304.492 90.5462 308.163 cv
103.104 334.174 li
82.5279 312.077 li
78.3783 313.479 73.6879 314.275 68.7158 314.275 cv
51.8342 314.275 38.1489 305.163 38.1489 293.923 cv
38.1489 282.683 51.8342 273.571 68.7158 273.571 cv
cp
f
392.451 315.839 mo
371.495 315.839 li
371.495 319.517 li
392.451 319.517 li
392.451 315.839 li
cp
368.152 315.839 mo
347.196 315.839 li
347.196 319.517 li
368.152 319.517 li
368.152 315.839 li
cp
389.33 322.973 mo
384.425 322.973 li
384.425 326.651 li
389.33 326.651 li
389.33 322.973 li
cp
381.75 322.973 mo
370.604 322.973 li
370.604 326.651 li
381.75 326.651 li
381.75 322.973 li
cp
367.706 322.973 mo
356.559 322.973 li
356.559 326.651 li
367.706 326.651 li
367.706 322.973 li
cp
351.878 322.973 mo
318.238 322.973 li
318.238 326.651 li
351.878 326.651 li
351.878 322.973 li
cp
345.413 315.839 mo
318.238 315.839 li
318.238 319.517 li
345.413 319.517 li
345.413 315.839 li
cp
323.253 309.82 mo
309.544 309.82 li
309.544 313.498 li
323.253 313.498 li
323.253 309.82 li
cp
388.884 301.825 mo
370.627 301.825 li
370.627 305.504 li
388.884 305.504 li
388.884 301.825 li
cp
391.241 294.438 mo
382.96 294.438 li
382.96 298.116 li
391.241 298.116 li
391.241 294.438 li
cp
380.413 294.438 mo
370.627 294.438 li
370.627 298.116 li
380.413 298.116 li
380.413 294.438 li
cp
368.152 294.438 mo
335.404 294.438 li
335.404 298.116 li
368.152 298.116 li
368.152 294.438 li
cp
368.152 301.571 mo
359.035 301.571 li
359.035 305.25 li
368.152 305.25 li
368.152 301.571 li
cp
356.559 301.571 mo
347.442 301.571 li
347.442 305.25 li
356.559 305.25 li
356.559 301.571 li
cp
343.629 301.571 mo
318.238 301.571 li
318.238 305.25 li
343.629 305.25 li
343.629 301.571 li
cp
331.948 294.438 mo
318.238 294.438 li
318.238 298.116 li
331.948 298.116 li
331.948 294.438 li
cp
323.253 292.097 mo
309.544 292.097 li
309.544 288.418 li
323.253 288.418 li
323.253 292.097 li
cp
f
1097.42 345.991 mo
1076.46 345.991 li
1076.46 349.669 li
1097.42 349.669 li
1097.42 345.991 li
cp
1073.12 345.991 mo
1052.16 345.991 li
1052.16 349.669 li
1073.12 349.669 li
1073.12 345.991 li
cp
1094.29 353.125 mo
1089.39 353.125 li
1089.39 356.803 li
1094.29 356.803 li
1094.29 353.125 li
cp
1086.71 353.125 mo
1075.57 353.125 li
1075.57 356.803 li
1086.71 356.803 li
1086.71 353.125 li
cp
1072.67 353.125 mo
1061.52 353.125 li
1061.52 356.803 li
1072.67 356.803 li
1072.67 353.125 li
cp
1056.84 353.125 mo
1023.2 353.125 li
1023.2 356.803 li
1056.84 356.803 li
1056.84 353.125 li
cp
1050.38 345.991 mo
1023.2 345.991 li
1023.2 349.669 li
1050.38 349.669 li
1050.38 345.991 li
cp
1028.22 339.972 mo
1014.51 339.972 li
1014.51 343.65 li
1028.22 343.65 li
1028.22 339.972 li
cp
1093.85 331.978 mo
1075.59 331.978 li
1075.59 335.656 li
1093.85 335.656 li
1093.85 331.978 li
cp
1096.21 324.59 mo
1087.92 324.59 li
1087.92 328.268 li
1096.21 328.268 li
1096.21 324.59 li
cp
1085.38 324.59 mo
1075.59 324.59 li
1075.59 328.268 li
1085.38 328.268 li
1085.38 324.59 li
cp
1073.12 324.59 mo
1040.37 324.59 li
1040.37 328.268 li
1073.12 328.268 li
1073.12 324.59 li
cp
1073.12 331.724 mo
1064 331.724 li
1064 335.402 li
1073.12 335.402 li
1073.12 331.724 li
cp
1061.52 331.724 mo
1052.41 331.724 li
1052.41 335.402 li
1061.52 335.402 li
1061.52 331.724 li
cp
1048.59 331.724 mo
1023.2 331.724 li
1023.2 335.402 li
1048.59 335.402 li
1048.59 331.724 li
cp
1036.91 324.59 mo
1023.2 324.59 li
1023.2 328.268 li
1036.91 328.268 li
1036.91 324.59 li
cp
1028.22 322.249 mo
1014.51 322.249 li
1014.51 318.571 li
1028.22 318.571 li
1028.22 322.249 li
cp
f
767.34 207.085 mo
758.206 192.138 li
763.041 188.37 766.163 182.506 766.163 175.901 cv
766.163 164.528 756.944 155.308 745.57 155.308 cv
725.565 155.308 li
714.192 155.308 704.972 164.528 704.972 175.901 cv
704.972 187.274 714.192 196.494 725.565 196.494 cv
745.57 196.494 li
747.623 196.494 749.602 196.185 751.473 195.625 cv
767.34 207.085 li
cp
f
242.328 304.229 mo
249.909 304.229 li
252.516 304.229 254.792 302.835 256.05 300.757 cv
236.902 301.743 li
238.219 303.263 240.159 304.229 242.328 304.229 cv
cp
256.68 298.5 mo
236.04 299.563 li
235.829 299.576 235.635 299.67 235.494 299.829 cv
235.354 299.987 235.283 300.191 235.296 300.403 cv
235.322 300.821 235.669 301.148 236.087 301.148 cv
256.778 300.084 li
256.989 300.071 257.183 299.977 257.324 299.818 cv
257.464 299.66 257.535 299.456 257.522 299.244 cv
257.496 298.827 257.151 298.5 256.68 298.5 cv
cp
261.167 261.66 mo
260.612 261.66 li
251.091 283.638 li
252.916 283.638 li
261.167 261.66 li
cp
243.395 269.197 mo
252.426 257.33 li
252.016 262.321 li
260.797 260.628 li
254.026 260.628 li
254.979 249.838 li
246.763 261.028 li
247.362 245.077 li
231.969 260.946 li
242.495 255.974 li
243.395 269.197 li
cp
241.406 283.638 mo
231.885 261.66 li
231.33 261.66 li
239.582 283.638 li
241.406 283.638 li
cp
263.175 271.168 mo
263.183 271.168 li
259.56 275.315 257.324 280.444 256.704 285.847 cv
235.956 285.847 li
235.337 280.444 233.1 275.315 229.478 271.168 cv
229.486 271.168 li
226.045 267.233 223.956 262.087 223.956 256.45 cv
223.956 244.093 233.973 234.075 246.33 234.075 cv
258.687 234.075 268.705 244.093 268.705 256.45 cv
268.705 262.087 266.615 267.233 263.175 271.168 cv
cp
235.147 287.28 mo
235.147 288.62 li
257.091 287.292 li
257.091 287.28 li
235.147 287.28 li
cp
246.33 308.234 mo
248.256 308.234 249.911 307.088 250.661 305.442 cv
242 305.442 li
242.749 307.088 244.404 308.234 246.33 308.234 cv
cp
257.214 287.921 mo
234.507 289.294 li
234.296 289.307 234.102 289.401 233.962 289.56 cv
233.821 289.719 233.751 289.922 233.764 290.134 cv
233.789 290.552 234.136 290.88 234.554 290.88 cv
257.307 289.505 li
257.743 289.479 258.077 289.102 258.051 288.665 cv
258.025 288.248 257.68 287.921 257.214 287.921 cv
cp
236.002 298.93 mo
256.644 297.866 li
256.779 297.858 256.909 297.875 257.035 297.903 cv
257.069 297.622 257.091 297.338 257.091 297.048 cv
257.091 295.232 li
235.147 296.559 li
235.147 297.048 li
235.147 297.755 235.253 298.436 235.443 299.082 cv
235.612 298.996 235.801 298.942 236.002 298.93 cv
cp
235.147 291.481 mo
235.147 293.698 li
257.091 292.37 li
257.091 290.154 li
235.147 291.481 li
cp
258.051 293.743 mo
258.077 294.18 257.743 294.557 257.307 294.583 cv
234.554 295.957 li
234.136 295.957 233.789 295.63 233.764 295.212 cv
233.751 295 233.821 294.796 233.962 294.638 cv
234.102 294.479 234.296 294.385 234.507 294.372 cv
257.214 292.999 li
257.68 292.999 258.025 293.326 258.051 293.743 cv
cp
f
273.133 549.835 mo
273.253 551.487 274.458 552.79 275.945 552.79 cv
359.093 552.79 li
360.58 552.79 361.785 551.487 361.905 549.835 cv
273.133 549.835 li
cp
1 1 1 rgb
f
357.604 548.413 mo
357.233 550.034 355.326 551.328 353.338 551.328 cv
283.327 551.328 li
281.339 551.328 279.482 550.034 279.175 548.413 cv
271.296 506.816 li
270.829 504.349 272.949 502.791 275.465 502.791 cv
364.061 502.791 li
366.577 502.791 367.683 504.349 367.118 506.816 cv
357.604 548.413 li
cp
f
357.359 549.484 mo
356.993 551.087 355.097 552.366 353.121 552.366 cv
283.503 552.366 li
281.526 552.366 279.681 551.087 279.378 549.484 cv
271.598 508.413 li
271.138 505.98 272.782 503.97 275.28 503.97 cv
363.247 503.97 li
365.745 503.97 367.31 505.98 366.753 508.413 cv
357.359 549.484 li
cp
.878431 .878431 .878431 rgb
f
326.813 531.533 mo
327.061 527.348 323.371 523.828 318.562 523.828 cv
313.753 523.828 309.935 527.348 310.03 531.533 cv
310.121 535.554 313.819 538.7 318.291 538.7 cv
322.764 538.7 326.576 535.554 326.813 531.533 cv
cp
1 1 1 rgb
f
948.176 548.71 mo
948.176 549.354 947.654 549.876 947.009 549.876 cv
860.509 549.876 li
859.865 549.876 859.343 549.354 859.343 548.71 cv
859.343 548.065 859.865 547.543 860.509 547.543 cv
947.009 547.543 li
947.654 547.543 948.176 548.065 948.176 548.71 cv
cp
.776471 .776471 .776471 rgb
f
856.559 548.569 mo
827.124 457.976 li
825.014 459.091 823.94 461.583 824.702 463.93 cv
851.411 546.134 li
852.088 548.215 853.999 549.532 856.07 549.57 cv
856.809 551.407 858.59 552.71 860.692 552.708 cv
947.126 552.607 li
949.594 552.604 951.63 550.81 952.035 548.458 cv
856.559 548.569 li
cp
.878431 .878431 .878431 rgb
f
870.009 550.543 mo
870.009 550.911 869.711 551.21 869.343 551.21 cv
861.509 551.21 li
861.141 551.21 860.843 550.911 860.843 550.543 cv
860.843 550.175 861.141 549.876 861.509 549.876 cv
869.343 549.876 li
869.711 549.876 870.009 550.175 870.009 550.543 cv
cp
.776471 .776471 .776471 rgb
f
881.509 550.543 mo
881.509 550.911 881.211 551.21 880.843 551.21 cv
873.009 551.21 li
872.641 551.21 872.343 550.911 872.343 550.543 cv
872.343 550.175 872.641 549.876 873.009 549.876 cv
880.843 549.876 li
881.211 549.876 881.509 550.175 881.509 550.543 cv
cp
f
945.509 550.543 mo
945.509 550.911 945.211 551.21 944.843 551.21 cv
937.009 551.21 li
936.641 551.21 936.343 550.911 936.343 550.543 cv
936.343 550.175 936.641 549.876 937.009 549.876 cv
944.843 549.876 li
945.211 549.876 945.509 550.175 945.509 550.543 cv
cp
f
640.365 551.056 mo
640.365 551.916 639.668 552.613 638.809 552.613 cv
548.139 552.613 li
547.28 552.613 546.583 551.916 546.583 551.056 cv
546.583 550.196 547.28 549.5 548.139 549.5 cv
638.809 549.5 li
639.668 549.5 640.365 550.196 640.365 551.056 cv
cp
.8 .8 .8 rgb
f
554.2 551.077 mo
554.2 551.814 553.602 552.412 552.865 552.412 cv
538.109 552.412 li
537.372 552.412 536.774 551.814 536.774 551.077 cv
536.774 550.34 537.372 549.742 538.109 549.742 cv
552.865 549.742 li
553.602 549.742 554.2 550.34 554.2 551.077 cv
cp
1 1 1 rgb
f
786.751 538.898 mo
786.405 542.227 783.813 544.926 780.953 544.926 cv
639.422 544.926 li
635.97 544.926 633.47 541.945 633.853 538.268 cv
644.068 440.063 li
644.451 436.386 647.551 433.599 650.978 433.837 cv
791.493 443.598 li
794.333 443.795 796.347 446.653 796 449.983 cv
786.751 538.898 li
cp
.0784314 0 .00392157 rgb
f
788.55 538.898 mo
788.204 542.227 785.612 544.926 782.752 544.926 cv
641.221 544.926 li
637.769 544.926 635.27 541.945 635.652 538.268 cv
645.868 440.063 li
646.25 436.386 649.35 433.599 652.777 433.837 cv
793.292 443.598 li
796.132 443.795 798.146 446.653 797.8 449.983 cv
788.55 538.898 li
cp
.878431 .878431 .878431 rgb
f
649.54 439.356 mo
649.54 439.356 663.153 483.753 637.778 542.047 cv
636.923 539.888 638.622 520.097 641.055 496.707 cv
646.947 440.063 646.926 443.365 649.54 439.356 cv
cp
1 1 1 rgb
f
792.154 445.131 mo
792.154 445.131 728.149 451.608 651.112 435.775 cv
654.234 434.902 683.926 437.266 716.533 439.513 cv
748.599 441.723 782.873 444.411 792.154 445.131 cv
cp
f
741.231 487.039 mo
740.567 493.419 735.846 499.431 729.764 500.653 cv
722.353 502.141 715.811 496.191 716.762 487.039 cv
717.714 477.888 725.494 471.937 732.596 473.426 cv
738.423 474.647 741.894 480.659 741.231 487.039 cv
cp
f
736.733 510.021 mo
716.087 508.994 li
715.548 508.994 713.117 542.159 696.26 550.519 cv
667.82 550.519 li
666.826 550.519 666.021 551.325 666.021 552.318 cv
666.021 552.411 666.03 552.501 666.044 552.589 cv
732.595 552.589 li
738.623 552.589 737.346 510.021 736.733 510.021 cv
cp
f
736.913 510.021 mo
716.813 508.873 li
716.275 508.873 714.723 543.306 696.372 551.403 cv
667.405 551.583 li
666.411 551.583 666.021 551.325 666.021 552.318 cv
666.021 552.411 666.03 552.501 666.044 552.589 cv
732.776 552.589 li
738.803 552.589 737.526 510.021 736.913 510.021 cv
cp
.8 .8 .8 rgb
f
1097.42 456.111 mo
1092.52 490.219 li
1092.42 490.77 1091.56 491.207 1090.61 491.207 cv
1078.97 491.207 li
1078.02 491.207 1077.16 490.77 1077.06 490.219 cv
1072.17 456.111 li
1097.42 456.111 li
cp
.909804 .317647 .0196078 rgb
f
1097.42 454.725 mo
1092.52 448.093 li
1092.42 447.985 1091.56 447.901 1090.61 447.901 cv
1078.97 447.901 li
1078.02 447.901 1077.16 447.985 1077.06 448.093 cv
1072.17 454.725 li
1097.42 454.725 li
cp
1 .392157 .121569 rgb
f
1086.71 454.07 mo
1073.46 454.07 li
1077.47 448.645 li
1077.71 448.605 1078.24 448.555 1078.97 448.555 cv
1086.71 448.555 li
1086.71 454.07 li
cp
.909804 .317647 .0196078 rgb
f
1070.75 455.508 mo
1070.75 456.186 1071.3 456.735 1071.98 456.735 cv
1097.99 456.735 li
1098.67 456.735 1099.21 456.186 1099.21 455.508 cv
1099.21 454.83 1098.67 454.281 1097.99 454.281 cv
1071.98 454.281 li
1071.3 454.281 1070.75 454.83 1070.75 455.508 cv
cp
.878431 .878431 .878431 rgb
f
1073.24 454.847 mo
1086.82 454.847 li
1086.82 456.168 li
1073.24 456.168 li
1072.87 456.168 1072.58 455.873 1072.58 455.508 cv
1072.58 455.143 1072.87 454.847 1073.24 454.847 cv
cp
1 1 1 rgb
f
1091.85 457.725 mo
1096.49 457.725 li
1091.95 489.333 li
1091.86 489.844 1091.07 490.248 1090.18 490.248 cv
1089.24 490.248 li
1091.85 457.725 li
cp
1 .392157 .121569 rgb
f
1082.69 457.725 mo
1083.67 490.248 li
1079.4 490.248 li
1078.51 490.248 1077.72 489.844 1077.63 489.333 cv
1073.09 457.725 li
1082.69 457.725 li
cp
.768627 .235294 0 rgb
f
1075.63 480.262 mo
1073.69 466.745 li
1095.89 466.745 li
1093.95 480.262 li
1075.63 480.262 li
cp
.203922 .00784314 .0117647 rgb
f
1091.03 466.745 mo
1095.12 466.745 li
1093.16 480.262 li
1090.01 480.262 li
1091.03 466.745 li
cp
.266667 .0313726 .0431373 rgb
f
1082.82 466.745 mo
1083.51 480.262 li
1076.31 480.262 li
1074.51 466.745 li
1082.82 466.745 li
cp
.156863 .00392157 .0117647 rgb
f
1096.61 422.051 mo
1097.16 421.806 1098 422.842 1097.16 423.305 cv
1094.52 424.749 1085.38 429.358 1085.38 429.358 cv
1085.38 447.92 li
1083.63 447.92 li
1083.63 428.159 li
1083.63 428.159 1093.01 423.632 1096.61 422.051 cv
cp
1 1 1 rgb
f
511.878 517.317 mo
506.981 551.425 li
506.881 551.976 506.026 552.413 505.071 552.413 cv
493.436 552.413 li
492.481 552.413 491.626 551.976 491.526 551.425 cv
486.629 517.317 li
511.878 517.317 li
cp
.909804 .317647 .0196078 rgb
f
511.878 515.93 mo
506.981 509.298 li
506.881 509.191 506.026 509.106 505.071 509.106 cv
493.436 509.106 li
492.481 509.106 491.626 509.191 491.526 509.298 cv
486.629 515.93 li
511.878 515.93 li
cp
1 .392157 .121569 rgb
f
501.172 515.276 mo
487.926 515.276 li
491.931 509.851 li
492.169 509.811 492.704 509.76 493.436 509.76 cv
501.172 509.76 li
501.172 515.276 li
cp
.909804 .317647 .0196078 rgb
f
485.212 516.713 mo
485.212 517.391 485.761 517.94 486.439 517.94 cv
512.451 517.94 li
513.128 517.94 513.678 517.391 513.678 516.713 cv
513.678 516.036 513.128 515.486 512.451 515.486 cv
486.439 515.486 li
485.761 515.486 485.212 516.036 485.212 516.713 cv
cp
.878431 .878431 .878431 rgb
f
487.699 516.053 mo
501.282 516.053 li
501.282 517.374 li
487.699 517.374 li
487.334 517.374 487.038 517.078 487.038 516.713 cv
487.038 516.349 487.334 516.053 487.699 516.053 cv
cp
1 1 1 rgb
f
506.316 518.93 mo
510.953 518.93 li
506.415 550.538 li
506.322 551.049 505.53 551.454 504.645 551.454 cv
503.698 551.454 li
506.316 518.93 li
cp
1 .392157 .121569 rgb
f
497.154 518.93 mo
498.136 551.454 li
493.863 551.454 li
492.977 551.454 492.185 551.049 492.092 550.538 cv
487.554 518.93 li
497.154 518.93 li
cp
.768627 .235294 0 rgb
f
490.096 541.468 mo
488.156 527.951 li
510.351 527.951 li
508.411 541.468 li
490.096 541.468 li
cp
.203922 .00784314 .0117647 rgb
f
505.498 527.951 mo
509.588 527.951 li
507.624 541.468 li
504.475 541.468 li
505.498 527.951 li
cp
.266667 .0313726 .0431373 rgb
f
497.287 527.951 mo
497.972 541.468 li
490.774 541.468 li
488.974 527.951 li
497.287 527.951 li
cp
.156863 .00392157 .0117647 rgb
f
511.074 483.256 mo
511.619 483.011 512.465 484.047 511.619 484.511 cv
508.986 485.955 499.84 490.564 499.84 490.564 cv
499.84 509.125 li
498.095 509.125 li
498.095 489.364 li
498.095 489.364 507.475 484.838 511.074 483.256 cv
cp
.878431 .878431 .878431 rgb
f
243.962 536.473 mo
246.481 523.05 li
247.248 522.739 248.048 522.543 248.857 522.503 cv
252.603 522.317 255.085 525.38 254.402 529.345 cv
253.718 533.31 250.127 536.676 246.381 536.862 cv
245.494 536.906 244.682 536.762 243.962 536.473 cv
cp
217.378 516.555 mo
223.205 547.605 li
223.642 549.931 225.635 551.663 227.694 551.663 cv
237.384 551.663 li
239.442 551.663 241.436 549.931 241.872 547.605 cv
243.298 540.007 li
244.078 540.196 244.911 540.288 245.798 540.244 cv
251.309 539.971 256.592 535.02 257.597 529.186 cv
258.603 523.353 254.951 518.846 249.44 519.12 cv
248.666 519.158 247.899 519.298 247.145 519.51 cv
247.7 516.555 li
217.378 516.555 li
cp
.917647 .333333 .411765 rgb
f
227.661 517.296 mo
218.271 517.296 li
223.934 547.468 li
224.297 549.405 225.949 550.922 227.694 550.922 cv
230.856 550.922 li
227.661 517.296 li
cp
.956863 .529412 .6 rgb
f
246.807 517.296 mo
243.159 517.296 li
237.882 550.869 li
239.433 550.614 240.816 549.219 241.144 547.468 cv
246.807 517.296 li
cp
f
247.403 520.525 mo
250.83 518.301 257.871 520.432 257.038 527.751 cv
256.76 524.972 253.98 519.876 247.403 520.525 cv
cp
f
209.086 548.404 mo
209.829 549.96 213.974 551.309 219.968 552.124 cv
246.673 552.124 li
252.667 551.309 256.812 549.96 257.555 548.404 cv
209.086 548.404 li
cp
.917647 .333333 .411765 rgb
f
217.2 548.404 mo
215.162 548.404 210.252 548.404 210.252 548.404 cv
210.959 549.96 214.904 551.309 220.611 552.124 cv
223.45 552.124 li
223.45 552.124 218.312 550.82 217.2 548.404 cv
cp
.956863 .529412 .6 rgb
f
254.073 548.404 mo
254.073 548.404 251.479 550.264 244.623 552.124 cv
245.177 552.124 246.03 552.124 246.03 552.124 cv
251.737 551.309 255.682 549.96 256.389 548.404 cv
254.073 548.404 li
cp
f
209.629 549.067 mo
257.017 549.067 li
257.265 548.851 257.447 548.63 257.555 548.404 cv
209.086 548.404 li
209.194 548.63 209.382 548.851 209.629 549.067 cv
cp
1 1 1 rgb
f
229.769 513.824 mo
226.804 509.13 224.581 504.188 230.263 493.071 cv
235.945 481.954 228.534 476.271 228.534 475.777 cv
236.193 480.965 238.946 490.457 234.463 497.271 cv
228.287 506.659 229.769 513.824 229.769 513.824 cv
cp
f
237.922 514.071 mo
235.301 510.643 233.709 506.206 238.663 500.977 cv
243.11 496.283 241.875 490.353 238.663 486.648 cv
242.369 488.377 247.063 495.542 242.616 502.212 cv
239.127 507.445 236.992 509.589 237.922 514.071 cv
cp
f
773.56 536.973 mo
776.079 523.55 li
776.846 523.239 777.646 523.043 778.455 523.003 cv
782.201 522.817 784.683 525.88 784 529.845 cv
783.316 533.81 779.725 537.176 775.979 537.362 cv
775.092 537.406 774.28 537.262 773.56 536.973 cv
cp
746.976 517.055 mo
752.803 548.105 li
753.24 550.431 755.233 552.163 757.292 552.163 cv
766.982 552.163 li
769.04 552.163 771.034 550.431 771.47 548.105 cv
772.896 540.507 li
773.676 540.696 774.508 540.788 775.396 540.744 cv
780.907 540.471 786.19 535.52 787.195 529.686 cv
788.201 523.853 784.549 519.346 779.038 519.62 cv
778.264 519.658 777.497 519.798 776.743 520.01 cv
777.298 517.055 li
746.976 517.055 li
cp
.0156863 .105882 .14902 rgb
f
757.259 517.796 mo
747.869 517.796 li
753.532 547.968 li
753.895 549.905 755.547 551.422 757.292 551.422 cv
760.454 551.422 li
757.259 517.796 li
cp
.0235294 .133333 .2 rgb
f
776.405 517.796 mo
772.757 517.796 li
767.48 551.369 li
769.031 551.114 770.414 549.719 770.742 547.968 cv
776.405 517.796 li
cp
f
777.001 521.025 mo
780.428 518.801 787.469 520.932 786.636 528.251 cv
786.358 525.472 783.578 520.376 777.001 521.025 cv
cp
f
738.684 548.904 mo
739.427 550.46 743.572 551.809 749.566 552.624 cv
776.271 552.624 li
782.265 551.809 786.409 550.46 787.153 548.904 cv
738.684 548.904 li
cp
.0156863 .105882 .14902 rgb
f
746.798 548.904 mo
744.76 548.904 739.85 548.904 739.85 548.904 cv
740.557 550.46 744.502 551.809 750.209 552.624 cv
753.048 552.624 li
753.048 552.624 747.91 551.32 746.798 548.904 cv
cp
.0235294 .133333 .2 rgb
f
783.671 548.904 mo
783.671 548.904 781.077 550.764 774.221 552.624 cv
774.775 552.624 775.628 552.624 775.628 552.624 cv
781.335 551.809 785.28 550.46 785.987 548.904 cv
783.671 548.904 li
cp
f
739.227 549.567 mo
786.615 549.567 li
786.863 549.351 787.045 549.13 787.153 548.904 cv
738.684 548.904 li
738.792 549.13 738.98 549.351 739.227 549.567 cv
cp
1 1 1 rgb
f
759.367 514.324 mo
756.402 509.63 754.179 504.688 759.861 493.571 cv
765.543 482.454 758.132 476.771 758.132 476.277 cv
765.79 481.465 768.544 490.957 764.061 497.771 cv
757.885 507.159 759.367 514.324 759.367 514.324 cv
cp
f
767.52 514.571 mo
764.899 511.143 763.307 506.706 768.261 501.477 cv
772.708 496.783 771.473 490.853 768.261 487.148 cv
771.967 488.877 776.661 496.042 772.214 502.712 cv
768.725 507.945 766.59 510.089 767.52 514.571 cv
cp
f
181.461 103.214 mo
173.98 99.3808 171.024 90.2091 174.857 82.7284 cv
178.69 75.2478 187.862 72.2911 195.343 76.1244 cv
202.824 79.9577 205.781 89.1294 201.947 96.6101 cv
198.114 104.091 188.942 107.047 181.461 103.214 cv
cp
211.842 96.6068 mo
212.606 94.1285 214.818 92.5021 217.263 92.3554 cv
217.562 89.417 217.405 86.4758 216.82 83.6296 cv
214.375 83.7258 212.014 82.3289 211.007 79.941 cv
209.998 77.5503 210.649 74.881 212.429 73.1974 cv
210.81 70.808 208.818 68.6422 206.484 66.7945 cv
204.673 68.4442 201.963 68.8941 199.654 67.7109 cv
197.345 66.5278 196.127 64.0654 196.409 61.6316 cv
193.546 60.8166 190.624 60.4645 187.739 60.546 cv
187.412 62.9744 185.626 65.0613 183.096 65.6391 cv
180.569 66.2163 178.057 65.1156 176.706 63.0746 cv
174.055 64.2625 171.576 65.8528 169.365 67.8119 cv
170.674 69.882 170.646 72.6275 169.08 74.6951 cv
167.517 76.7603 164.886 77.5327 162.54 76.8386 cv
161.23 79.5432 160.379 82.3545 159.959 85.1855 cv
162.292 85.9301 164.035 88.0513 164.165 90.6414 cv
164.295 93.2293 162.775 95.5125 160.531 96.488 cv
161.247 99.3196 162.383 102.04 163.917 104.542 cv
166.184 103.611 168.885 104.115 170.65 106.017 cv
172.415 107.918 172.717 110.649 171.62 112.84 cv
172.789 113.683 174.036 114.448 175.358 115.125 cv
176.679 115.803 178.029 116.368 179.396 116.825 cv
180.533 114.654 182.926 113.304 185.501 113.626 cv
188.076 113.949 190.063 115.847 190.63 118.231 cv
193.558 118.014 196.429 117.347 199.146 116.275 cv
198.627 113.884 199.593 111.317 201.769 109.91 cv
203.947 108.503 206.687 108.679 208.654 110.138 cv
210.707 108.144 212.492 105.811 213.922 103.167 cv
211.989 101.669 211.079 99.0823 211.842 96.6068 cv
cp
.917647 .956863 .764706 rgb
f
189.871 139.516 mo
190.179 137.055 li
190.538 137.033 190.889 136.948 191.219 136.808 cv
192.569 138.896 li
191.737 139.323 190.809 139.539 189.871 139.516 cv
cp
187.204 138.758 mo
186.886 138.573 186.596 138.361 186.33 138.127 cv
188.134 136.452 li
188.222 136.517 188.314 136.577 188.411 136.634 cv
188.632 136.762 188.863 136.858 189.097 136.928 cv
188.79 139.382 li
188.246 139.259 187.711 139.054 187.204 138.758 cv
cp
184.497 134.793 mo
186.943 134.67 li
187.03 135.023 187.179 135.359 187.383 135.664 cv
185.585 137.332 li
185.012 136.585 184.641 135.709 184.497 134.793 cv
cp
188.207 128.648 mo
188.752 131.034 li
188.412 131.179 188.097 131.384 187.822 131.646 cv
185.879 130.175 li
186.524 129.462 187.33 128.948 188.207 128.648 cv
cp
192.04 128.728 mo
190.918 130.917 li
190.555 130.804 190.18 130.759 189.812 130.781 cv
189.267 128.397 li
190.185 128.272 191.138 128.376 192.04 128.728 cv
cp
194.92 131.262 mo
192.638 132.225 li
192.442 131.918 192.191 131.642 191.888 131.413 cv
193.012 129.22 li
193.838 129.745 194.481 130.453 194.92 131.262 cv
cp
195.487 135.052 mo
193.111 134.32 li
193.158 133.954 193.136 133.586 193.056 133.231 cv
195.344 132.266 li
195.623 133.158 195.679 134.116 195.487 135.052 cv
cp
188.771 133.206 mo
189.164 132.532 190.029 132.304 190.704 132.696 cv
191.378 133.089 191.607 133.955 191.214 134.629 cv
190.821 135.304 189.956 135.532 189.281 135.139 cv
188.607 134.746 188.378 133.881 188.771 133.206 cv
cp
185.188 131.117 mo
185.231 131.051 li
187.179 132.525 li
187.01 132.866 186.907 133.223 186.869 133.583 cv
184.434 133.705 li
184.469 132.822 184.712 131.934 185.188 131.117 cv
cp
194.845 136.742 mo
194.483 137.364 194.016 137.885 193.485 138.306 cv
192.135 136.217 li
192.355 136.012 192.549 135.773 192.709 135.5 cv
192.782 135.358 li
195.164 136.092 li
195.071 136.313 194.969 136.53 194.845 136.742 cv
cp
198.908 139.246 mo
198.417 138.838 198.29 137.997 198.546 137.302 cv
198.918 136.292 li
199.174 135.597 199.816 135.039 200.455 135.047 cv
201.474 135.059 li
201.575 134.137 201.562 133.212 201.441 132.304 cv
200.329 132.309 li
199.691 132.311 199.053 131.749 198.802 131.052 cv
198.438 130.039 li
198.187 129.342 198.321 128.502 198.815 128.098 cv
199.614 127.443 li
199.109 126.686 198.508 125.983 197.819 125.352 cv
196.959 126.081 li
196.471 126.493 195.621 126.472 194.981 126.099 cv
194.051 125.557 li
193.411 125.185 192.973 124.456 193.092 123.828 cv
193.286 122.8 li
192.39 122.538 191.477 122.391 190.566 122.353 cv
190.373 123.476 li
190.265 124.105 189.6 124.636 188.87 124.762 cv
187.809 124.944 li
187.08 125.07 186.276 124.793 185.963 124.236 cv
185.447 123.318 li
184.609 123.686 183.812 124.156 183.076 124.722 cv
183.654 125.714 li
183.976 126.266 183.807 127.099 183.329 127.665 cv
182.634 128.487 li
182.156 129.052 181.362 129.357 180.765 129.131 cv
179.779 128.759 li
179.364 129.602 179.061 130.475 178.867 131.36 cv
179.946 131.747 li
180.547 131.963 180.954 132.71 180.951 133.45 cv
180.947 134.527 li
180.944 135.267 180.531 136.011 179.929 136.222 cv
178.942 136.568 li
179.163 137.46 179.491 138.326 179.92 139.145 cv
180.983 138.752 li
181.582 138.531 182.374 138.842 182.848 139.411 cv
183.537 140.238 li
184.01 140.807 184.173 141.642 183.847 142.191 cv
183.318 143.082 li
183.631 143.309 183.959 143.523 184.3 143.722 cv
184.765 143.993 185.242 144.225 185.726 144.424 cv
186.281 143.452 li
186.598 142.898 187.404 142.627 188.133 142.758 cv
189.192 142.949 li
189.921 143.08 190.582 143.616 190.685 144.246 cv
190.85 145.255 li
191.771 145.192 192.681 145.018 193.557 144.738 cv
193.36 143.647 li
193.246 143.019 193.69 142.293 194.332 141.925 cv
195.267 141.39 li
195.909 141.023 196.76 141.008 197.244 141.424 cv
198.014 142.087 li
198.667 141.46 199.254 140.748 199.757 139.952 cv
198.908 139.246 li
cp
f
959.575 138.652 mo
968.331 138.652 li
971.343 138.652 973.971 137.042 975.425 134.641 cv
953.308 135.78 li
954.829 137.536 957.07 138.652 959.575 138.652 cv
cp
976.152 132.034 mo
952.312 133.262 li
952.068 133.277 951.844 133.386 951.682 133.569 cv
951.519 133.752 951.438 133.988 951.453 134.232 cv
951.482 134.715 951.883 135.093 952.367 135.093 cv
976.265 133.863 li
976.509 133.849 976.733 133.74 976.896 133.556 cv
977.058 133.373 977.139 133.138 977.124 132.894 cv
977.095 132.412 976.696 132.034 976.152 132.034 cv
cp
981.335 89.4822 mo
980.693 89.4822 li
969.696 114.867 li
971.804 114.867 li
981.335 89.4822 li
cp
960.807 98.1884 mo
971.238 84.4812 li
970.765 90.2459 li
980.907 88.2908 li
973.087 88.2908 li
974.187 75.8273 li
964.697 88.7527 li
965.389 70.3287 li
947.61 88.6574 li
959.768 82.9144 li
960.807 98.1884 li
cp
958.51 114.867 mo
947.513 89.4822 li
946.872 89.4822 li
956.403 114.867 li
958.51 114.867 li
cp
983.654 100.464 mo
983.663 100.464 li
979.479 105.255 976.896 111.179 976.18 117.42 cv
952.215 117.42 li
951.499 111.179 948.916 105.255 944.732 100.464 cv
944.741 100.464 li
940.767 95.9195 938.354 89.9755 938.354 83.4643 cv
938.354 69.1913 949.925 57.6208 964.198 57.6208 cv
978.471 57.6208 990.041 69.1913 990.041 83.4643 cv
990.041 89.9755 987.628 95.9195 983.654 100.464 cv
cp
951.28 119.074 mo
951.28 120.622 li
976.627 119.089 li
976.627 119.074 li
951.28 119.074 li
cp
964.198 143.277 mo
966.422 143.277 968.334 141.953 969.2 140.052 cv
959.196 140.052 li
960.061 141.953 961.973 143.277 964.198 143.277 cv
cp
976.769 119.815 mo
950.542 121.401 li
950.298 121.416 950.074 121.525 949.911 121.708 cv
949.749 121.891 949.668 122.127 949.682 122.371 cv
949.712 122.854 950.113 123.232 950.596 123.232 cv
976.876 121.644 li
977.38 121.614 977.766 121.179 977.735 120.674 cv
977.706 120.192 977.307 119.815 976.769 119.815 cv
cp
952.268 132.53 mo
976.11 131.302 li
976.266 131.293 976.417 131.313 976.562 131.345 cv
976.601 131.02 976.627 130.691 976.627 130.356 cv
976.627 128.259 li
951.28 129.792 li
951.28 130.356 li
951.28 131.173 951.403 131.96 951.623 132.706 cv
951.818 132.607 952.036 132.544 952.268 132.53 cv
cp
951.28 123.927 mo
951.28 126.487 li
976.627 124.954 li
976.627 122.394 li
951.28 123.927 li
cp
977.735 126.539 mo
977.766 127.044 977.38 127.479 976.876 127.51 cv
950.596 129.097 li
950.113 129.097 949.712 128.719 949.682 128.236 cv
949.668 127.992 949.749 127.756 949.911 127.573 cv
950.074 127.39 950.298 127.281 950.542 127.266 cv
976.769 125.68 li
977.307 125.68 977.706 126.058 977.735 126.539 cv
cp
f
688.157 77.7042 mo
693.708 77.7042 698.064 80.3741 700.734 83.3956 cv
697.431 87.1197 li
695.042 84.5201 692.091 82.8336 688.227 82.8336 cv
679.443 82.8336 673.681 90.0006 673.681 101.454 cv
673.681 113.048 679.233 120.356 687.946 120.356 cv
692.373 120.356 695.605 118.529 698.556 115.227 cv
701.858 118.81 li
698.205 123.026 693.708 125.485 687.805 125.485 cv
676.211 125.485 667.638 116.632 667.638 101.595 cv
667.638 86.7687 676.352 77.7042 688.157 77.7042 cv
cp
f
710.434 78.5475 mo
736.995 78.5475 li
736.995 83.4659 li
716.266 83.4659 li
716.266 97.941 li
733.762 97.941 li
733.762 102.93 li
716.266 102.93 li
716.266 119.653 li
737.698 119.653 li
737.698 124.642 li
710.434 124.642 li
710.434 78.5475 li
cp
f
747.467 78.5475 mo
753.51 78.5475 li
770.164 107.497 li
775.153 117.053 li
775.434 117.053 li
775.153 112.416 774.731 107.216 774.731 102.368 cv
774.731 78.5475 li
780.282 78.5475 li
780.282 124.642 li
774.239 124.642 li
757.516 95.6222 li
752.527 86.1359 li
752.246 86.1359 li
752.597 90.7736 753.019 95.6925 753.019 100.541 cv
753.019 124.642 li
747.467 124.642 li
747.467 78.5475 li
cp
f
802.489 83.4659 mo
788.577 83.4659 li
788.577 78.5475 li
822.304 78.5475 li
822.304 83.4659 li
808.391 83.4659 li
808.391 124.642 li
802.489 124.642 li
802.489 83.4659 li
cp
f
830.599 78.5475 mo
857.16 78.5475 li
857.16 83.4659 li
836.431 83.4659 li
836.431 97.941 li
853.927 97.941 li
853.927 102.93 li
836.431 102.93 li
836.431 119.653 li
857.863 119.653 li
857.863 124.642 li
830.599 124.642 li
830.599 78.5475 li
cp
f
873.464 100.4 mo
881.194 100.4 li
888.361 100.4 892.366 97.4488 892.366 91.4762 cv
892.366 85.4332 888.361 83.255 881.194 83.255 cv
873.464 83.255 li
873.464 100.4 li
cp
892.928 124.642 mo
881.826 105.178 li
873.464 105.178 li
873.464 124.642 li
867.632 124.642 li
867.632 78.5475 li
882.037 78.5475 li
891.453 78.5475 898.198 81.92 898.198 91.4762 cv
898.198 98.6437 894.123 103 887.869 104.546 cv
899.534 124.642 li
892.928 124.642 li
cp
f
272.958 77.7042 mo
278.508 77.7042 282.865 80.3741 285.535 83.3956 cv
282.232 87.1197 li
279.844 84.5201 276.892 82.8336 273.028 82.8336 cv
264.244 82.8336 258.482 90.0006 258.482 101.454 cv
258.482 113.048 264.034 120.356 272.747 120.356 cv
277.173 120.356 280.406 118.529 283.357 115.227 cv
286.659 118.81 li
283.005 123.026 278.508 125.485 272.606 125.485 cv
261.012 125.485 252.439 116.632 252.439 101.595 cv
252.439 86.7687 261.153 77.7042 272.958 77.7042 cv
cp
f
323.835 101.384 mo
323.835 89.9303 318.424 82.8336 310.203 82.8336 cv
301.981 82.8336 296.571 89.9303 296.571 101.384 cv
296.571 112.908 301.981 120.356 310.203 120.356 cv
318.424 120.356 323.835 112.908 323.835 101.384 cv
cp
290.528 101.384 mo
290.528 86.628 298.608 77.7042 310.203 77.7042 cv
321.796 77.7042 329.948 86.6984 329.948 101.384 cv
329.948 116.21 321.796 125.485 310.203 125.485 cv
298.608 125.485 290.528 116.21 290.528 101.384 cv
cp
f
334.729 78.5475 mo
340.772 78.5475 li
345.62 103.632 li
346.463 108.621 347.447 113.54 348.291 118.529 cv
348.571 118.529 li
349.626 113.54 350.75 108.551 351.804 103.632 cv
358.198 78.5475 li
363.538 78.5475 li
369.933 103.632 li
371.057 108.481 372.181 113.54 373.305 118.529 cv
373.586 118.529 li
374.43 113.54 375.273 108.551 376.187 103.632 cv
381.035 78.5475 li
386.656 78.5475 li
377.1 124.642 li
370.073 124.642 li
363.117 96.8868 li
362.273 93.3033 361.571 90.0006 360.868 86.4171 cv
360.587 86.4171 li
359.884 90.0006 359.041 93.3033 358.268 96.8868 cv
351.453 124.642 li
344.496 124.642 li
334.729 78.5475 li
cp
f
424.886 101.384 mo
424.886 89.9303 419.475 82.8336 411.254 82.8336 cv
403.033 82.8336 397.622 89.9303 397.622 101.384 cv
397.622 112.908 403.033 120.356 411.254 120.356 cv
419.475 120.356 424.886 112.908 424.886 101.384 cv
cp
391.579 101.384 mo
391.579 86.628 399.66 77.7042 411.254 77.7042 cv
422.848 77.7042 430.999 86.6984 430.999 101.384 cv
430.999 116.21 422.848 125.485 411.254 125.485 cv
399.66 125.485 391.579 116.21 391.579 101.384 cv
cp
f
446.742 100.4 mo
454.471 100.4 li
461.638 100.4 465.644 97.4488 465.644 91.4762 cv
465.644 85.4332 461.638 83.255 454.471 83.255 cv
446.742 83.255 li
446.742 100.4 li
cp
466.206 124.642 mo
455.104 105.178 li
446.742 105.178 li
446.742 124.642 li
440.91 124.642 li
440.91 78.5475 li
455.314 78.5475 li
464.73 78.5475 471.476 81.92 471.476 91.4762 cv
471.476 98.6437 467.4 103 461.147 104.546 cv
472.811 124.642 li
466.206 124.642 li
cp
f
481.737 78.5475 mo
487.569 78.5475 li
487.569 101.665 li
487.78 101.665 li
506.963 78.5475 li
513.568 78.5475 li
499.163 96.1139 li
515.817 124.642 li
509.282 124.642 li
495.509 100.681 li
487.569 110.027 li
487.569 124.642 li
481.737 124.642 li
481.737 78.5475 li
cp
f
522.425 78.5475 mo
528.257 78.5475 li
528.257 124.642 li
522.425 124.642 li
522.425 78.5475 li
cp
f
540.906 78.5475 mo
546.949 78.5475 li
563.602 107.497 li
568.591 117.053 li
568.872 117.053 li
568.591 112.416 568.169 107.216 568.169 102.368 cv
568.169 78.5475 li
573.72 78.5475 li
573.72 124.642 li
567.677 124.642 li
550.954 95.6222 li
545.965 86.1359 li
545.684 86.1359 li
546.036 90.7736 546.457 95.6925 546.457 100.541 cv
546.457 124.642 li
540.906 124.642 li
540.906 78.5475 li
cp
f
604.921 77.7042 mo
611.246 77.7042 615.461 80.5851 618.131 83.3956 cv
614.83 87.1197 li
612.51 84.6603 609.629 82.8336 604.992 82.8336 cv
595.716 82.8336 589.744 90.0006 589.744 101.454 cv
589.744 113.048 595.225 120.356 605.062 120.356 cv
608.365 120.356 611.527 119.302 613.354 117.615 cv
613.354 105.6 li
603.586 105.6 li
603.586 100.752 li
618.694 100.752 li
618.694 120.145 li
615.672 123.237 610.613 125.485 604.429 125.485 cv
592.344 125.485 583.701 116.632 583.701 101.595 cv
583.701 86.7687 592.625 77.7042 604.921 77.7042 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (\700\755\762\756\755) ()
%%Title: (coworking.eps)
%%CreationDate: 2/9/2015 7:17 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj9=OpGi)`T'Mj6ORBJ@Y[kq_J[T*cZqr0tIA%ejO:m^594rRcpj`##S0Q^QPE;0?9G2dlVJT.?8S;CP,i?5#D>"m5>2qHo
%r-($+b]mmUo2pl)gJ:t%s)meeZeBl9e(9GQL%#uR[*fHY>jUmT*QR_LbL@_`)kYA6bIrgKUV#,qQE-QOY$#\O40,@9cVc!q;`]VN
%8u_R8HG0,M.U+Qkcf(;9Q8gAFlIB@MI8T:,gpBM0p(9Ic\cYaE!;Mu9jjDW_1`]Q-?!&/,9l&VCbaMHs/,_#Hr$4<",_c+e3ZS-A
%i*Z"G8uDS&prC7tT-*&HR4VK7HVeREg8/\hfmno[;h1Ih!dpEY=&2H%H<73r(%m0>h1mF!@PP:F_NkZpjh`2YrE/ndrPlLS+o#2P
%pj^e1n.U95.6HXiH1pt&3!WM*>V"nApmULRfY@XBZ9X=9llK1\>4ke&8d#p4Sb@o-5gm$#"<M@d*X#Zo6d4M'a28r2Gert/+l@@h
%NeL4&V0'V1,/1#TW)`k#9g,PC.b1sSJ#;$bW;R7Jba>V4^gjs(^K7VI?T2_*5c,IA=6/%K<iU<+*^*l3Q\ZLff]d>1j07#sX`f9!
%S+Rh#B/SdR_07PZ(YbdY<TI)U-eW?:)i)Zs[*iO+B5-*pES""@P/4)2f6&C$&2<PTKf(GjjfnZ%Aer[OKAfYC,SJ5.#<]ZRY+=,^
%X3>cQY^BNYpL_$<M7?d\Pc+L)E71?J`t/15<<E`Bh.e/7KCP_lNZfcNHKP:+/i5&gjonYXK>2$!YQtf3HLk*c)uW+\_%=;GL4pP+
%?8gbn=p#$/qlc@O47?jdhLdI?gWa&?X)ZScqlb]IV0Q<?]r@=0br3qXP1i(u#/<8o/UXias(&am-ej2:/lR7QV:n1>D%KcQE;Vnr
%^2TnIJjg22pq)'"U&%:d@u'ZP9=<?g0oH.([AtbL/Nc\@_S7JnDj'9L+b8F,#5D_5>ce7_-*:itJfu7s"p4dHD>4NhUm"\d'cK<:
%ok"Tp%mHj_NCrJQWSL1PQG%UD;/3#mMr.d^D0Qoe/8\*$K32$K'J](nI#*Rl;X66b]NtC8X!n(),[*)s713cu%oJr1KWuPVY7aQ0
%lCNRcWAZ5sha\6Al9R`Fr[WU"+V*"$8QL$(oA[8_YB;I2>thH@`'#]gM>5og>'R,fc"\[%8>;8&jFjM/d5(j=@&Z]XBN2-\+HVV$
%',E,G>Za>jG,t#MDF5SYh<UT-%\(`>mj"=VOTlqEBEemL5[9-c.'*\kOsg@^5qV=#"pAAt5Iu0<26Z)0"1_SX%6._.?@AtUYLcP(
%V:JeOr+?&gL;"+=Y&.9;8$>)&8M&6/,D!I;]nmG(R3\UN8euBUTt0B2W?=ZgU*'p[NYCV,N=p+*AY>R'_?-a3JLPNe6FH)M'e2*1
%?S4'e,PrJY;sK[p;VSV>G,\cJN\NZ;e0hX.\DaE>?EIF3DAeA-`<hL87Z"DlNkp:8$`+kqNrp2XJYQe4,B,;1pMkKSn%VsSgG%I,
%c$$'a"7L=h[ICcT-s_A\GcI62>eiTlS&%2KWGL\b^HVYqf/a?*16;8#P@7U[K:b7V^e^(sSA>a!2L"(LE619<nTb=fZ9/@VH!]Dt
%?F2;R_%-c!*F&I?(I76ePTKbtn<:,`G0\CN:Vj<oLH4:85G>Wi;?&A/diY'.kYY""Nse2#o&u,F58btEJ$Lb;cH=V.U/bTe<Fdcd
%K+K"f_*u6%_;((>A=^A3E/H=p(VmFF#Zj9=/i"UuntI7a0G/@dJ0Qb0EIBe+B&P-#k1tVnPa:ACoRdk+Q/:DJ8LZfjO]e*9"o'Nm
%(*Lip*)Cg^kBYMIBl8j+04YE=_1Nh4E!n@$_("%+_ZBL4_9*ScKfo@$b@gDaq!mqsr5_"ES/6GUZ'jd#TG9^rKV--=J*!>E/sjbu
%:Bl:GS-M9_QCOEHG]HQa(k>q7MDkD%+tFk/M?Wo2?c^&ZQIb0H\cu6UBP$>[BQ\h)e[I_ITgL?[CQ.E$ft]U!B4["S!^*'tB![o,
%TCoK&0IsG(f$<h;"*t_="W0:ea_!:G5NBS@bd\OQEABFk+Nml9&Jgi8q_(2&kPVERnU9<d-2b9en/^RPT-I_/\Xh6`UMQF0hF[m`
%I>J!)"[p8L:k1U5>m_Q+)!;MV7jd.=Id&oAK"*`#0_k"g.Gu`s%>2To5;H?LK<):?.Ca\aHglOmA:5f`&c@/(fJI7qKF8fgPCeoZ
%B%b1mIX<JJ;)TN\U-R=h%<%Z2^-$YH=fg/cR(?B+5GqQ@[s'pg0:S4VIEpHeQt7\RIua>>/[b*:7D/_//q[bSf8b46.YK-AcnX!e
%QhpTDcYE,F]@ro!4LMHu\hEsos6BU%n.EB>!;t`$Qs)M#5oZ`l:-VADT'l8IXjTAEU`8T$l3.RBrKa<!R'UPpoW4M^R\8]:^e"UO
%^BrinGIg*8R/ho4P62u7FTc$]'fasjX`:Ee2BK/-,lq]3Bi;/m.FD`Qn]/Oh6E6!MXU0N9oj15pb-\.hDQeKDX&g8%l?MZoVoGGW
%*./q1naUQTH5F3TDWsYK$'EKXPCfd]4Qt?=WYl=NL\g!'6k\-]]dK[Ge!:g]fQ!lh/[h_;HbcXQFD>1_8HFV+2'08N[F;0(1"nq6
%KZ`G_27$.q*j6iiLZ=VRZ0'H$T*S;5P@>MnbuV5Xl8IB'L_=j$'UKgsHgPir;rt4r=ROAjO'1njZqF,qELEtj_nd]Q0=g46X4a3=
%;?CjKVH&_a14B6Sq<COdD'%A)*AI*+DRr*#dE'V$7s=nk,.j%^$0%9Ib@[kt;e!?A]K;2AVCT)JO@YgqG4X'u*nnk+]6S'K&+'?8
%JRubk*P22;[a=5"=a.N^>gWjM*;P`"X0HbP(=P-E6((YJ-g0bYo,X;"1Oa_`HI;YQ^k2kolcDt$T,bi)eQ0AJA?Vt3WRS/H3<;NF
%f?*jXN?fX3bIrfTSi94BPgObS?t&lb8Zd!CEJsY'X_Oi)mj7M(N4tJWXja<%P0g:8WgE7K9`h8fY*/pEV:Z]q;G=m`<XSi-_.WOe
%%8U2fLQt%MdAfLQ8\mF4oU@TPbl!XT5@3^9r?hbWWW#]XB*.QFB^D&=$,]EdF(3@--%MnV8:OScWB$,lEEkY$'Su"&'+JABNS6fF
%P;J!@^.a\HX5p<GC32]u;:`tX51uSn;fA4lDEu9m>ea7<Iksq[`SauIp6oOk@^FSMFD@XAp2[+/>6irnN*epNRWb[FEoQX>)8D"n
%<";fS]=lD[e-m`(YEm8"2D("5@<d7Sm\*2\lngHC1'%fMAc6'lYR,XO$"-:JkiWVDo-?$B8RSbM(dPNFh6W#S2i6gj.I249,s3DQ
%19m`A;`6C^*;uKeP-_Y1ECJSf7J8'"e"(7N[#2qpj:8=r`I&2A^5)VnmNEr;.lH3OT'mg56cj]dH+o(3Is_bEGE>H(;KXe'LJ4!I
%GEKGDQI(N7pPnA5`q+W=q7cAP"iBkZj8$FZ-.'m1NQ8tAo6oZbc13BF3<5s.M$jm\4Xh`T8b^Ag#Ha"VKV?;()6XZK!+#U,'6=Bk
%3!6RPP?t/UCGrtNBd?Ob"&DV7qbCOdHL2B%IZne`]_drZ^1k&IRSRg_;+_8ET=.DAAe*r@Z?_1@SfsS9aHF,:CT$Q7[BTpjXh"]N
%XIV9$IajhZC3QdcXfOD7V8f@dH*`l!9B7bOo4QO>583Yd=[+&#r7UPd_G.6b:p%WR$+"86hhd2HQN3o2s(W@`6oU!W4XZbsak%r8
%h+i-9f[=mpKE@-MD+A3$m9'K+_)F*"6eT1?p0mHQak;R4!#GQNJNnT0!2E%2(DpEn`nlO,fK=R=e`iho%OQLNAD3:54Rk1&]Z_$B
%o>F9GH=<72-!k[/L@R"h`61:51/GR,'//sqb<5<(-=/$sY]!:-cdX5%%Wq1sdi"r#G?MnM6JACLcu7WPgo3h(>aIdE?W_kX:\)A[
%,Sqb#qh5bVkV2B?<[<6)IUU2`D9C,6^cct^i:PdEHEFe\Wa32k2)gOoXO*j#36lG`RL\@;^WgJMNFQu44S<mfMNRDPfZ*_=:,hJS
%V^p,:IY6,I#,b%t.2+Z)"g<c5R@+l(0!cMdMUuB(bf!.\q'TCVqP#WE?2fO:JdE7-F<#F'(u>DXE:km@$mtVS@Ic22GCBeL%D)]n
%_95bipsP(iP@0keHSJ"/9[_I]q.hVrBRrbgb?^O/ktV:I'#S"CT]Nm2-1/s@P>8NDda5-t&oO5cN9X<Vh&POa3sqSD<a-sEB!\4H
%?rrETV=OFc8i8J1V/i^8F4El1no&t(48#?E9oABPQMSmc*$p8N<lCqmN&QquFQ:NiP&f,J1nuk2LN'$%K?dW!dekJ:ZZOr<f+$NZ
%48o.=96<R=G)n4&#j:>OqT[>s?OI_B/,fI79q!tUi828e;K`+a12DZArpX-*-L!]gc"X-rESX@kb;n%\m9JU2Tp`Q1kGC>DF4Y<0
%?+['qrAJLbFm]sgL/Tr'M>m9:jsS6J0nhhV5sEO2r2Hooo47SLdbKLCEq9t*dr@orIY)s)/`]VVE1NUDT,Ygb:h\<q*9S]jVo(L>
%:QSAWEL`XDTA.B=[>hM[62n8q`T4<`8]"g$,l+fEk'D..m*Ocr=##mYERHJ)];>AIAh?TeV4JXL(ZFkiOC=]#S"HJ\T[CC("Y0LB
%FC2`7Gu?mbRKqYP[sZk@>O4Tbp,fA+'>YIM4Xo=;<eB/Ij&2dYCfeCGWf;%^PDFYc-O&75YC53,_\s.9McoZ)`kjXiRf&l__^2hE
%?m]tT93M+(fVbrb4L?p9)NUpif$kY@9mF6*U7u@V[0.N5fbl)Oe#as7p*Ce>`Tt/8'605#Tp`Y?A,.HVP-LOm9qD,b19N:R1_F\M
%s.f1iPEc%a^1?6Ce^e$B;7hsr1BX*l\<VS0@=W=gPeh/P&[6A?'-=LD:1'"HVHu3Ki$:9V3,;DKo+(FfZ9u]KmnTnM@]_f0r5Z0A
%\6D!h6J\'N:@_A99c4$-:"&ZDXS7CU8[6kqn'@dJ\OfJ\Q74>,e(JPYc=W8P1NrAT=a$OY+V`qo3W$^;WR3^tncjgtjS9a]qRDu`
%2YCD>Q-Y!)7,gR"2-E_$T)'9n*@c?XeEc]3k?%J%?=J1C-'m/iJfFCR,^M$NPPTDUNdg:%^(McD1H9m=b>!69b71QN/cXd2f$+SO
%k68U,J?tF*!mPDpDu#iF9;WJlRssO7]6_m&O[.lXM7_!@n$@]?8P5RJ@(Mdu$s.MmouBY9H'*b$e88*F[&^<T.7j\aWD]^<CR=U#
%m'a=+lf="+,7-p&Epo`(0-uJ<A"=tN<io5uT%"[8DVtZ7<_M7rP20]Un"`4Lf,E1;Jf?2_V0[EbR3]'q\kWU2,T_W\O2:09$&\7(
%)=Kd=-qj5_8j=tMrSgRB\("1:Ff:mq!_FX;VijTX.U&btQOYK&C);_+h";t&B)SCRNS@#rjAo''fR8bR1="/l_`W'&Sl$nYb412=
%pd_@VWO+nC/ls^NFp,O"gK#>">J3`Ms#AS,Jo`.q4TPEk%\QNoi3$=B3L@9lQFR,IJt"B6#uE=B\[fpi/orF5dSdC5>&(ZGLf!dt
%]A2iSOGG2J6+^*qooeZV"<AlO$Wh'fdTEgoV-N%,\J)*jBXV,Xc$Jt<_5>XcoDN[RkKYql!Yij9hd#ct2;e%A53>uA`\Y\#[7[1f
%,jBcA@f']OS5kcdFsu]:.<(Su&oa"=3\nf=7hPibUcrCB2)36<!5Cd<<Br!-^Ha3^6-:F;Sd<&lc;BbqZlAEabcdY-L!>]imrt;0
%!uEbC9)^0m3gBi&BtncTL:mLB\u5MhancEQ1,XQ^oo-Z93r\j;eV#TdmW<q*HNUY?2_!\IYI'm9SW6T%J":^Eie7?Oj5YUq;";:,
%#0nD)'[n-&ZXh!FScG.RO0R<<c/2\f08f[%76L5ijX.^HHN(A<WRCk=(NLEJb[8G:m4_dGYS2Z*SfA.tp4]"qm;:BTYk1k4)s;/#
%*,?O,0aPKcVKZXp5NZnDS7-_KlRM&i5_$/hiED-VjqgE[X3jIWWcMLH0lcZ'?E,`Fp3g8I0e_(e('f<f?Efn=SmB[Clt.UrQo<+B
%e>!]K=RF,IC,bJFL4-DRDD71QS>e0u8-6_'SDB!62#d!HT_",^[/*o3:9)Sq)AA0Sjr'/XFG7CIOO6T#_`X\K[5%-Oao"8r1!aN,
%)eJ.LNHn!'<\bTE:!.,p!bQ%")E6S,MApUM"kQg^i[kj<I27!jiG`(F>EtG&qOYEHVINg.YO8nNd`qN]cr4H%&e7+-Ok]f1=;nUs
%Gq#&%F5Mk/icXk0ebOP,VX'mC1+o'm9[EX]$M/L\*q.A6]m79bT>u9b4Ks+DG8&uL)u)2O"P(QaLi9jK^'#^N#CQ,nD]\Dm"29&r
%2\5[!(qW??h[R28r[(Sq-R-Z+`-ao-1llVtrp)PTH5V4)T?.!r''6B?Jl;:;]65NN\^=,#`P/4<b\;dm:VV;;\ie@j^A2HF`o_%&
%)MD\UQ.Il>Co.r5\aoTX@Z$XoL?'\;GCm&3G3!uOY6MTk!MA=PYM?p1Zp^EAmBW<k++(^<W*u0Y]tab'rf$7K*[ceNB#a?<iQDbo
%gR5fMM?J\j3_<\X1uWX-h#s4282@(B7do@?Cc+<.l6[KYas>W&b+4e9NGAEb>-F6UjbsBcR1t&G$2+h3%c?1h'=Kgp>,P@RQ)b_O
%7X(c[RRr]a;1da>CphMUUgp6QT@CYH(Ag'4@/?8/gC?8>[76[4;k"o-2ENfH!ALk>;<REPVE:Q;`,t=S,d5Xe`='Enn^u>aI=eQG
%lq%'s5&)g1jXDSECA!&_ntmeBH9GEM:47-c9gI$B1PnoWS/_qDeDEj0H'*aqe88*&[&`8%O,'T3WRSMe+%^k1W9^7PC,?l$5Ur+I
%(VLD,"u2d0cBA=1?>EM5$#Z[lQg3\'As*OkN38?G.Y3podO^d`,lo`lD"7Lg!jYf*VtBSdTI4WA];9[;X/pVB9T(7uVip+-:=X,h
%TksibNiT(7>X$t^U6.mD;7fApd?^qN"ZP@+f&[ijS*:@fABHj1&g[i<Z]`%i=/&AeIPqdN9tRL5"Nf\L.>ijs8kMrun3pmLRoG</
%"IN=H4YpE&P/+JqO]mtg@<E2S`q7lWP]'GO8ePOo[4(WMPlJVSb\L(Q/Ck\;J9!G];%dT]WAh4DW>6cd0XKb9cYHA^4R8uF77kF-
%;_Rf&W>6cd0XDtrIr^lf(2IXtdIIXm2+^usp5?6i<Hub;0mf6cbRPf!FVU*F_2Z%VO=k@UKt<qH/o-[&o`D!nZtN$OJ?s:j:UPV]
%kg&JD5<&6=O]T/<B!1?H:XLJ5ebW!AF9tbt=*/LP2ck*okjE#jQuuAA<'l:/D$$2e?8`aL0M3,c>$feI=fc'i^\Rc1QS&'Z;r?um
%Hgpb^>q:iEWmX#4VR#Sqk:F#>C6VIZV=(cBYf:ZiVUW)c;S?Bu<Qq2L*]BM\(&5CB4ra(cb/71^0*m)a0BX6=]4?<q_.>.8mr1(7
%4"4cEoETlUg77s0bP0P2R<J=tqm0VrJ2FoP2#h::D^Z5+R7=NFo!uR,"0@2(M)hM?[-H2GPEjjU^XADq"a=s[C$p7?0`'uhkrKGA
%#hO-7pjg+`DX(L6T4E9*jkW`1m5]Rj#&XA?kc(-&a3Redni(s,YI_HK^uThg!!5/;ZH7N1rqK&?q+1oPogu_QHuSQkp]I-opqj;o
%Z[b:0YB3!iKe2!t_B61%>Ys-c;VD+9g6KD4q?WP->m]"QHOOLR?s*KD,s2^Z$G^2T"?3q4DB^27h&tU"51hC9X5.YnJ[K]\Du_)l
%#/g+MqI"<'@/(LY*PG?=.q]3Q%TcbT!/m#>IfkWj!\d6rqOaKNdYIi$CTfi/gC'XL'm'Zf8u*jCHN,H,e@8b`EF$g$Z*F&/&O&R`
%>tq!#CRslH0]X?jeNgktje0ZYbCcE'a3?XTp&CHV]s%+7))Q%&B"<\dgA+V_E-Uhb-"oPh_-^]d!]1aS`/q/U\'*,Y[*8R#0Rmc%
%b:NG%UQPQ%]q^;YNR#q4;S07nf)($Dpr-?:2-`j'rp.e'lF9;"duWD)K>)laK5*?efe6NkfmRQaJ5(,@&c1%Ijn%ci.#q=@FT%Cs
%nb\+Zl/^\_8k/,Mkr:sh1bL!ZFXKr^X"/nS+3E%7p72[?7l\]*::GL'"mYP[=`h&M69c-#-n(PFSGHU6c,'2H3WJbuDO)\p:B$X_
%rgj-bhPo,L2b/i`-6N;n/ATGX[8\4KGG<])d7U,LCeYs7ca1VXQL%m]Zj>]/>EahZRBa+1rclkN/VI&\QkloVAnd$ImT@!=AhId4
%5GnW:TMr;P*!OZ.ZO:ZjG4hZCgTDh^V,*!eHt[7W$<!-=I84_IRLYYc/DX:,j.b6Z<P[5_",l]!HSK^o3an2-kD\9I'^F=e]iqN\
%0>9.F\#o/sba+mTm<)XHDJHr9kuQQHs%up6C;8J:epChZ.c=CH*nmT:cGi#Qn8Y@0WV%m&Da#,uA@<=JKm=h\i-MM)Yn"WJD,f8h
%]lpe^mA>j3RX#gP_]ISc2,8LpdqWX$g$6!;'7tkj$6Sh;V0;UC=__#9AZSHun^M9b)U`G<kB7[I]0b00nuaNd*$K[qYXVuCBtlo1
%oIEKNkdX6cQI_THh#n5mce5#[DNu]:Le3j1]-qgIqfQAGea3#(/(JEis-VJ3AU<0Ea9:&mmR3q&0iR7pB)0(GI!44]L'5)`D[k?q
%e?&deWg(17m-U]SV&"#AVaf8b76JU"'R&6-7]07$j&'0N[T7tIiA/I%n-\57fnd2IB8<#[0$TY"5>%K!BR1GHS=%"gURF6FrnC-^
%.^a0Y\5oeUIh%b,_e.(+kP1D@kRa.hMr<pGHLnXGhljJ7oo:3I`^45$T\!qp=urXlB/LgImZ2+pKaHU"ej:p$;+4?2eLTTf;qohE
%eb[WmA]Z?hbDLP8nY63E2K_cf=fG`Il[;h)TNZhGl2lRHS)mNgogFQr%(E3EDj[ochTEn8Rbo2r1l5-9k_gG3]kY1.Wg<2KYta/R
%,=6P3heo667s%3H*:%D2^6L_c'd(L&?H&2p!\4]Dl5Er$NG^<OW%S<`\\O^lKF`g#4jRpZHhD^#LMpR#J5c5d#l07XU=3s<cU14a
%ZJO\hXTd.'fnt8FE)'i!i"6hu:@+*$WK$!]F:^)/N*2l2f-@2-"_,mgpbL8fJG+#i?)^kZE)161A[<?U5%)-B=@Pd'o2^=-X^aHs
%WbrJ#3D_Z")AR,eqTW<iXK&2,&VVo$4[lY>g9-#W.-qsZI5:ItP1d!S6cU@udK?X??L>nEk&L7-f"EIT_;Yh.=)IYLSR.haO&8\0
%:JT?\JIZejV>W&>mISUgIl:gtn_nhc._nb^WAA9dA^H+p=F:uXQ.`@iXf#C*aouI]]&Ao[5,K3X%pLXr=K.mVHM&nL4*GM,$]TH>
%?_hO&'Q#OLm/dQ`DAuC]`>J6s9,L70E56@tQ"YIWG0aT2s3dJnb`A1*%_D>ljm7dD'p\nYq8m7D;J)n#i#JFsb`)S]Mjim;@D8[#
%V)hFcXI3Sf0390H)EM:JVs9o1i/>uZ.sPMC4bAfbqOXL&9\eNDW5)H6S_@eQ'UR@$ShqQM<dbHZs)=d*O*-[IEan=e4K6l38NN.u
%9!aI[A%eGIL`D91AAJ<,i];1OEjGeTVMjm3-oeGHBU"PCV=OG\cL"68fgZ-0(>I4-"DmC,Zi.Y[SK$:bea1f*kufn6C&0APVdRDt
%=dO<,.mh,#`ch87#1?8W<A4@lTpAZUEhbFZk7I]e7D72++WWUI(VFQ?^)0#e-ih?05ZeM>VD>;Y#E(H/E[Pu3(@B\a8U;lRAr9ER
%Mb>WLBQj%89O3&1;TnIi-rGmrlaT\A:i*PZ8TS-$oH(j5/B./cTWbUgf`aP*U-a%1c@sTIe2gar)J8a8-&NP628&V``dKjNmM4Xs
%NZ=D>,CP6TB+['ij*F3BF.<no3i1P*5-enY'DPACZ4lkjQCX]?3'ZH!d7m^-L9;Re%b7Q/5%uoEl<ru1koFt;3]8!t9[T19h!!^F
%lL@,_=;Qp>0N&so^nG85H<LY/X<')9fYGLo:3D;tQ3%'Ri<gA^G0W^FC:cM6>M-"1`Rq0k:dc]N3aQ/PRWr5YIp;12JA3amfdl:>
%(\!8S#!<nA5RctWmBdH^%jO;^"EQW$LGnrBq2V&Sfd`%\B[?iKFGeFTAnLg?S[#M$H6^'Tkg@fBRt!,='+-5S:X7t6/uhS@/5hU;
%lPL,:Zj]Hl5$t0g@GW`!<4gTH,d<9XmA/>^O5`XZ8Z)\XNZ>bgl<A![R\P,%HnjJ\Uk.MK6t_!*S(]@Q>irZd1/G7"XNh"EXep;(
%N-*DQFaU;Gb"8Ln<!&lK4fc"]_\@2E?i3#.#ogjeb/D4W'm+%#l\RD`pQUdX9:B<-m`*lE5oOl&%Io:J-\NM<j1Td21sDQOehO%+
%kIf@IO1m?kUW7h#YSlh'[7TNl7X%9s,e30T+4\],a'7IKR>>HehRh0oZ<sS7K<fCYqM..&@lI[A1GrpB-(]"m4?qsG1N>!Yk3-Ks
%*9I6B3X</:b5kfFI<TgWnM$iCL\EfbAK]6>,'?i=%kDQt*\lEA7u[,sm8"ZJfqH:,>&nFfmr@Ph@ue@V@-@($;#Njl_n's>_a1=@
%p$'Mb3K/blLjQOZX7a/@qkRE`=(;--n-ja#K=)0Cq!(LE[\-]ME9`)(O6R37a#-+hVGE?P9$4Hj33RP;+ITo>#7#:[eMp?5iO^P%
%$eh=qAK3E9OcDVF[$NFTkgjQm'hRGk#P+G><F;/!,X&64Lq)"%2Jh-H+/]@'0I=#fXTbA1%WYcXT#_$/'frpHc[!*Ks5W,8gW'iU
%9(/(;g\5oYZQ&;VMmLs_`i\FC>>#>7Ej\fVF4Yj=XPhr<h0?X/AB/u,])Cm0c:5EIQGip_na8-P\RSd5r3uUgP'(tYm7[<'`qiT6
%ZdF'7=(%JV[I%2cT\&dQp@R%=m>Z7dHB>0jIT"Ihdgo1Yk1ZuNLC%P+G]-T2f^.b8IEjkqQBs?Cc0YuP]R.*^`4aVMk+0,&Zet$Y
%hSM,F'C5Jad*_8Rs$XSHp$kuC0UI60q5e2Ce^#3#kJbadX.An%@XdQJYILf>3ItlM?cB3=]=n-akI33Nhl+:o4is:<F(b%GMdb]4
%rHt#MJ)=@XqV\Io#Su7<I6%8SKMV?WkI2pF\$F36\%A&\jZ<pZLj,[f&#Sm3/M*1qAasLYGNKmIX_7(TpD:.hQbG(ij;trdk,Q*b
%:Yn4KF1,+%Qd5,"D6\&cIAWlRek/NBCNmOrf"O8MAF&u]5$2\UId1LQ&+4p;!$6$Z4[68])L(SnkD`01r8;&Sn]ojG]_M-/-KRk_
%`6Pa5>AWhWQ%_Sko?TL:!-@]s<PGlCb%`N;;?A&KS];,]9@[iamTh4XhJ_<+aDJ':H!=DA"eIHkDgc`r4H[2:Qc8VVQ&i!Dps*Lj
%pIXBdJFpd.F9fqYd=(>pC*9OJABu@/bF1`S<44CPq9D`aV6k]dG\ch:)lI]GM_?moFb+8.j4dcJrNc3o\?8&u^Fd)prGtVcYA,on
%So4W7^U"]J4=MiOr6s-8HD%a.f@MM0?@F&4L+A#KG-`B[#'sjQLJ.C^/V,K9hT&r&LYB\KD#T7;SZd4.3pm7I><-bls0e:Z=aBPN
%:b"W<Rrsd!^[h-e]mH='c"6Y?-O7'J)rEl`T#*<ekPaA%6KeZ`ntC$@(>iYnGF@8rrnH2&>j\#mZ?C8.n$JHDH,K]<:VKH3?YMtC
%H3`=\?=\5g+2')b+')\rliah!,(M5kD5CSk5(-B+Y!@<mHDQV/_sZp9iU^r*&@apb)OLednZI9j)!V)HBK(\OOU<0[pJ1P9or!)9
%ph@Vm5$7ir?H`M44Bbq42Z5<-oSOmF,]5jU`BI)D3^(=n6=ZbTq=\F_kW'm%=^Q!II4[(A]LZ\:otq=<iS?0QC*dkY\@m=*>$SSp
%HC-d8pWj5*gZ`1cY94)=S"sj1$5I+$%?R`NqZ,EBLUkm?6:\2D?ghXg#QD0(%XZOeDdn@VhCL32*W*aqih':ZjC"G#iD*qrPg'k+
%TA=sG5&@p^e`aL<?Cl]:'Y)+@SXi(?l0]9.ma]pHH1?G=52#jk8$sPf!3YlaZ&fbWlRqY?+l/>oce^5#XSJ-bX[h&_h9&0phK[Mn
%*1jjU$Y-hO$jUG\QC9IPnc#ilR+X\aHN9,?]FUlYTn[T_`[JN*.R*4%<(Nc'$54K\^3OYgZ`ik@\:&\c*Su:MZh\;YT8rS+5"D1?
%b5H4kqZojmH8dT6W!1$Jq+CVGa,Te`GMPfD'3RT*2G+0j%\NLn6M^QVI>tH/7nS8;qCQIGHEh`NZpX`@Z^7(I^7PTT^O>23h9Wg]
%I6GnpW,K:$\rVb>olN-6d(<L4*$5q3!6hpEo.ROi*JE=QKFH\m/oF%[(M%8s6RD<`lANWZD\p10rK@Jaf%HhP5!/c7qC-b<+(X'Q
%6LHQi55i"-[bg]f=P<*&e[M$Ym3c`9ATOJ\[_Cke'24#h'oaTab831hp"@@U-JM]Wn):INpoVlb+5K%4Aln]U?XIY7a1pJ7cLA#u
%lmtB4Gd,$UcRtff?]1O4#LnLWd,:CshlRjHciRou>D:c]2=#7_PedMe<>,EVlTAO"PYn4;?Zht2r.RRtogtHhW2H`0EAnP+6Qdfl
%PjTWnBaBgCfChCTQG-@,jh%En#0u5%RZKR3+0<+Q""5_JEpsIeL"6Pt&^gqDp?,]`F2;+n)FBsFi/6YMD`oQgFJ*cn,5,,b^&F09
%ZVFhVbL<OPc049<,%C<K%%gS+`XMK@j_as]d3T8B:(rDd+1Us<YM4ABj;WeS>YYD_cufGgg$.\6c0]pgb9BXoEhOCBY?VSE^qDQH
%VrcAE3-`5jO7aprQiS]i(<6e#3eA]'>dIHfboip&pN%eBh\bY%(PO6,7SQSK-0>Y>p=Ein5ViFk(tR%:P)5@'6j<Zh@)f0an;CUO
%cJ[XEM$OF?KqL`Y,3Bo,Jq!KG,G,gsTVf_XiV^X@6b"W*a(R)ZJd@)aYLgW=!Xp0Rm??n#5#<(KX?T'Ij+U"h\q@i3&I/or6G@_g
%\!8lukV=KG.hlIV31i\BO?`j>nReR-+t\HV)KOQ)2L]HjF/?fp>QajHi<([9_pXT%4rTeUkBje+!P?"oKTMq7JG/-ICZf9K?`AC,
%7I+i0m;B;C$_IdfhAm,tk53a$9d[86p5e'A?[]6Jk-qeSmgrLd(Q1coDk3T$I?Zs%IeZn<PM3o+<%o_Z#?Cq4:WqLZKRM$f,H!/3
%K,9M<P@]g=m/;Cn@4kVq5P\80Gl,f2OQ>,Nm:+(dBi\THHjt\J2ihIt=Ec[[4BU5e/A>q$T&&(L][lgo[U(Uugp\@i@oZt:q;Y\'
%qnbql$%?'((5k-]gakcoFSNN[<n#I<*hVSqNsbaug>XqVa!gEFAY$;X/T;t@#f"^7MegA6B+gcni^UP.p=`[*H2Ei=DGSd9m\O5K
%`A\)DD]EV2nSrK@R'3itoj"T8?^k(JnG\K<QNe(KR\[2VaJ]63MTaU*$9qVkpK+nE#@5'`B']/qZWan!ru*jnL*JVg$5oW;6Gs`b
%L7I#aMDuj!%+=:DLiXH.96!'>T_VDD[alP^X6oVD<S`#7(=K5pi<eUXGPg'kr/7ZR!#XhV0aWBLT5Hgu"Mhh.kRbg;$&0oR&oojh
%U<&qgpt,8c[4&\gmcHISmo@1sJ$i%SYB@/I[b8,hMQ5793mEjnX]'9aYg1g?B-21*@>R'QUPQ]&G9?n6;kMo1_c^@-=5H)e$=CGL
%ZL>PUqau@m]Pkp`hXR2FrSk<j8o0piaVX*g64mG.T!!L\(b'*gppi!$!kn=.E%Cf:lh%Iu>C,*3_rT-XTZtM1)1V%mEqi)Eo,-+%
%5,n[`c5i:lLfF[HpHuKrp>Z$fOFjfC+b-V'#&#r:YZ^d&>VA3Wo8VA2Hkh/bh-KjOGbN0Yfk6*7:Xg0t:;\oABs4+G59jr:3#A.*
%IeF:I%FY`TIG!&#"M7eRkYjO45o.4_IWVJiB_9%0HiA^8%IV@/p@IXO]a](VpquhB0+BtTH?o"7(f,YOp7&04c'MM$\ZL8X*AGR8
%jih0$p$4s/lfmD<iQ\uI!V^MU2a=BkD&*poCt=^Ec`QAaml?pZ[%g;?(s^/DZHj$G3d\Zubl.IE;`ttpQi6"n-Q@%[2MVXY(g17B
%,TBd(S/=Ipc9H53qDq</;0Bl(fiUptdNQ5NF;?,LN$1-dFnbN<,]6K!E:l4u?D'SoR9NUQQTsmO<j@tn$=ghL=FB2$6oJhkFd2j1
%n`F_uX'"l]Mo5#ZQ(ksd&f/jU&.k%3$+)sZCYYocjke-s6Bs>*/%=,sj1^<tk*OlB<T`+`=a^!nYA9T2\!7]G#$@GjD_q9GMk:>`
%h%nhV"2B4>7oLmB,ooaG$,?N1_%q"?8_Z)a]&-tjr9E6N9GWrPM;qUZ?9>Zh0A^&]8T!.lpY]JAZdG*(`Gq_Va?R%_>;m&`cTA=r
%ekVeWT5LaE?$Vo"bb%)AaNpap%0o??(jCC:UV6$g^]URN`@cLkj22+_qU42G=Y&F3Cr8N1Fq4)4ml+#404#X(m.+o!'tQN1E\@pk
%h`WA/h7<Oh#al9WZTdj>e,,ElNRaBQcH4p3df@MFgVlWW-`V=Dp@@s1[0!SeX'S!am*7cSMrm&'blPAa,C<'?"M-cZc(1Gt*bXj-
%XZbc2JS>ssNS2kPf,J52Ls6H;LNN'mop&agirPam)bafL9^`7;\SsXrLt1qp#AIa*a@j%"Z<49'n>mFd=$F!G0F7H@^q;AGqP**>
%ATh,_0/hCe/]2YZClqqJ\?Yc'ocB(#g`3,B^At@@pLRjj^%HA^e$BQPmoU7OX(=$5<VX.Q=pLho,$jtA3nVXBT+'hX>JtcXBWo+G
%r?M'9qee4a1A?MlDRj*+l+M/r%KA>"B]gfuXaEoJi8bUpJlR/-IJHno^U\^j#5,*:\4H,@VeB?!r,aGo5-4"RCIbHml7(f$(o)W:
%]Qnh;Z2UPa#BdK;'g@kC58`_Jm[`)T9@_K#fsT[SB$PRiiiS"!+,>%0cIUjGL1[VB3fB&kIu%@`O8aF%E0uder[HKtc#9!dDmMNR
%@fX:!q2!PXa^4<t&Yidb7bWk"^\C'$+Y;TD-,_h]c+V[!J5jj\2r;2l<s*Scq?^9S^;)RDc5bcapBqPAdp!dKT9cN4AHNT1k[hEe
%eu9g9.(?LqZf#]W.m1*H&j1VOhm9aTDQ`;SiQ_Gj!kku+7o/Op4Dq>U]jJeh8cS/+SQ>a/o98cYO$>Y;T5XM*Kj&*Wj-*9,KAL$4
%4)jU<X&(E5@G1Ldb'?NU069tI=NTq+Vd=6gr=R9'_N@2ZM]1=1gCHq*UJ%CeEEoDKN-MQ'?t90*q&tR0;pW.(Hf^k!m<`OhXmB*t
%I&`E%/p-Q#h$OAblB?;dqH5PZhgBg9&R0%k[*'5G&JZA<TB2->lOWI@.tblUh08>E3OXjVbidGamcg0U#\Dp4\WPdG)>YRkc#"Su
%ZqgR<m0E*79nQ^iC*W"`Z13-rUclf?KDX!d-^b&2(+2UA4<-e*m[`s.GkQD5ZZimkS,Z`?IqN_hSV>:=F0sUZ7PMXVDW]kPmWk]"
%m*YReHEeGQX2:f$W?!MU1%#R]&_+6Zq<cWiX8M;WHN(nH6bBkTI)Yr`Vk:N87/^EYU?EWHfAL\^l7Fr\%`>75nKSU&c>nALlePj*
%2!Xo%qNos)=-$D=i+C"MoUV@_/?\%YBO^35lQj7('K8c/^Zu:##OV<P':>iqd."7sqHhkI`>U]jD^_8Xdlb7+nWqj\QihI]P_[WB
%W+kO@nr#$T*gkp<91'-31<@;KD)>]DE/AJ;Yk,lPBa.]eoElXWk,[Bamh2(ENlLgK\-)U(DZ9J"RQmkq>#4Djr:Lr=g1N[:VDW,R
%c.oY[q)`AHKAJQQ?6rtHP<M?VJmKdd\\F[38-UE";7=Tq8!(;J"=%[nSs>laC^I&LF1#r>1e@K:=&2$)4bEaAE]_bPHQUBlBJVka
%%c?,;kFXEa\S^QGaMWDqSlK7"o494T\aYqp4MLlRIHBMFm)@u_9(?SuXaJrl"2u&%V%l--Anl:aHQV>-f4QVQHnSFFRnh9oIilqT
%aE+gF1>YE+!0C'TJc^jsNui/>I<o3"17n2sX-rq@E?9P4H*@#,($N"09A/F7[FI7#XapSb%cb9Q]n*R$+44#dBC#-=+pRC]l$F9h
%s)8I*n>)?&YD]kWT%oSIT1at8Xid\^rqXDt;/N,D>(;/7PZ,`#^%9]D-"AY$XE`7n]Nj6::d$(*^#"&l7)=%g['k1.naXWiR?uTF
%/8]9Rn.%[6XiS0"T8NNR9_3)p;&"tB*"hD55WqOs9cLjaC8Ffl,i]8kZMqP)g"U2BmW<d"GR3<?hjM6O0BYsjq+%iXZ<XjHe\[**
%X[8EQUFlf0ZQ*Aa]=;9l9:uI:[kW-]%(:"IR\Q,mMCdqKNQ_n/n.2kgC[9/Icc(VA7C>u_P?<\,:gfaE\A0!A@<&,?=j9<IZ[9,%
%qtBLh@6-g6CQ];(anLSR7[fOfS:.WU?!-rn]`laQ$d*JmM,_@DqGQc\%A%t>4Fd:3\tArpmE)]ZpID?hEM'HWqiNm9"B'[jJ-et^
%&VEF*XF6O%H1:Gi+QIh">h5s0DK0*c[-kZbX/m^TH&jOB+T?,*.KB=sM)Eqr`S<E0:GPPqgtS-q1bq,$K7ioUpHP0+ngD].Mj3KD
%R`=Kn52?5FZQ:I>%l\k"esFU=%hH@0"Y^>RTMY(4`\>QiI:aStp<rQ?imH2De_#Q65_k%?aStc-5'@;=q?l22nGu1"di11FGr@6u
%1Xl9Y=W-3''YoASSV$.p4Bd/>HF"8.2jQajFMp!)2=i,5i&pK\!Zd+(@WV6hpMQ[P]Mu^@pJ]mkEVhpts!WA+I9;QlB0OLu[4f]d
%$n[LT9N:G4\R$n"R[InF>$[L9ZkkK5W.)%XZ$".YT2.[mjZ_tW5]r_+ajnrCi"thm)A0'iqjZ?BW6-T<lb<D=Fe@8\h8A@K+*cbq
%Ed$QG;8FsOY(-;V%I8Fs[if3aY'0-kK>QWCo(Te>GI^"rB5oHrLd<_86/(^N'9eaVR/R&V6m[ZZC;;r;;3Rs*OUD-YN0Gqp%*qMU
%lMRZTo#9*Z^##M/=3Yn\SVk+@P?&(V&/Un([8La:34(2pK=)nPkWj94U/SOC4L]gZ%bJC-3(p@lT-0Li:mUp=<fo&4eCZUmN51X;
%4og/+?1foFOYWaLAjr'q:]7R1Mc[c#)LAYCM\%_s6]F/gW8T_U5l,RXI5-2!9.>9q=_!RpN(b@2K,>*Ia9bUpL]E>O),AQ3?mE]!
%cB&/6WNBRY3-S1E)np0B8(:Dr`<[Fp1cV%#O4XYt31@Y"A:p^X</IZc7P?HcSY/gF8f:0D,2g\JZnR*PejN6>.+_55O+rGML-u;<
%'b4dmX+26q&?r-Fid#>a)o33/0E18Ar6S59PFkO;&s5\(]h+TQ:$$?Y1ZUA<1lgPa5$S_UVCtdZW7^h7`?PXabO&JKbRlM0`5^ZQ
%;Q'E#HMjX@rFa'ZNM*blri4O/:XHTNY+&:hTY"sEZ,<9Qq@\12m8Bu"SpS%Z"V+s-?V<-=Uh:[QkiCkPj3e8E\g9%#m86BWJmf2E
%[>Q%f]pYP^?Kni.'g'f)B"<]Z;;s<YZ[Gmt>e5gklD_>P;&%=?,Fb+paCDfdFmP/L_&D66?)!(?$T5MBlF[qe^:e-l2Y'CcLeN5%
%b>;nt%2;?-Y1-@96.N!1cX-lDm5,d,nl`SM;9_'"BrF+H#;1TGH7ndr=7hH;Bn_OOZV`IG,T)5"ciO1uSbeB*Com%1Sh`EfdEh0[
%"6Mhg*!20,6V$0u`t"j`r%<8(jQ0)'LflXjV4Y<^7.H1=@uS9$:Z4^<DY<M#GB)Cde`o`E<hEqa1bM9kTZ(5]We?3ro>1V_`k_f6
%X6/r;Oc4Y6476([`FbmWO!IGO!14s>EW^*pc?5Uk!64KB?u;Dj%(V^?2#Ll0q@J`VC^-+p0H7bpAu"$'>\r@f17@07Gj]tCC&QEP
%d026ncl&Jqs(MP8O1_!U?YO)omH/Df]3Y89%8ER\84*jLq9b;DM*:q'BF=f21?R(&fDQ>>p;c"uFbr$3WW7<[-af'aG`uL=2Z2q>
%E+BEFJ[,,7S3Y\RU:a9%_>!6IV0NrW\AWP<]:.4eM)=;>5:/u/SMZ=C]R$7"DZiS8oIt'!RZES]p*ktu\'4MT3T7*Fa_fo'aC9>J
%'lZ`_2nYA;=rhN=b2AmtKg'o52FqoB*BjA8pfm>:['eBbI&Fn+(T(?P0*cP``Z)_i?HR@#?gEAXD#ZD"%7N<_]haUOf8m2d1.sWN
%MR/Q5_=%FE[u^RgCS?cZ+/ZIcP`,ZI%(f76oi=8aRL8nkN0\ShSR70H/`I\0n>0I`d^+/ti;B!DoZB/:nJqjAb[iMCr/7a"o/poK
%+Wml^hDiMk0C:`bT8IMJ^\I]0n4*/NFk^`/2W<ECC(,)RZT6%IALQ$;kl'MQnpV/^f<Wl>c(2Q`?da<:5V/Y*#L@_k#.A(L\;(7`
%?m_1Ff1cVm`4,7q@I)ej>S3ai4jSsK]2mYI&q9"1p%7/SbP/No"K4jQ_M>#h-#)Kt>'t^HBZM5>P:aFbi11[Le7im^-5R2T_*#Ob
%7(f^jbjfL2PQq%IH]!p\4=qgLL2?r4*I>MD6o[>*]t;'tT&Y03c@%^cUX.k6l+/F2V)R0)/BsQ)8S;a?BjnVK.[ss^fCFJh6INq&
%pcp`!L0h*G[-\JuD3bAVD^2f#8jo3Mr-OURbjBY-B/sZ,4:9ENoY?mE.Z(\q:YY@\2%0sZL)M1/QL-G3PCp\igh"C%!@-@I:N=M,
%8jHD0Lbe)tKE,?^`!8!FhoE4%QaV=(-;=Rim4lX#1)=hqFSu4<QO\g*].R_t^q9nOF!Ns8C:(ht9S`\N^qp+URA3kjae]D"b+0*=
%:>55Df,SURfF/(*%ic)'(l3e0JZ'(<hLT$BV%uT/^54\8gs`3g;DLLnPXG=nNpQpS7=]j^c$#q1ad>tSR8#@h!-n_T/2IZ9a?qO&
%AD6cLFY_lR9`[IfCrUnM$Oh/'E/r7tX7TLZ$85lVA`tQpL'#:2N9UeIHi)tEX-GYtcbSG,'Wr`&DjVM(*h^sU;[h^uGSB1NRIOZ?
%#8ZIl(g4?X8/p8%e0%D2!556;kZ7+Sp16UdH3Q+M-5kN+>WLTS!dR$;"\RPtXlMOAKH+?7IN*dCh;C5f%A3_c$R1H,/3IK3UueSI
%6837E_BoP%JgP'Jj&;#J+.R=b$B<5`C+P_h>T;&G*+,FtS-p_OB4c_K@NL'`_!aWPHG9%#bQ@\l,!fkgqu.n:i_Zd(!X1K.BYYL1
%)4#UQ,'!:GUGP/._M+Jf>XBHU':uW7*4Q[sV;9`1*97CTZ^qR?'XrX+39]."X)4Qp[le>H_-gGS'!Tp[Lr\%YhcS!Ds3_OY50Jt6
%!-!RT$NOPL@dprEQJrl]00gE&9:IKY-H^on!hWcj%pVrcJ6O_skRR[h!Gp^c"cEo,&reoN'+5L8d"`dB\`Q9&*#o#&"@lIKqSl!*
%7%/YG#Lgc9BCJ(;2\V8_dI+Q<%Xge:0f(iJK"5F,n/>p>+pmAO?N_-PbpT$l5WK@Q1L>12;hFf-?co2rj>'rU%HrQpc1ZkfcFB,E
%pN)BLW!QdXHPETT5GV-E77Ko@X&:u2X9cS1>'QE\pD1t'3NSegE]Np6R`euDLA^D2;at#0[PDQPCsF5Zk'[]U$;A3&5@#3La61Id
%g\je@0=_u@%uZW;@ZlF]btPR3aC6h,G_]\74lB<"WFb4eI_h@A6V,#o61EKF[Z4,un?liuouO,Jq?2`d$?+5BQSS7Z$p7Idkdc<R
%m!'B7J^"\[;6UUG;Rr*6G;+fgrM[PTk\E]Y\`K3n=ElP_3j'$sWYQ3Fi^5!3,d:N1h=f2aW0!4>o'ic#d[]GRQfu!DBaJ,M,s;+l
%qGr+7m@e$K\*foG6_o=/abP/[&Eb`DgF4(HD5eRA+k:XB[&shA!58VRIS!$OCIMK(7r[r,a<:89Q]:9\BK1QU4D&75:::Bs+>*q\
%?B;A[j1b6i:?i#_#J$?eVDLR1>RPTg*lRu6*RU<I%s'Z@b_##8Y@7a6EgV:X48SX./YXs):I%P>Q:J%e&f)I+k.$cci@4tQ,j5tT
%gP?JS2!*)0#JK+VAj6[2!p(\81a+$82O]53n^49M'Gd>P,bNQ`PaAW'dQrrG`X%5SFjO+-W6G>uJF@>sN1^H3)[&*t#R#%Ya">5j
%a'Ig'UOZiX#Y[;;%Wc-'p_J5'H(a:6#%;!"8JQ?Z(t`05>9U!M^*3t@<4m_cL_F/.Ld25eACOLXp_+Kt8):sFiO83C@i8!e;LC<9
%"af5Pl4*@d=X^^;d&3B0ckge_5R9gu"BD`$CP+KE:(#V^Zo'Q_KN4W4lGS`_))mWda(@\&&4X28ed;j-$CQTNWXH-J'FBpt"mAf6
%/dWag#2o]/!o,bk&#1Ru(>19U%HlCc3r??t&Vn1@&L?*CT).'fL)g+SVW()/66C$J^!R&gQNW5)%L`%NBTG#U@4SiB2HY:5MP(\l
%68:fE!N4L7V2J%f@UZ#\I$W[t>D%40LX*Us5eKX_r/ri*CudgBI0"B.ONB+aXaj6gJaU_c4[?0,O:],eJfAMD2N^IJ0I:8<Je'+U
%XXYS$mf;]Ae.Tt4:I^>Zg"`o2kCDo'1mST>a``&Qd\$nX6%BmE0aAM;N*lpH)[,lD<JcJ`R6?)8YSHOHF"eOHXq5lc&!W`d9Q!)q
%F3k9;p)lb_"q)B%3Qmf<eSTd?Gp*/"ncg3We0M`bAj](?!((qba+bS.E@JH?L8\3;.h7e]MR-a<)Y"Ul7i-6$@7rS\abC:7_ZeIY
%Qujkq=;mB=iM9m\%$OQ/#dSEZ6"'^4)`fCOQIX<9(+/.Y9H1>c$fRK:dk,Pde;YVu"X=0[iIhCG3bTfoFtsVA"$)l2icJ*@ie!1&
%8AStl5Rqhmebq3f[Y):!O908^=TI48P!6ZT'Yac/O%CrD@UCA^1\TA/hH0<aUND/S'88Q!q[VhD6Z=B7nY=\&==YeEE#"aT%7_8l
%C5d*E5iJJk#SIO^5&j.XNS,dHo`?g23"$k$/iH:c64^q*YcqBd7MEoF3'Z>(GXa29KCj^BN)n9`\6%T-PF,'j2)Jdp.NfF:>QlEC
%/&]!^i#.^anG,2:,@$1FJan\AlUHi',5?8TJV7D4ZUq>G2\_&$O&2<hNXq_[lY4OsJr5d-(,DtlXIETMK\X(/@4Q^l:gq1r\6%kj
%SmsV9KUC2,*8bEu#T,h"#c&DfL,hUs)KT:"+N6&NPG=+)Zk2G?#h%IR3tXh!>P>IFjF#id,Ie;%WlY94Rh-%O8U/<2&.(tQFH?Nd
%pa%QJB!*hVOM3>,3S]lhX59*5Cr^?\C''W[0o>(TS*q2p_%A\hh=X3ajW6C<(hahioqCFaoTh-,*4Sh:"`*^$nngu"@W'4Q_^.It
%o19aKU131M#,Y(D5[E<cJg',CdK:4id+fn#(oH<0+O1#FhC"OC$ZfGP@"E<#aocia$>"p6';:Xm_!FT?`>q\-m#+aEp.cNiGdmdJ
%Ue%Zm#6\TF3ZXJ6#cm@(>[\=3Vp'jIgEg6B8Ho?m!;%oL`*+jM$T?PTLa-^[-FPY9pPma@/P@.B7G-mXo.DV,:'(Po>MM/=;]^\3
%^n(L"9oT7-d:CCY=Wg7m4:%6<rl-4g$]@IdFC!\V([-LH/OoRBgG,0/SW`?DfrF;s;9TqAmJrOiGosjJq!'r1@^C#26m)^s.#AeW
%be1suNcud%S5@7S7KUIiAKAV7E/6R'7O\k;LcQOB2e,=XVN*5Ko5R_M&CF'Z$6R"B%Phq3QL[itRTf:VA]Q\652$%3dL_TT2]e+K
%).K9D9Ng.u(^=lFI2lif#>@SAJ-7C[*X^5d@esru7QVll1'h8>Uh_LHKW-!Bat[s,`X+WN;s)'>g/?AR\G$gtC#``64s4Sdqg^:,
%Bs+,ZB-Mk%c[d[r<@rMK)ETPh*#CG_CC+5()a\jPn@hp[6^4`AAM0en5q=/`KQ]_'bI\PM"RuO<?T4>Tq8X_.'J,!O)(Q/<BCU[k
%mZU+UI40)%(AO`u+g[sT-l,S5c%K[=qT'Fl0@=So>Y9(!9:CXHR_Ko@`%01OGQ9-d?JK1Q2/@2a2H3d.6)(3=@ID@FQ0_"=bq.)8
%f]69S@L^T?C\^N(BES\WS?s!.">cH_O^ss+L@6$rf"Rt@PP.8d2+?r6#sdRdR\0kG)]/lo1#!lgFr4!O[.BmuFs+pS?e'6c06B"/
%_@;88g;mb]SR(%A!$1+=]jfd/#B.NmEOQdh"eD&8*FgW/"(Z\c3=uA"Uq.G80jrO+3un"49imKd3=E`F[_??qd"F(3c7r2?G@HR_
%_b>^%4Dq)/K#"4AYc33[>[`g?0m!s8+>Eh5a%!;<OH#YA+VQ;QCj=%Z7078(\hXp!$b\gao=0iDN*]S0P(+Xk1EcKY,2@u0h.12A
%dl+(9,9I]*$iUH"s!;c0J\JY)N/j^u.V$^*\6.PQWj%E9+P`$;J7>Q9H8q+B;2#Y;aB]!43b^ugb[#s(?k5qA7]n;!]dJ6W3sL:h
%]l:IppR$Lpd,SX\mP6<Goc;NCAsh>](lQYW+J,6@%b#,5K%',Ebpm-RSY3Y%dpIiAKF1Fskf]-.qN@pli:6r?4B+7O><jR*qe!1/
%P6=M1nI`PSFu[%RiCk$H`[-a+gh)oqK`X1p9uiYMjl;)(jOV0RTF,Xj,P$;7;IGi2X!$Of';_(:`sqb\0OTN[i]-'+Pca\!?-u=S
%\-LNi'DJ/TiAId6IjKe`R\Il?*bNap%$tE!L7-*`CYEF49HuXS9FirB"'2GJGT!+D0Z^E5JKD%3i%gF%Bt2XAl3K=hFbst'@#j1W
%.m5Pqkp-LWNCqT-*]8e7V,U\Z!XM?tE\J)o3`q/n44V9,5$9Aa%94rK&RJg#eo1FlgomSeL\+R0o3S1tKCP?i'=Ip1gphi.$5p]j
%fa!,k;EO;T&#%VDH.]ni!^[@GNBdc1d2&FKA-M*fd(tMT8nld_f._+/3-)^q;;r@t*M<or<3&H146U/VC7H!hbAc(\l$<Oh_(fO.
%'DP6o$$;BZZ(je,$L1StLo:nalE6p&&Jk@egr"akhkgf"=B,BAOr=jYHq>7)7[Lnf.LtO+gQ\T@l*Ge7JIK';Q4>3eE.\f3?`Bj<
%Q)Y/ONO1$7).7s:<WH]J+;U4]U*IQle`cc0X3&3;=r(jCLnu("!]a76;dKRi.>?Je)M5iA[f-&o294/]SFQe;\j/6T"=0]L-umF=
%-=)_jD:V2nTI=mXa9'4oPGJ]/65B&GWhA+@j>oaFnGekpqPaOp_]fhJ._(8P<2(t?$JJt@l)0E"<A.ZC<H,R.b8=Au&6k(3a?nF]
%U7Wt=(`]9:Fh*F,97lYGLq6#di!?$caj@??"r7ae:DJNX"JH#Q2FSI*(tT&3F#._KSj<Z;[1\R&nE3W:3!"bV`FtJQQ=Ho--g@Qj
%R'OT.0,1="9N..M38MKc:,b%@JSOc_d0eTsnF)"1lB3gD_=5npU19rs8:oj[&Ku2^Hl#8"UFI>fLXASXL66!0kq+aLQRND.Z#@1]
%RTEmb,[qh@#?],#Ogm9aLaU%=dGtJW*iM!,[)!3XTH#DXZ>ai%'Ae9LEF\E'[5rDg^`f0MVL`6r)^DNm['#1X*9TjA8gR+:)Mfp+
%j2gqi&u5c8/M7k_F"DnXW'M>m@tc+,Z0Q\cZd:1a4<Q&d#D0fQ'c,dq"BJ*GrW,=fb@>YW#i))+'bd&*#pLt"4t5E:Np0P>j]@!i
%Gf4/![(-bR\JA"-J79)0C#*S`;_Iesp7'm$H2]KY]1,=\CjDPVXrb*<=Gf\HRP$pf/+PCF;0D]e$:$U@.qe'>P*lI(8'cpbe#bNs
%_""^H*C"mqP^o1(W&d&6R;cH,'q6&2`5!]R[IGT*+$;&Q<mO7;[On<C8DXA*;-\]I9_taqkhmr5'4mueWf,LQ,'T#I,SkUFQ3>hX
%K!8X\S:Mj$j-S\N=m/H;#D(QHdehuF;Y2jOmA)RKBEql8I>qXhG"$q)ajC8%></;?_UFEnG%=BV&!"X&<&'/aEugf\J0uJtj/Njd
%Y92]Y<e4,pqB+[e_F8ASmp&t$+5UFW?6A&$0UDS<470fM=Fh5t.e&?)2JP.CV.$PJi$1l5rXj%]8?^?t_TafSHfF0+HBRS2R;4:X
%o7Uh]EF[5\2qM/Bik);<>heI1EFG;OptDHQH"=(_XqASAR(:4FR#l<':$%k9Brl/6F3.)l$<i78%7<:/\)6qOW*mm<VZe3fis$r?
%@c+#8:-]._aEFfL'p&Jg.#:er;LlTj?.U>*TNcYIN"dBb^9IKK!SUD\rN6f_p:2!7"]tajVBqr?6bN-':,XG)h*+^:HC8\L!_YbG
%1b$7[#M&7;`;nnHfk81+Qj9c[kVM1s7u(hs6D'*RBt8XU'8Ef;%*e:0:im]J>=+qgLa+<+Mtp'1M_JlTI3rdiDTl`3>bLXP<$`6>
%]1`i5@O]W1qb3C@EGXLp1YJ,r@54sBOqC"J#/)>oJmUHUecMbk`StL;'<6I-`/EoW4f6&L-$,G-ZuJ2LpQr+3cP!+e";p2dGs'eb
%P'D`:lZ8@SA98I_^fU(h4AB<)Y*,^+MIW6@#KBCJC'%HCcX$CkoTUVmId6Ng@"#8*f5Qpm>FYC1E0:DK]H//Oc2sCt!,c7</7482
%7p*7h32V&`q08p&8)=hVVi=*:GD*r`[UlmbX&b8b[Te#I4NqAj<n_4BXE:OD=_V\mD:c/CfHffI/$5bdi^Oj-!R!A?-,q]N+Tf"Z
%i9;$t,Di6>g`Jei/U<sm"HCj7V9t*u>t,^7^aVTl4-]&i3CSI#LBVR.kS/#WCi%QLqN'!?WtiXYXYs>kA2DF"j2gXUe8Mrd(*5"l
%6Nc$NW$BXp$SVuU?0D;dO>=<]>!/QPh,0FNK@U$`2+iU@S.#6J:sksHo'ki[mK,*Rdpj#3A^VBn=R"0:3dRI]W7B?g4M3"liACr7
%Tu5GO$bce%?8u!uHur+'ncQ]Yo3M"i=%t4b5i2NL0[kclJpG@h+dOB-g.msD=[nOIMlrBS`'^b"h0SpD"qQnodRUmtI2WT_%m2lP
%#*2H/]bY^oh*E\$E"BY2Sg,Waku4FM`7c>>_-f?.VrGu&Gr;8)Z0m1>&FZ4.Qo_M2i9?Q$X8\k"#&XLsimO]bmF^\`T)O6Z5ToD[
%%/E-q@Q6\#Q<3;JX+U9``$ZN8::M49^t]'qO12Ja9g92_*q!+`Z&X't>[n-05!c:.obF![^UUHN/rH+ZRW8#DS1*n_#tg5hbZ>N%
%(J<-P.'DZmG.mG$',Z-LBY^1/\;6n?[Y)T6;?&&[352N`OE&W1B#1JnKoU87N:;EfF&sCE6#0kR!C;+E$j+:?L:QFBcr'i<Whgs)
%PaJY7Qs;&"EN#fM>D8$%m7F]iJ=0/.KIaDT="J!p/0mO=\:8VVQ^W^\O#5_Yr;)N,@[teZ<*/QCb'#9?R51u0G9Y5ZV%?#u4Ja?X
%&e>?T$sM1]15osJPs-$)[iSKurD%IhB3/?nY4_G_3tM9I>!;<)dsXn"7ZUl[+GgNAlj?56?DUId^d#5l"VDNJ0F"Y]AZ>QXE2O1/
%F7SRpOop=h9P=B)J@ht^d35m**F)HID]nepN0c+;du/<M%DtG$@3-FbnoJbE*((9YnY",Qo@2c>MbT;=#QFjJ2_NtX<&GZj&X[\-
%>C<g'b?+]_,a0(N:l-a_8Y=KON]a'K"^W]jGi&/%HF*,#N;BbEeO&dY(RoS&;,]`5V)/`O>=**mM(&Ef?.95/(#p4aQsLnPA^b7r
%*OPO")bc%h6B#da7Bdnf-D[1N?R[qfmAS'00k9Z&!CF8]'&RpZ'hIct,ju\]5-c48n(keFV_EJ<_&`6K+@.b4piS^WDK7ENM)@.-
%NGq?Q#^>5lW@Cp4?7%^;K]TLk5k.YQE'MF#>/5/"U>2[!fS9t=>O\]t`TMKa_XYasnusUnV2U03>jYa?YY1^Gl_u]N/.*V1jAah@
%^k3/t'#V%(ogG^??nI`kP8L)/F4t:3&L5`CRjZ_M,ck[1dEo]3f!d)\#iYrF$]^7c\pT:AfN\C]bKAZd]*l8.LoU-q@1qk$^!!ft
%(D*[[fN7'd$*G66_?4;@_h>/W#d;$Wh?.5\QD$A?aUM^h"7TXe25PJ%VXdaAMAK7_)36P"l;eb7oL?muQm^hW]WB'+-.Hf`)0N#8
%a3oE@&uck$#M>;(3.V)I'i[KcKIH>o1lil&$-F%b2nW4,687-R(:ZpB,XS\:3_UXhZ*CkP61ckWTaS+[cA``-9etLI_`3>F\4__,
%$.p,qIRD-p9YRY$5ODN^PE0TB2+]ok7W(>S!E"+BhE9dh!04TDLX='i_:hPprWcq9W]pO'jJ_+paC!:k.O=j#0quHg(j;_R,VY10
%>[7gL/bi"F9?8!N3Zo'RbUW#IJ;]=L[fsE<SiI1kE#.9apoEu&8'$V6SPVm)*Ye^$n]:OEUmbrVBY[ajM^q&!0LWD#JK2mo=Ql''
%D8W]m)#Re@Stn_]?'R!tI(%b7_[TjT"[qS4qR#bsr.BqXZ-J_O$j:I[JAP)*&$$mk(uBEUY+>bMkgffG3!\p!6GBlJ`GcHb#W,O(
%*R(66X'#DAAb`>q2%L0VgO^^+_^tsY*L;$+)#L!bVDO56p)=l!Vf\]78c]&1.=nQmX=[:P"W+id?VlqRH"DO30J#Y;%$K*E/_9Pb
%4:-m>WZkA4]M9!$C=)&*.Sh0)?6uJ@Q(590n8]9q0rH>Hk,rJsAe+T@U?)24=pG&WUKB0>^(^?189!)U&AaI2TP[UINH3XRdM*h=
%<0qf/oca@"qJ`U;55987%lU@LS>"Zs^Jc2H"FM$a+Q+kI.K\hm:c0VFhni9K`HS8p%I=C$FkT:j0;o9\Q>U2ah,[O,i4G[1Jur-"
%JBj6EL8L,9)]">12n$N^&mOklN^^Q;GXDm,=gZ#4iDm66M/bX5&MuMh=NYR$K+N,U$tLAZKNE!K20(UC<e:28\3rMSpZ"+_YSIp!
%i,YU7e+K%pi5k/`Dff:^mqPuJPiI?4/T]uk8%E_=X,VeNPFT."j'.0a7pS$(RZ3FHLJ;@A@Pc6))]e/[Ll;NG)o=W*_6=NP*V%'m
%1_c6/81aUrjp[a%lIJh?\?OM6.i<.0W9%.W.6'+I\Sj/9,OPY(LT-JA()MWk06$H+nA0r2L[bjEQR\C8;@Drt+KiU]*4e8blIiNh
%K);FDMQhs&d?0tNk'N!QJB([P<aam_YAqckWSB7@@i?"@(.&cOE_o'$:K(a@0g%X12*[&k/F%]kfV.+>@TVXj$frIVjCm3`cKW#6
%UD9uj[8cr[i>sYu;)75X_h7r^>$^VD)=C(hQCpAq[#N-/R$g4GC>i263b04+G(Mr6oS!mfC8*jincaG80VX`lGeGU6L8upSK-iW$
%cN@P$7op;@"U7k,kQgU*&2FlrE'_DVaJb=@$u0<iMXOE:</ik/M^<Ho'acO+72?$u(9.#3'eKN6)0C_?%;YWb9W/%5!kiVN)>FJ^
%%nIt(S89G`hV=T!p<9fJ%,(_Y2]5NmN3&_td*6ahJ1;<^V86gILlkmd'R+Q0KbAL\)i\[f?aK9i$<dkf^Z7bEB!Nu[BEnMWRe%Wt
%q-$ZE4pa%sM#4,5PoGO]2H:ZbW'Dj;9&3Q^';!p_-6q_&_30%c[BeO"4Xnh9-Ap3O@4nN/L*o%4#VsKbL23^u?.nonZ<hs)R-R(i
%Nu(HOTd,=q`FkP^oPCDs#j=K3^]7Gp!^6Y6Qe,OU0A!T6,Z'o(5/a0jJZ!ld-IE!@<ML"hK^:aQ%\E)9W!OP2Cf*nZm^CP])&4`d
%l+iMa6VE*[0rEp6"OSM#e&+9bo2LphHjj.%)dR6V>1&JQSJ2=P&R[Fk*E^3+O3YRLJZ4ErGY[W;:dU+E\YT#K8!cV2+]7]RFE:Ke
%A.K,9=iDbk<8cc`1>AX<"eH,FCM/8568mW<]Eg?fd^I^)6Qkrir(W1jA@**8H*dU&j@5VQWH=_)DS/\f>^A]#+dK1=n31,R"nNcU
%gu7I/@PoSX:P"GQ3bhhBRrE(i*ZjKA#0Wa0?6TVD-:<Sn*grM;$mL=LP3.5r5O&c;XJCIP#TU!<RoRV=d8cdj$5S1kR)0j6B2hB*
%794Mc-oSV<h*W?GO%0S#X+rdk\G'OG$9)Xpa?AOMq;SErE`FCjD,Sd$"?t!`Oe\Wl/6d\0'?*s?A]th!aV@L)<^9I9W2<UH2btY8
%Jo6%XMK`-"836h?82B/g%3%^ZP0*HsJA#ZLhZ^J)Dck&s-VQbb:&$WXa?W/k_si'[pjj*DJg;et3K89\mqF"e.*894-\[Abep[mn
%L]/!N6X#LfntioH#k;P)B`a9MeU'[oMJn:j(bT51h3h&-k`uX5+W3b)C'ro20u3VnKk$.p2rUk'iY63<3gG4M/KVK,`Y*ASc[mj\
%=O]d7fdN1SJGnN8q!IRppN9LPf*G-^Eg2"5:9MP<F/u[YK`Q;B:Mj1.2m9$0=ZTQ71?%P"M&Re/R9'`X%#n$l9SC;.VjEZ_,l_.Y
%$hL>W(o,doOq!R)*tp>+2[O$jZJI9'I7^ON&2&YZ=Lb+noUsXF+g=_,CuFjc$o:QFP9;1LJ@u\qq03.<6G/YN=M9DjU":>6<lY([
%9adXt='t-oB]2N7)OBRMN>&;%eA^KM5Rf4?=-HH]K<EqXJq3A/:.p@=Z,I%_?F];rV?96hfcQt#hc;cE%i)^F'JW_i0I=fT&`?Ep
%R/@2[bp7<naLb*p!5hEILIgJ(N/Tk?7YbBQTrp$Q/5![PXV<7?6*94fi.d7d;M$>__?b%jGQ^.c2b'Js2/*6RUB1bu@<)j*24"t`
%HZYk!ekLfCSCJ+M3aCe28_eW&8e>:>Mk":3c_ha>k4TZo9t$n`%rl`^'"$.\3D6!OJZX]k2!k:IA\A9.J-td.onDS049);1f8s+%
%m7(a<&Lsc1V//%7,t]fjTGF]q0[\*iS8ne_MKLH_YM/%U=dC0L7k\@lorM&t-ad-(h(F#YPdU-t>5X%3OJZTl'/\rfYnU/G&8sZD
%C<OTdLho%'o27q`/Vj57Q^#Hm#.OB]H(r_l&TEZ3QfhdBXLX%f\\Lcfht*d<g1:&b$+I([.R%7+JqHJ5,mrCo-Dr1erZ3q:3q\5%
%%.aS;Z\lPSDHfj$;.:Q8"=5(Vb%ak5.oe2,>Ld.!Kd`pF_m>b;#bqgG!3d[oR>RHLosGIb>%"Me$P6co?GLYHV)jE&/RP?LD;3Y_
%_&01!aV9r32lb!g,+E>i3d=sORik7cWeh3E?k]GqA`<u"b2?Dl05SI*gQd'p]Ui56`$Y4Qi0"/0@T!>F8'=u[;UlP7Agq29l:C^n
%[!rj\Q^;JmH)Lil+P/@1Q/da;*RjjP5ms,c$7/Z1k\:LciU(\s'_&DMg9RFc+d,*T4I`;_$(#g6<0MEh!Om&Ugt/Y<m>>mgT?tKL
%"&5pRnJb6hq._!`?nL,_1t"09<M]+42hs,kD<jSAVM0FRC&!]17r>4bb%LA:W266j@6pe!\W?K6\g#cq;WfsJO./L=hM5E#D1UVY
%Gfp=p'tfo$2gL^<(6>CCj@WFSMXt"neHEqK+FI&&O<or=7DHFVo?^pB[G_n!$k$d;-9RloFr]4TFQb\AFqeU@0K<X.8]'TC==p#k
%4.h]%UlgEIqU@p:7KQSC7r),-+[5:c"fq*tK\tQ;Tci#8H\s1SnG"8?pp!!a&&E4tBEfGAau3C_ZEdTHTW4Vh)rj5])EFXl?*#jq
%g6;&[hF5:E<M*7)^rQ`A%4r$+bAqpb*T6^J_QiQl8TJ(k?5BL`9DfYe&OEkc=0G)eU)pll%Ta$/N!b*pXkTk@4+Xm:B3U/;QF+&<
%$RGY"<)qo-c?1B^<1Ks302(O'JsV&8okWj[%8p;umZ<e1+uoF,EOpH!-/&ZqdZWU"-7G.:h@=k&\qJG]XpPr8iU.MrMN/#_OAIV>
%VqjRuY)8mZTrlck\CVphkO2k,J<T_:H^($hBlLHg:s_R('!JYNdZnnf+1;M==[XfQPENp1*p?eTX)#e!7HUkB+(T593h`]=A9@ch
%X%K:NYTDY"qsBuJXBOsnHs[V&DOc>7%(Q1%AgL[f7S+(MLusTb@(\se"qAcF8MD@lGSViuP_FZ:W^>'7d28^H1G[!0n?,[+Y!F/C
%/Z3>%_H'?5X/mq=>539F+mc-SS*;U39`heH8$I+o+U)\]DPB`8dTRF&+RtFR/?G':?I>I2^bZ:shF789\/XBWhnbSoOr_?"H5>th
%FnBDk/eM(<6C%AR52T7pBQ[<gCrn<I@t=DQ/h)Y%6!;jg5emq+ejkeb*AefX1CH0'aCh4@5ZNQ/G"NGP37Z,[MoG3aH])bP(V17q
%J`Kep"`TV7%Q*i4*"1j/YH>ckL:SuBS"ufX`OPk]gK_/_GRb5D,tk/oZ"eh`0p_/u4W8@EAlVD;)&O>T(/s;cHohaL<9g=k=G7)R
%=+O13/-&+3]22uA0WV3c7=U".g:4Pe(E\j>C'RV"RN(/47gP%hLoFK&YQcA9.[$V70dYX-ho#mKDl)ef+C<ft&s4?7>nfLP%!i>5
%<hTP$So]`(`KWL8pQE>rG4sIX1V"G!_8lMWTS.U9<-+r%@k-OT@H7^9crQ)aGEK#a]dg)Uh;rRK'2'3J&%@iVFV?K1X3lWQ\2<+t
%8Oo=b4%TI'8T%3067h>7p$AX0%MRr)TKG4^H\ZERBf-Cek%W".//C(-e[4U68u!UGC[*qL77CbRKZZ6al=.r,14b`ES7!qK1s`H0
%_rK15BtD.,et%1^romQ+8$/.r&R`c(>+X"P3k4Q;"ArU8`.(*&%(pDA0Eb#T@>bfoj0$lCJV.?/l(^t^TO=?m8h,q@4YKMBB'Cd(
%XGUDgVD4nO.BV]Gb^)r2fl6E\RniQY/.a<QkSE,jnIqLrjW;L\BJ`#OLUc1`]gYdW=)B!bKh,V!:$;]qjbF'a/LO#1P2_a"/,p?D
%IQ)645?\^?!MVNGWXC/9,"rQtK&\p"<)V'8$&("ff#(MaQHn(?KiL$@RU9br:n_'%RLa[B?-Ihm[_UreD1>CTOepBGk#D;FZ2h=%
%Q[(PijXDWmB[cjJUah;reXi/HHg$,D7f]ZCb+eDE-4c<t-oaO>h=2>G,bdBshFXf*?sN!A9VsWpTRbl9m&(&mo$[lqK%LgqQq$g8
%\lan\]3^Mj1GbWl<9]][e):;,I6p@AhRp"#&hLf:Cd1>IBM*CV(Y;/)CioY184U_IVdg/o?)iV,J@2(ocqCn6X_\X=lQP-'MEKW/
%Wp#1ITc984iCb52QUc',F0rM:P0R1fFYuKKMAT;j#\\@.g*4NM[[)qbn]V*kE.LRr%fK>Yj>e\Q70u!l&F]?*5qaUICFm?AEN!!\
%[<8_c?s12+NG>,*]*Mc=CsrRKi#^o1&N2L<><Rl\ODnJN1P!H,krP=MoU(,^6`D'tU/.\$4Q`UfrBO(Q.8$R-9AM6rRquD%?//e_
%A[tpUY),eu91Uq%A=mP98tTADnTRrXO=I.Pk?n&Zs$(l!dP=CWA81K;qEO%])!K!3Y.BX15jo%pq%4^^b#h\1rVNk_*)UeKf0,i`
%,GJhJTaM4aP]/G-X/Mt%c=(=3b\LL`ms2$^=smjL9VSPRR+89c#\ZnsTil?9>dKm^$od&rLER=:[JBB`/PTq4/UWY$&cN@)ao784
%QXWS!S<Ze4=HV'4#</^)*3?Au0RlYr3N&uk`(cA*B0Y.1k5OW$d/DrAh9MoYS&jj(5"\VBQ<"@F,;LU0YSrndU3#fr^Pir*&$u/e
%S'RD7FSj>@]SrS^lGJE>h$lC`\H!BG)2pfP?f&OBVCPM(FN<N@n/Pp*[l:cpC,eTr:b3J\T^(p]Pg%,JpEV[)#_lQ29IJiJO(4H:
%%[K=`R=nT7[X\WE<7Bf=JM;n5@^%_$mM&YUQs:/94n]@7$j`R_jf2lZ[-DbD/GB@C[ITS8\"%'cMi$/TVa:Yj5O@<J]U?@_`6uF!
%P+Y:is/'R^-@(pdAp-,"I*Onc$u*k*%Hr=Q,NINk<gHNPr$'+GHbsW]jN#:4+S,UF5Afllpd&.'PX28=Kc^KWUqU#ta*T6+%>CDp
%3BTaWg<&+Hdc00a;\LL9/mm(%X`iY=fal%lrb74Z$NTrLTd!o1F@b@&V)grmp@s/^,h<f;pkr=;!@lTa"ZR2E#JeE[<>:q\FS]HX
%\jRg]Wa@=3]XD0=)R2r')@fe0j*D?Ahi=.I>Z)f!Gc'dS,a1lRD/4VMXR-!D[&"t);SSls*%DCBC;j)ld(phc]S$:cnT6*EkbZp2
%RUEYqZ6;ga&r+@96S$*RX*o39nDlk`Vo#:)V+?Vt0[@4bSekPF,HEl_Ffd7"o@+DN&1(jbAVI:%J2uCp(RM56!H>9D;?VO5_kU0X
%PK;GZF;&$loKj@1<5F_EO>+cH-fO\3ENHd,B?1FFDWJ[091'rBcY]?IBtt]'J*,DK1G3P.XWj+0bSo<9/#lhV.XiBbQ;4BgSH7AL
%^]NH2F?]U_'<E1XPI3<JrWBK.95`nRmG%aMTB02Y4%hUa="1=TTpm`q1EEbMq8R^1Bd$dCM?)jO_rlPc\Z5c=G3%GD>^sIbeR+q#
%9lAuWOTL*N6<]aMWH1iE@9e69B&AS`SZ;9\^o*ItIkD&r_j0;*InFXBE)@gI>L5kb$Of+D=+O`"<h+;*<gp;>$I4geB,Q:'m75d<
%*5[D*g-Be8&md_AK<oCQd$n2'6^T%)`LTEYQ5#=7@*B]pejc(OaVC:OXp@'s2ZS7K#kY"#hjkc;lfr1YX?R[uL#G\4`mU)^?[oJ\
%>_b0_PWn/Gd?;SE`s78tT?3oN`Qnm38,X@OHDCMqDWlOHp7X=md.gXXf]D4`%o[::ojEUNLQHfO1*oBS!-9==WHrTK8n!7*/&bBH
%=]PiGWMiNP&VUIG-rbNAgL!+6muFIhrYYL9L_A(gjmEos#:Mu4.=@Yqp_U4P6uc5_5up[aaI&7Hl,+)$=ul-^13?.-+(A!M8r-q]
%7)Kg0d>gX=*&r@)#]c/L9"!b7)k,'5Nue+8im"):[r9:o8]jRl7=H^gB]\.&:&BFJp-3r:W`5h"\u:aQ/]$gG2pH7iImIeK;GKZ_
%<rVnmrr)`:^Uu&rGuO]l]p+#[PlK>5l&Y-/>\fiaM*t,[#IB0j7D'u\ao4S*GiL.n`lC."0H,U:2?1"<jY<6+6kZ)]&!o,UJ]T?9
%/6e;0/g";?8qOfVVt6V7Ut7;sm9-n>Jp=<mf$\@hJd#s#6nQ_=OCo).M50p'Ei;H!J5hm;Tbsg6IgZ_-`PmcFI[JJ%JritU&^D@o
%Z5NH`;)Sca?<<=,7WB^I;coe/)4f2splrsY8''.``J1g3[?tm>1mn[lWJ1oPeUH[`5R"N:gf$\+j)r)APFo>u*hgdq1'>Rkb/SLL
%\0Q8H5hi[jF&I_ABkXUi7F`Z4#Vi3TL5ZKE%:-Pd9QF_!T<kkEpJ#Ea<VF[<qsncYqTl=aK-W'$<B#+JBao+t;N[tHU2st_qZuF4
%ULo9`rXGmPgbn)YUb$;OO!)gu"dY"rrGY(k3&K#,W3!-_T3cTkmYp5)^gn",F&>hsYV"4qZGL.HXX91J`C7G':/)ADK/1g7TkWFu
%$C>%PUA3kie5/Xq`#2ZNdqTj/$<'skfp"?SItOWh+SFm`s"Gq>'I)jL2shH5E!fdtdK437>uC`"mUm.H92o's*[]Z<@78h#TLsL[
%'d0&;1%*"YIY:*ob9R]909Y>[++s_4L0r"V:!J,;!m!?#l.+;8U+#e^U7I$hI9%D7m!+o2<<7oS,iM.CBRmE&N0tl#5X^U%O>!2t
%Bs>kbk@CPA?<dDF^unUlQ?B[fO%P>c"ZTjKg6#D[DA%dq:#>pP"J9m8(53Z.$mRKTK?N](3Vm#YT.45-`jei_Kq#Y,Po`k##NjhY
%#JTP6AZ-4M9_chcZ[.ME1K5\BqHi'5KEaE8#`u'HlBIHM^^P4tP]Nh`3@/I4muA]-Cp@;`mle`/1Zl=g)ko@ZG`!3[;15c9,fGFs
%ZiC+rg#.tqkGnd9/BU=QLuIH5nB$C$/[ZFLhR$X/`H]fcjV+@.DDO]JM![N!8j#/S&N,Ni*+8g\-QM`O)i5J7m2SqgZ!spU;Gs/"
%V;u&6Y,GfaMVog3^@,Q-8#A8KHi+$1b7'pH[)RQV$)g.-8p@>;l7;m^KtiCho1K"QJorCn',GJVqJ8n.g-:'enDqQ)U`i8>hMA3>
%d88noccXh7(H$Y1gos95$nRhc.<WRm&Zd5a6MK`m9IIPi!91`2+=CHK,UJ1#7=Chg`SrrZ5R+(G.'`P^O2sN.`kYAAaJVBI=\YBF
%Q;HWsFkBn_1a6)j/V(o4[r@J'cU8,X9`m)in6X9nU)>C?,%GYoi.I.eC4_[qTTCk&$t-a2[RI%llK\fC(*/+em*(]!SpDeU.6%;m
%1pkD)ZO;(Zc_8%W:kVKYB/;-j!hD&WK!U`F&`Bo^7gc(\II?YgNp4@1aPM65D+lkJ<GJV?1=I!($@3Q3lcG3"qd^9sC7GQ_W?JO1
%=]&mL]Idc1C7HDPT!BD+FQ#l4=(e#h>"%@VfGd?i:DLn_%XP08i?IU)B1rE)BIK)J84(JQU^W<K<sF:=Gn$9EFS>#mF3'e^cXR1E
%d=T$RO@NJ=9Nr.B(j2YR/uDVXje24AG`LiP@B>^0XWJU>VPB@94@<*-#fi;JjEJUP\9*=2N^SdsQCGGql`3Ue5i-20be37adV#,H
%#2!?B]!OmA@:lh/#T("H\n+E)Kn_uAQHp^kJL""Bl'.,[-4Fh8IF`/Lp7!7cE(`_Wi)&I$2nV-O\c?T08L,gnqM=tWHJIa?CJ%kn
%a7--\p#R,!X5CYG!C0FSC];H`#a-k3d9HVAeI'(D;\_o5gm#\-9.>f9V,1K`6GJaOh+HX./[kB>g;hH?-Ir2QEghFJQIHKcLU)0*
%EpdML`%DY>8fCIkkHh']Me1AHdP`B?]NRFn'hWSA!(osmK9%Ps&RBOGlkaRndS@AL1,H9U[`k-l6XXFB1k@]2#2&.rX7D?3O0]>h
%$TB,NOuEL@?$B$Fn*4"<rR%J3k1oq3HLA4im*=3m[p6sk],eND3d/trcJ<ochTjqe*o!3#EG679D52$jFKL;+Pc1F\^d*>uGGtTZ
%pTk*ihEJ8W]?4%?EM/g//dXcqO_E+RQHg<k2.I5,rc,rf8C5]6Fr_u>C_CgT[\O-t>o<S[50=W#3WMNC/388'fKd<8b;L@N13SrL
%li./f+q>dF]I6+DF.Pa>L>!=$NcKuoP/(=\/&WU'A8I#'Chli=LhRlT3&/T:N10XKmf=<(>\o5),-@\RNsE,+mL[/`e56&TPsfkU
%'Pk5NGZ9sg>1NCphV3OpFJ5H1p17cr5P`jXe@"i"mqpd%c8AtkoSQKQRi!j*UL!+FntB%=IqKU#-&60A889YdYNaVZh:J-ZA7-Zp
%5\7F)l3YA5asG%"VB5V9/lBKN/riD3F03N31W+$,3agj3S+tNhb>%s&%pj.nDu4S(p>q$;n`?X]?>dnD$17]?[7.PX?=HqKp-#9W
%>]/Q(FBrd)PW1B:UWMpf^h&N4)Q!>lE/>7&FodYDD2R5Ah4&.c<K1ZlgR$ITLIL]Je`e/I@h[ARQsiFc!5uc)1K:'lW$S4IfW/GV
%/hUf"!+clgY]8A/f1Cp.X"U362;?nc0[2NC$;n:Kc+-fn^2en.rgW&(bIo)[=T4)7E#(g,@j()f=r15!nqL`O*q@,f#-EjCIPZ`!
%2MT[&ZA$=@[>"?(hqjg=q(dZIc^Vf3eJ-=/QVHGD:#U.joWX+DQq&u,W@C(l<.]]Tf$2(+N6cNLY>F4Q/ubob_6?uNYTVgSg$a8M
%IfY-ChlKF%(+*')`<\J#Y#cs>PV5$LKisA$Eluj5jBq-EE2FE*,kmj5TL_'*'d:oboJ#j1Q!QJA(+k'>;ko#"d-5_hG-.;%iLCBi
%_;`D>s6s>g?)^"qM^BZ7J*=p[IZPB@Di[;N7UTH?qIu[b..fRp>\_-l5.a1&j(6CiTSo;E&SnY'd$s3K/r\Io<*ZQFp=mFb/=`87
%])CdXj,VSZ>/jJ1)pb\#bRPQ0H8'jMo;Uk!N:6]CmFT*[<;\*okQCrn>Q]2QX0H,)]^c++4B<5CZ[sM<3cO!p090]:ibdr5^kG/1
%gk6,-cuUQZ>,qc0XthIBBd&'EP&?Nh6C*n0MAhoX?VY`T2lMa:*!D5dC3Xa(m>XTDaQF?gCf2?C7ubRJj!n8:N#d]G=Q7Z\^O;CD
%V,&;L%R;0C'rd3`6[?8Zl?S&W*F,-^iLJEWR%\,FLOj1Rn[HTd)Hsb(hBVp,.8q/]Ya7rVITFI\>S$ilaut5r0/N)t2$:,A'`0&&
%TrH8oaPk1>K[eSE$@nG>8G@G7h"=ogNu!WQ4@-LVE5us64(L[0J:_-^j)+SEWU)$;Q"1^\E*C()k%;V\Y@;rcR`?u`KV5L!SR:$I
%%tLm9-`s$basI"kBE-U,k3(Eo"S*j;>fcn$MP?**.JpdAIf`W-AFk+^XV('60+D=5-j<Lk5JfVK[j]R6^B48UrO!51>rH'p==7j0
%2gge.;%[?1Zl.^5.HP2TSA62`:kBpqJUZ^8&/JDl5BRj]?tM\E1BgG;dH?tWb,%[1Z\ljmbbs37(2f3N'=gmS*GR)FS)c4XfbM^m
%FAE'V7sE`>RPTf=A&#`<_tZ-GW)g39AJ-l#^>t\.?]#];<(Xd1gGq/P`D,N[G-?oq%N^6H5B!V\2<<TI\7Js;k0%kCa#WGJK.<%V
%/K<DX(WY-cntE<chSi/3'/JV9VBZ%TGOis8:;DIiPKP;@Vn8.XdT#S\IK-"n_oYauNk=+Hlh"U:H97:?36+cZ;JgRe\X0'$9,n[4
%W42uI"6P;U!.aPY/J&d>=+c<V`3W:tfm*X$]s@,-8iu+<VtNk'8A+B;q*UFo.Xf@WP#qBW),&Eh]1lj&*E=m//6`+]ZNlY<-I"hL
%#eX&\nWZP:gF*><biNPYS_Ih(;<;Lk\;?'Le7?_NLhP"agYZd,GoaVeT._/(FW=pV!;*H7etdR,Lp4sIV'*r65WCEZ:pt&l/$2<c
%8ceFKWejb/mn<c:j"l7^2lK5dI0.R79s\V)?o5tUmfMYnMNQ7H3T#`TeF9MF\p:ub,jQK9HB88>g?1-t3>(1]80pdp#-OX[@`<RY
%Z>kU@.q\2a1\QFbHbn53.LTkQmKZoqdR&2j@YtdiJoS(.m@Bni$e1,,K1Y1LjF6s>D>c\!0m=Q%5Ep$XNH]F33,]r*cTC2pZ:'/W
%(3k#E^R1a_[Zu0oe8LYhJt^&aV/7)$C)Q@H\60#oPSe8ZD&=g]$,n64)$Z"./3eGB2HCR"mCX;@fZpV?B=n\+,mT-bND'(#E`DCC
%hM/j>a*s:^nCiDr((SCU[pcL3^_L&-2@NWKDf%U@#)d:gdueIiJ/aca#qsb8AJHALBA6fC*R&@,gL.9Lm#K`<!L"nDO!isqST\*N
%qtjqES6%XA`V[P4=Fb!E(4@tK(3D_eXPUt5!qSdiH'`O?X]b(]!.5^jN6;jDqILWt;K]:+pkNj>FEiLmENjDiPl.`phCal6YP,l3
%_R!OP'ERs-NIQ0J6?jLI5T![(0`56X=V$>F\]E/SPu56cf9VREA:pjFk>^1Da8Ib@%K'bW\UH6;*D[FEQTb9Ed%rBrs(;So2"9tC
%;>=SkBIV61_$'t+"7E4F6Ues,P2X2Q9Vq>^@&%\3+<!\NS,o4;Q)X$Ybo`V6J-Sga:7AaQ\OoYl\IY=OP1$\+a%#5&0V)HoCGfHV
%=FET.5fQjl]8kT]q!0AtbMmSNY/?<\ChjCW)(8FL1)SV,C*P0c8su\]a[eVhQ9oh2#o4[J9-tr\?"uHKX>?`a)_b8i[#OMK[?sc0
%`tiGo??phB!7O-%Z%:r34-DDP,j2oq/GHHPUr7-nSR;?Y3/9Rn8jX#P36j&5XJP:?*]i;.l"Z(^"?lKacH'0=)]QufS`%5dcb!Ro
%A6)N*\tBEe;%c]"4iam2*Ej1-/`I_"PUc_:IcP3cXRcdfI8sI\*LncY034C"&PuWiMWhV"_J4N=<ss.NedWHZLHUS)8ACr*2/pa!
%g16<_aT%.hAmh1M]qnV1]u\iG\5%"\k-%n^1[9i$WX=8F9]D-IQqDTG,S=U773s_^'\bLQ($6W=IuB]`1fH1_@XGbMWijUD$Q+9f
%T`[Y\G]n*/+r,He/K_,593b)97hu_Js6;6Z!jImNV3I@D(T5L<&tR!0[%*jG@pJR$YfGA$+[lSea3j4]s7Fc`p?S=LlHPTa%0Yl@
%E-,$g7*;5A\pQGnenB'V'p.;hl]PLH-RRiSWf8I3+RPt"VQRKX/hQd$6V2$m8sJ,;eMAR&$7e2CmJSr>];r%GP!Ge*rbP8HTjLbC
%O//^VQ#2qi3q5strJ(oC;)\fH!o[L].k-6.>HFFu1L"e]!,=/U:\S8i^5mnV?VcI&m\76VP,@jkY6LGQem-ct$<R""A&V?f)Wl&!
%6scU`:N:#,[HH%P<t$R(p;RHjE*4cU$;EG6;Pg(6;+sdTVRq0phOc>f293-]etGj&-p74nJG9*4ro*'(c2rNb[J>Qc1Rr#DC79hB
%)&HmR.AP5.ITMij<%GqZQ2M/gbUij^.#Sl^GITI@WSfgN*\b'PEpm6.c//*Z96=<!2oE8<;/c+bRZlalPTFG:NohCHZS7gp1aPTB
%V`<W#ei2,n]7=g>jlCM$.E;E<*I]:9bb;%_G.[lpq^A-X-DQ.KFQmBPoGPP53*r$#\cYEb16:R"L"$-rXek/LpnnVeN+C0=Y$1!s
%G7h)\U!gh=FY\[k$J,I_kjMWHh`M?`/4+2ZC\fcH\>*Q@k`@3Q#3/1OXuF0N57d?,UPDoc.@\0>;P._c,0q3H9P"Mei5HjVo52WN
%k4gHXBIrJ<D#1!&llLJN<$RBC:6t)M<+@\GHf3]CDKKdDD]bj_e2U1KUSds@e$T,KC&/'1drQ+V<J;>e[_ug\@Il+g=FYN.VfR,0
%jeaP*^-k#H,eBT?Br^TX#a*].UYaO;PE$bH#^=&2)?7p3+Weo"jSQhcpjWW\`tsX)7Z$S"FYUI*T*M)CdcYI4?AX/1Oif":Xp0/s
%j,?gC+%2"oQC8=t%T.5qS+Q<]V%h4BAFq4NJ<]rEe,mcsY$r'S3",'Jn,ATY\=qs,T\1G+NTK$Tc6XHURb*Z8do:C!cS!Lt,XAb1
%WaHs#:[oe"a17)6Cp$PV-rgDE].ICVJQXIONY]Bib[7g_QBf.CY@f0krW(GRJb)fijZCg]hrm+0Oi\/ec!*VK9c>\>&>SF3*MOr'
%8g=\HK]V'*ZQ8\o_5JF\"4s`t8ZT/Ncdb_R[0e\f&U?#X^K]aLRSOD]-<7$'<NN$4>!KCloAc-0m!4CAUT9mjUM42V$*,=AWp86(
%\T-GJi#=%8L3g0=W#IpeQ!76ITkR0RT1_:Ed!!RSAf1VI-NJQA4]CR;Ko$,U67OI;kR)*9"ZdP^$7Z*lbpc;T<RV7P'gDmT[?dY%
%o5BNP:mQ1:%^eS:LQ#csVW&Zac>!B"$:q/&d3>4qEB)ATN.Ick+[VD-YsG`F1])r_?19JE'E]#Y[cJ2NkXI#d,[6169nkqrXP(.P
%=@,OIP*2<B`'gbdM(!;ghr2P^<6t5P'(OIo+ELki60):D2^9cEWiE<OF?faG;BM`C443W:%+_U\q"o9/WKk_Ur:,s(TAOg1gAU\Z
%GIf[0o:*/^RscA^A-,IgQP#@%@<?RK@1>m;QTt@&dEIG/[9_+VEE7t=S%et'Ro$jJ-`d](XF4USI/`!nWRp\i44O>([Cpn7G?3&$
%Xe&=,=3p&Fop"4rq>@qV;fA`"07RI(r5T=\bWp#32!$PZfX#`1A's9Irmsn6FOf2FAoSC=k9JY0polP<q2K\5BU+1)2D'9qe[%rH
%fO)MmX=HW`'FNlb+aHf`f8^B4Chq6Y,r_A=fck\`24\47ZdD02n2")PJ@2/A89&m_\3fKq@4LHE_R]AZRHV=&N.D2ePK==CO?7B8
%jnlU"&2Bm8rqLA)a16O#9LXh[[mLg1K9Z>C4$NXPDa%RP>ad_8a-7[gS_qcdNkXqsWaX>B_jA8>17TAB?VRB-l;r/j)ol1q`EKIq
%A;$<N#0cEh"1U.;"sYY5=+#cu6KH:/.*%s`b&P'^@u[:Ts0d7)=8Tp+hdP0toST%Rb/3RkRN4d=B/aOFP4/mGOE!BA:g1'4%]O(l
%!18p@Dpq]Yr8es;H;J;3N74u%`'9cRp&Fr[AM`jidL,eFhqC8=ma9WlM'"&Bf:0-Gru9&l35Vc7::;2*f'm[hG?rr#]]jDEIL*##
%dHR?t=9[jT6%(;i)^H.c-=\g2%g!bs8o8'3)?>Vl'YN+10?0]i251,ePn&C@X?0Yb2YIqoSdH_d3\X2+lLoUe^,FBlR:uE$r"!=!
%&$JRI.EM-GV/XZAE8%?:(I^Oo8Gk?2FI*1bTI%a+;;f6Y(/6!%EJR>Si-&8LpnmQEW#,sU4S!7`8)]pQm\Z2s`u@#GAfOtf2*NQB
%nf[*BlpGnAj&GlU2kA<?Gc,<TLg?U9,S@2\F#1cA<L$t9juML_97hN:+dt-BYL8d2rKDW]rs:Ae8c@fP;I4:P5O.N?WfU(=']rUW
%&"9Zl2+?=g:H=@O_<+75O>N4r/u;/hE"$/@[UFsS2TdNP2!;46+$&_GD]sp.MM'Dt!7?PYhmVkq69]<=;=?I5IF+m>RS%k\i?l]"
%rCaSWI\aU#[;JR]_ss;c/s%1J#"nfJD8HTEn^)g.H!TPCFS@0#U*MTX>7%7:ZD&b-pd,QX$B@t]r[15^67O4U+B/BGFHn+U7+[lT
%jWb$SaI#FG3#4C^GsOP!\s1Ct&f,c-M8"5h-c.hR.1XiR<a*T%&#p.;93HAR"hsQgE!4U#r!o/cXAOGo,WHA3d%p^k!P.q^gp'5U
%:N_9sAjiZ.:l0",h%!t@K*A!4EWdqlT26sg/hQnVL#*tP'oM+K/"d/1\j[(Ff.Y\i6NICell+]PPTWeY3oYKpM%,)3_,d(bSU?VR
%"kANYpMJ,VTo2k.0ufRDMm$9#eoq)PW(*@>?O,gAPt2Dt8QNs\#,Hdg\]HD+hkgU)ls:6BA,bXbcb7kT!\3@f/1eGCUn0_mP@O](
%,i-J-N6+rIh)uWS&SOHDmO<LhNdj6b:;\2b58XT:<%hr&<0mVs(_@,(AtgnDU]P!9_d3VT6s2[k\Z.qHY`]%N9>g).`aPEZo/mL/
%#f9SW0[rHpWlch>2l=Vt(Q8Q%163,69%EiQ866D-%id"EDJSC!oM_!FNb=L$UDe`[)J*)X;]#nAMF%#P[Vc'pL\c")Jf8tk"nXK9
%E2[C:r6;39QsoAM+lG10Ch,",n5-hh!EgklUHl*R4q`[NU'/:sD7J1%5iYQaHIq/<k!P"25f5Sc'I+/*E0"Xr!f4D]&q,U-S0CO/
%LttorWc5Z=-G"X!-7'+W!0XZ5Zma56MQp4MF(9C$j=jM;PRgb&']f_EA_P&T!4GbE*@,]"CN7G-P.'(+m@.O`i/"4!<5$G-9u?%$
%RM:Br%H6jm.i/:)'CR10M18P_njpbA'`l]S(B?,EXb(2L<`VVDO<kWA<QDuk!`sC5c>@&2bULe@U`U,@nZW*p!GM`5@Ad3lDWtkp
%k>77,'V#4rEu.`7%GI[fa)=k58i:<P^>$g"\FcOt7>NSp\3YK>_hT"h2sNu?otlumA\@de1/-XrEZFceVlCSb];8tVRY6'XeANf!
%mEBTF.UA@=LZT_X@otC[=9=]Ydk'98dV])AO@UZiL^HE0$M+p6(]b"E87pn)6ZqZ:4qNS5Zcu$?O;s9/;\rA4h,:a3V?g822UAiY
%<U[VEG:VQo0#_94@`"G`A-Luo5rt7/R*7Bq,)S]laNBjcdOYmYSBX3M8VA\\Zh+i4#pWj/11;TBOtZI7Akl6MgnYcWCqXO0R4o2j
%?mS\-03bq1p@oZ.P8iRjk26*Bhh73%.*0jb9-C.7'$nr\!Oa17UaY1VSq5nP_<#pjcS+1+W;^c]Sg7pKKZ@hl1sEF2N=+:8rBoK'
%d"t4:]<+PC+f\Dd*ij:bH(PisGupbi>`<,>^+[JPc`l7AMbuJd$@^kKUJfH2T!u\;:(4=]=H%0EqpUJNA(@1&U4i,?\$``!mC4NB
%Mik17SFZ8d<;oNPo$_V!#3iZO7j;)OHsD]I[Wnaa*;qd0`k<MnfpSI6Ut`BLD+U`Da1<qGfA:sd7K,:034V'60I@t*GE+N0LD5Z@
%4!!ra!eZ/9`8dhuOSJ8t:;G!2LVA3>C/TM0cU/BgN;V.d_DjnWo'L#Ja0+b%aXu13+uelY];tag\%VDi(?5e-[aLG"eNLn6deAhc
%UjX\K8L`'1]h<n<l$SDQ4%*N'S24B@IX#$l<VtnJ]"9?oV=%%bHOa9Hp,Z)0F6!bKGIJtUJtmmX+(!cJ]^DW2[se+*l\b9qN>_n=
%e0o[T8Prrp\gAk7"A%YU\iM<(.J`fQ8VPKM=o.pP$;e%oAIh(S;bp^tnokADhd-M2,J3R@eLf4U=7[It]XmTWh+M+i[C5jE'aH$p
%:&&?3bEaIhJ'pEF.d)Km9#2$tWH$)e;&lK(*qecQPV;+goX]f+^)PCQPft;eN]^W,!\W[0h(8s9/K4EZiRNq.lX'GbWkpAPl^u9$
%*EEn/e??sh+E<t^O!b4-2^N:p2^)X)DJfgf6J]@,MKDNE9PrR\;qXu.A,JBWI9BOrf2k2MD2\?[b!?cLK$7;<@3ho9]\Q.NY^[3+
%*%=8r:s<Tb]nsH_Lt_0@8>io3aJnUZ<Cr&R:#iRof=a*)o07ARr`$T$%r7==k[-BI;n*WC4reIGe:#:\5>rBKB$]op!qpfI`Z3\e
%/S,9F8+l7l(6(`@RRRIr\_rB#^<&;_Aqe(,XE"r>6M`_tn4DQg(plonNJn+d$\>g=%'IqdYXQ8_n<)_!Fn0g5kWqgberHUkaXofT
%i]1*?YcXR+S>[*5QA\@tDtSb3A([iCe(1b8p_X=q$M$du<3FS.W;l?uFVq-1U8o?e>i"t/kt1m6Mk@d4)8DjZ3$H*@#4lqL\QK]s
%KJ;tS+XQs0[puZ2QijOmE?4K5['+q.C3(VZZUPM\i:IIn]'e.RS<\;V40t(hK<"4FiB)\-h.bfOe*S&qhI:G9VRYi=]t`NK&8aED
%iqi'@de`q$fraF><YjjY@pQ."CRZ1;`d'Zs3@O?TTSj3GY`mi9.)<g`+ohlE31<i3pqU\B*8%h`Yc;)in]bTUXfsRHl,:kBe1=7M
%qH!:(WLgsb;\C<ZC!)[_gXn&klqr>PcPa#0:==OO-6[+Hp)AVOfu9^WPCRk&[ZJR_5NVBpJRaM)86nT)`8Wh8`+JZ%ZG0D$%A5#1
%/"6ZsdU6VfeE1mUHp[<5D9c76FViAFQ'8K)@+)$g6+8'5IB!I7E`7eR8ujlP^HHKSEsal.=R&2$JbDrX)l\/)pS%pn\A@<i_h$77
%,q\QV,X()bCbj_kD4mkffbLJ?WZ#]b\o_-`VAul"]%qli^&<$^_\'%$Og2s43Hp[+VR/G*E;n&iYC.3$Nn;MY:aTAVJ:CQS\bAGl
%W^2Xj!GdHS3C\MZJdXk>O>a/lN!<2#MQBVmM>sF_Ts[r3`,.HX]]0>*9nalIEe)gOTp37a/8!c*(b,+G&YTd$SO5?9kck$J/>=3N
%Z4L0SZo](IFamPs@B8U@9k8\^H[E&(Va0PZ']H\amp+,kXk-)^Ph@Eq7/eQ_A9P&RC=/V'Ne+Ts*DTii@'9"r*^3$6'[kO%.W-EW
%'/RqeV0jB]]&t)@@#=T9jST/#/G0^(:CDn(C>3F'(C(JFBo\3'Lm5?]+>,)D*dt!>SFgc-FU80Y@IMU3+uTS)d"e($3hs9N'o-.N
%6j.G5b$t-^8l8PN7-]l+g@s%)J,D)Vqu?>u9gJ`)@0=fgg'L)$fiX7uF'@*G>u<nO"*'UENO6B[ICn%AdC`=^dfB<t%rp4pRI@>s
%?/nYh^UrND[DoQG:k5]0q-Tl8-N/;8E-MIRqQRUYHo^Ltq!Duq3CO(Pm6Yqj[+)s3(QbWgB^0U3:,5Xk@bL&tHr.">Xt<BG)*!V\
%Rd?DC4H;34TR"(.]cFU#eYlE`0t_\"D6VHR[T=JLX4r3".)ZT;Q.`TCmD<Gj^sN<Xjm.(/UNQX>I*;hiF)1-th=E%_:HntJ,F,1Y
%&WrU^j*/+4`pXA,;<2\=6UaG[c1'r#97lNWLk/E`]pT<&n1=Y[*VF]JdAa#b+1DPrp4VgnQo7@UUN2j]-#gnN>6dfKMlkhOMqmWM
%r4H(\(N5%R7?=hRhX$<<503'O<)m'=j.dpmebAIXUJlOi`QDZd/dFmsN,0oLj\qWcFZ[)k#[:$<Z)$/b@=&6@Ha9_(7P,2Y$,SG$
%TamWdUUh(6AjkP4Cf<ia!`[9oZ&$PMncB3$1+5Zs!,.54aAXdRl$M3@hL:;R.M_TW>?>to<Ha%,pDM1KTsR!Q"r8Z:$f544_K0c>
%+"+g74h$Mo^TNW'd2H9!52/6Q`bf7N7b$%7)F6"s%p+^seu+nCYPEFlgFqGmYK%#T8R'0VXln!gRf;&?>&lFS_&EBEs'B%kU?_`5
%35L)R\Gpmrs5Dpc\'G$PSUp<>6*$)a#Bj;Z(*%]&%a\)%:9M7)E?:ul1;%NV9!LC2?TZfsU\h^Z`1RJrP/>XZ0.k4H+G.;8jn"Na
%\*nL-Mj'7>M@t`ngA^SMb#qC`YkN7fjqVOYZ.c[R"ZN^U[H;T+dHZr'EKV14,+J7g94Mj:B`#%`J%WD`S,0hUgoS_Ls/A96LRPS;
%FP1]D9p<O"k!f!h6CO@DL9lDA&bS"$1=*)AZ[EfjglP'Q@s]oJ,/bXBAVVXP'uO+ZPfd8G`iT]'lZZ;%j`h[(_t*5qKZX`6S97CD
%JX:Js%qUL+B-B>4\90^$SV#$M3^kk\<JVJ)nVg-rRO="oFY/uWp:WfSBTN%t\ejOGO-c,Vr<c<cnBB(@9)PU!B0!$hdBl3_O!^P&
%LkDHd)Oq!-JM_gf8eDA3nSUk&W#l$h:&[uHS3-n>41UDR@!!n&cC$=AhaA&SXCJE&<2K0]#dhfJ:3a^"!dHc8W:SBlghAPX'G*c]
%ei`X:_*,$$D95X6F@"4KX9KtY%uqch3aBMoAefg,fo_fg`Z"p@R]<`u&O@ip#*!LKZbu=#V#YMcqHJ$E2C67hnd>n9LU8,nO)h.b
%M'*H(j:%bnPh[jJEQgSlV]V)j4_+#J(1WJAMXSi@JYF4#G^j+LjR@I4SQJn-MC"d2F3--BqBSCW$#dumPjf(cKflq!e>7\PF=AQN
%QhHMo.t9AjMXR/DmV)"@PY-<DiU7Y$)p&Xe(sYZf,]]6;Lu0i-NTBq)"!COmV/kch@X5AdVE9hm$<EhAI^X>cD*cfLAY6!%KlDQR
%7('L;\dTRb7@uhi'C&o<8RY\"Z'Pfg[r`2W0EKf)#bl$RVqi9JLtC/K3P4Cf^[9?!>IW_qRhhbSH6tVJnuP[O,.LOpiX$e)nNnpq
%2g<4u5ftH)lb`][Z%gj,!$OC,^CS[,4V,o*4qH#+h?IYCj>K982'3#N>5nERr`n.2IBmiM,ZLe_5WS1cCU`=-]>dL=!sQL03++Qa
%VJ9DR5"dhKoL0<HC?<7k):Bu_Ce8&$'%!?;YpI8Jr&d"QI<tm=83ak+PC&Z@m.fU`?\@)0Xs>llZ$S1R5"W`VLaF&BY%VA>jpMR%
%gdLdb"SO>AJ1^_9kqo"/QATb03#1tCB8P?:(VWF)5>1*#2s8<^"qb7gnQTKi'[(/K4J\U/p:,Gddeb`:8)B3VVmiE<9@+@E@\'fr
%nn@pF/X#rq<uJ@%Un=9UPBDu"arYK28P+aSUZa!=lt#!WV<s[tLt(35IWeAXcT0m2IpFnp:!5d"'289Fd8>\ea+5_3aa"N[CiU<V
%6i,KNm55(6#,P<CCk=2LZ6o<8[+*<'1+:s)iXrufekMl%.&P^fnFPB=H%mIX3=L+UCT1E-g=)NU>9g:NhairjSh6370fR?p4ea&9
%N*^u(+uiBup=uZ,:"frZA`4.4!YdhO88QOe29s*=1$n6W^_Q[WK%XJ?q;6kD+aBHdF^l6>XUt>J.t@7tAJ>!sV+6Up5Mko*oqb`*
%62&[Ujh,J,)VMs('9L4ZE[[6A[LPO)Aj9HL&ri_:hi5u<EcK:CVSP,hT:7PWjZ62cQe1XPT,/+pd=Md,],E.o<`l:1`D`sDTjp/N
%NX+]uW,%,'hlX^cVqFM17SVgP+,(#ON"<i*k-^ggF'*nN(h'k>0peiOAs[r=aaEe6J3Km(+OS9A=(F)%K:6?N#RI7FN+T/<Bq?jg
%QQj/8<b9-c(4,MH>Z-N9>l*mXb23m7r%eHGs0rn;^dFQD0O?j4pNK2errlQlILRDZa'CS_',;3t`32?h%V)J\VKBgd0kL*$^oCrQ
%,qQZEj`KF0q;Sf`/%SM%F?BnK.ect6)(pF'cN&H#MD"*i:i25s9MS$=70)G$)+874e!#/si2s?c.6oFMDCDdnBV1Z)%KQ`%017JF
%\Am.aem-$u#.eT1T:Hd/?P@f;XM#S7?,Te"^PZ8P4c:*>+jEDRBQ5tA;?supWsD\Z2Hc/DkP329<5o]J9^EOWC=a^l,5sXA:iXED
%.S1s*H=,_uY9]2^F\t(1B-&DB@lB"eVB8hgC4(-2BV7=,)>GMQ'L8k,EN^10UA1esK14L*iXZ%T.Idu&?i5dbKEq&;88Z7rb/;EI
%6<4#>'^]KL4R>)\]'P=cQDTb:J3/[FXHkLQ"q?V23g,`&i!hU[*KK-jOk%6.Uj[Y/+qMD1gn"`R&B;ou$noq$/(R_^$VoFV1lu-;
%F!E1V>..6fXcQKl#`TP7p%ZHkB8)VcU%/AI398&^!HpM&:4$a#"u"??3_OiW#B41V\&eXnl>Y05T]C4uML$#T,dq8lP,f5BP]Fn8
%G)01jH]Y7G0LO>;Apioe"gWFh^T*s<2Bl^J5oNLt;X"5W2IU)PBC?*Ca(('9Hjbo-iR6O!i7>rgPq3hK;IAO[:hW]W!u$T*=gTAh
%c^N,7De.,6MW1ceaYGB*:/N7IDc,_nG3&5d_fJ4?gcS![h"B?CGWdM-m:'rKH_I8$M"PiuflNs5M6<AYm$rX9.$13#.nRiKP0/gl
%f:FQs1;V]PZE\\+d+>fMXi%AuJ\Gf@^gtQdX\<\X(_.1+VA2Mko$=F_1m<FWIGD`OR(+FGBl=JX4P\o%_!Bg[7o()PQDuYf.hN^2
%Z*A=^,UgS_X;_[u2YVeRR%:b"9H*Ql^6g4_0*sHLf^>H%ZA['3QPcGq5K+8&SE%305[J$$BW$c;R#VlmVi5Fh?5n9:/Jjj"D5i:r
%H_(jTS4J-m&`/5,Oah_!(@K]D+&<*\,k=Yuf\o!;<YDP.&U"-V/7))<ae&gobf+[@VmWn(c&p6RdZ6^8ZuXLr;0,O&mG/L:qJOn?
%mG4k$?iDA8"^@pDq0TW,jj;k>ntsOC;M(f7[9ge)+8QS+`2ltV+psuh]:^'rr7@AN_-Jpthda?W;R>O?a\-m==MiVOZ1<9_S52=D
%P[6)H'l,^rk5jT&fUB<Wk4M%=.XE;,\"'*2-O&gYPe^3kGq\-a/hh4lBLQGE@"hu[l?ifi/fn8uD@2V>ibauk'qkfaJ3&QjN\.nO
%+#ZmXVU\:T0_tPkl?,agP&mK!m-L@[$`J2I4^G\MKH"iR[<DS_mJbHErMCf+RG91Qe%bgAO%O'_p/Wu_=(+A,*\fh"-SZ+7&]gW?
%la&7&-h>Mg:QVbEItDc@@nW(GNH@$E.PY5EAUT/h!!63:@G=V0NufseRBHVZB%_U]^q,+97Sd9IfmK('<?Yi`=fI;-WWJCD#:?&i
%`u"=%oVuG+D)C;URo1;3_g*`P@/*P)N*+MBK/\r4nAp0-4NSh6=*T_8LHg:SS;p>B_7KL>4mT-GVd!69jfQtSoELdnf-m[j#+*a%
%0m1&><c9lNG*oE"o+pSC8MId4VHKoF7&iu]@UI23M&T_nae'Sj7+Wn+$(R*Uqrh+i*Qmpi-.%5[omW&T$S(@doW%R!<c0@u_/N`1
%NAJ4VJZFGD8\nWW=;l4G]#_URD6I0+8(4s6Q+cm19ot]sOgs*KPJ>]*kAduaj">2>e&Ad=CQ^g%OHdOCP=^tIFZlVp_)U$"?R;J.
%eD7\R(.U1=PNZ,Tq?d@F$!X^Zi/VQP++7qfs$m26[!@"=qWQOe;oI30OPq&(ei"13#N\a'b^G60^u#tjFnbt!3i4H:[%cKF&<4?u
%NT1o_#JkE94,2?LdcS/SGIopb.*G\X*$Sg"f"K1@*9ST+=$O;"WhSP/K\HH-DkB&Ur8])&`\KrL;G94d`P6QmAF62&VNuZ^4e'\+
%Tt@2q7cm%ET#XfR]*]'*Jn4'A,2?[S8"TFN4thQW]<Hbt8G,@Gcd_nN)2g#)H3K^4Mbj[b):+XbG[*rN`o3_NjR5j1REC<h'%3TA
%Mh=9ND^is^V5<Hp#+T32!"NF,Le@oa<"@X.!B);&<@(:rF=%k7b`Jn0ar^>&[?$f%HOV2D^c5p(8?*b4Tt'SZ89_<YN:k@,D?Y.,
%Eg7mE`[\dIZ%8!g4^$F%_nZ[SYAcBChIBL^eO:L$Gn^8\1mj".$\:NOH2YW0XKAC^C._%?WeW:g!28f)i&III3^j#R"o*_+\-"*V
%H.\a[L8OgAJ*iIt0ZKab-*SG&2>g`-54[BJQ'1#)mDMu?OAbm?;pk=i2hTFpQc40*?GWQj<8.@L5N!(Dh\,b+!\5RG6q[#O98c-A
%K&abq;8p<Ff0J"fI?S^F7(g`O*BhQlE;%BsA5L)Sl.ZDfUTd0Y/d4LA@rIro:R".b.2J4a;rL%Yk)EiO_L]X4XjX.8QhT@5%X(U#
%=_oAE(AZYFhFA;o.P-g#E:F4U]^B62mI&Y_+c*4^569?V:l&RUGa7=1)\1'lUDV7nkY"R1q(/<E6`'@L>+dgWfKQ;GK"=5JN^Ee=
%5X"@F6mVf5Q^Ue4L=sY5Pu?jJ/Cr:',qgKuh;[De%71AJnkj\B"(LI*`/obDoQ^uc`7<f)%V.#eS5a5N.6H[uZZK*sg?5OPJ3V(^
%'07G+`#0gP+3&&VpJ6GjYanr0as<egV=*?n6hQM2K;ttM'eM9Ec*\+6U,0Ndcl"!oIu5uf6W/)hbuR)7ZhUBL,TWb**l(*7ZrHcU
%2GtA6)67#p<jERlRU/r(-k:sDS"0tGQ)g6lG<oH7LoRM/V!OYud;*4q,8KDL,3_ZE\:*3Bc1YTD>$O]__4lGoTIs(5ObS/*&PISK
%_qZ^tBcKsTE(PpU7FbI;,q6"q6KJeS-n+<;Akco2V*I+B%Ufm]1,jDW12FFr8'*A%(E4<V!f!ommoJee?$+;eShr(-U)_m1e5q\N
%41;-ZU`-6urB*&]G#"U2N]c'pGB07Vi?0LkZKED\AO5gfFXJjV("'a(N6'FGnoM&g'Q^dJ]W.;o9+DBN:+UNWCBdT`h\&)uc'P@Y
%^b)41=(Pq,S)l40n4!ap[O>8m3^'3j'1CX1-&&4aJ.k?Ek)dQb&JKs9jb1K':p7F4E<+3@U4;P9QP,=pm#RgDMds5;ZPdI.nhAol
%)MX]GJ).[n%kVina[[EL@&V$l)9@]a)YZUcs8(#+r)H8Y2tA;ERDm9jo>"c9T)M$(_Br>^((A3P-q.[1ab^5X68NF#jsJ7L@U'2`
%pJ!8tp<#g$j8aFf^:*:t02V25F,MiPd$.As.Zf*MFeJ%/)nsH<W/'l()_dDpK8a>cBi"u[?.p;IlRLB0k$LtgV,"(RBAR@Z8^<R'
%qdT98,46^j=\u-;[YGms&:JOW;D.S*LG(g&apm73_D`#1J%MD3iIEPjM3J$m8L9][WUHL9Oi[JtmE^(:96Iu'M0`RdIC4/XTE>60
%<rmTa9WnOp.HjI`H_bhKS0O:/`l4:Q/O%bf`KshXf1gY8.U"<XS/R+9V[Op'&jE=]9c%f`[9Zn!+TDqBLCts:cCIV4j$Gb;3N)r]
%Gek8E/jdjX)D[`"bUV!tS`IYgW(soX)j5TI**``hQ,kF$!IG`$*9*,KJL7Pb4g;+s#P7-Q_%L^?BmK,&`7<NnnnX+RCWlI7B@^+F
%(d6+URJHMeMQg0BnN97)fXOG4.Dkbd)&dEl"=Aps5G"bYR^DoR6b#?ZH(H0o;d/uV6R9R6oO3Jn+djtZ0gd.+>#/(M,>G>PV^Zp0
%br<a#hamBd2Ls)%&Adr&"-(_Td<L_]?a$+=cW0;99m[jA,liGBOE8EgIL]l(kbj2Ga]PVYenDpdF(J?,DS-^Dm3*nHCWJ)3XpX)(
%=m<D>%1RAdLlt)7Pap:-*b6aOF!QqO>-&ao%<]-JB\h0h6gUbkS.W?tfn%VdjcGBMNrjsi\Z9]R=@U=,WpTlD^?>P5&?J<8`Q^N"
%&VGr5VNkLpjt&@Jdogr+DhS4FNkgfPYXJH-1#_&<<G72._Z@+)H%n*]n:>X#8<%8U=3q-FmX^_8b#Js55&iXVY<.VKEOl`)4Gr@<
%g@atRO4QYr+rO"7V!!M@/sM.Yr+']9=(^-n8mH+1mPYTD0K,3T`+;20-NZbbL'.VGYh+>RqO[`GcXQ/:D=8&G>?:Q>jfAW>73d2?
%7s.ZpK/fhE.t^02:;2W^fcVk(1ta"]F5H(/$IN`o(KhZ/7\NYiM=o;:V<VkOQm:dI*Kc(*>`L0LSoRagIh7q\5BQ)l#sdG^Ff1^l
%P;f7*R\P.lIZ>lBZe`Tu9^%5s2GW_\m^a8hm2K:Ga!&J*!R*<H>[7;!.Hr_SFTP+DRNWHZ`h%^$N4\kL@3/b)FC%5bj%_RCr;'a3
%8m!$p:>;!2AJ.eFDK#(FaVecD7sUMS<nd=."_U'_a!jQ_'C^d[#&fI+T24F<>b^@5-E0;K/SPcY0@O\ZWlG^G$lBeT:dPe3o3N-Y
%nO#T\IC=5%+!FM_GMq"mG^^Nj=JE@4XBQ0tl<!65OKK30PdlJ5,<i%4c4*F8j'n/[hZKpX0B.1m#00XWKim)-EJ39o=KsIgeKqm=
%fVc3rpg"+U#\U!a5G\?Oh43$j?l<LY`ui&&hmJADi8Yobko*\k>2Q>MbI6Y+ND,h@Z#L@<:O9;O1ema?^jCe\;_E/*?#F$e:jS\-
%St*n;QakR<m&[?or"*+,9HI3iE^?O<b#`VV2G,oJ,RknV3`-D4-l65"7/SkN5U2?/.DiQg]#j</?Aj\h-EHHQc?:]f\94#90:Hs[
%5b+73O'>F<*+,97,=M?(Ql.fq*gBj3j7l9Fq5<S&B!\j-W`W+Qa"><&/-"%oFmKtiJB%doViBZhat'nT`Mn324XR[r;!1$We:"eS
%9;ndh6+RTun#AEkD?ue#&ZJArkL_$nM<IM%3/ai(am<e=Gq[(&d+MPPL^l640p?)sYYKj^HGt[`<^i"2i`04jC?Bb';.k\5$1EQ9
%p)Yrkf.m32oD=F$P6FGf;;4-AB:dNte1p&7j&H]'Cd6o9!TRMY70;44da#JFKn%N-DbVV```R4LVs:0N-R*H;U@s49B+<LY,G9BO
%,qK>Y,\Gul'Q'I_K]1F#LjC=.hg#nOZa(I'44ljGg=S,r\mj#m?@2S2=,ubDcl<#?S,Rr9mY>0F2uCTpPB(!eVq`Srr\948!rtW@
%or/AYlfDF<Oc0.%Y?/WeFf^L[OO3-oP:g]mMG*a?/u44'k_d\^cW`Fp88g0V&#07ihgBb+gkB4ucm!APi9+>:q&qdp!G?"o^-2<n
%G^DCWIJGir;?H'sIud_">Ts;u4S01K^&E?W^%Cuu<14i_S;DI!WEPh`@UT^OOp[/8]H[Ff71eq4/.&j'Ak<>5\.>15(?ucmfd/aF
%MD8t:f-1V-[13nIi,?:85JH]\^mMi?Md]$QjGH)"Odqmc9S-;M!09d[cYX:Ohk;+.7Z,?1\EW^ADhtS55M"f*Hh`-K?:iXpOH&0L
%M,%626d/d2q(AcpZ4n,K4PoR6H@NhL?-;ct]S,$pcSHT,G`:hKDW:O`*q+>,IIl]=#(LrU5#">LB7QZh<"0Vt-"Z;)cGl!ri8V[L
%s)Agh+b%)ac[2A[SYr;2b1P0Z?)gN`J8NFVh0N($@WkJEMBJC;F,2aO9pgQBXfSn$ZXMp]aa-hkQgTQ%gmmQ+is*Us%+f#60rk"F
%%'8.Y0O<3FSg@6b)c,dOUH!bEfdpC)`_?UmXGYW9KkQRDH.jG2^*o]C*%R[a?+,f$Z.%<'WmnY^`s&u$/sZRK>Ll;bp%le-W1u4A
%d%#)?4k,j-E*aE"Mfde_McAE^D&!W/R!]fOH/EI3EorDihMsi^W5/2Z;_9Sj!4_CH@F=:n3<5`#[Jb$`qYSqqRDb`(@=Nk5;tqR?
%,<A:T.4_;2jG6kXnoWqu3IE?R]G:a)PE\[]hB&AFPcGP`+UnkZ+STBchj!4(Bf[(u6$*NnHA#.`3i*WMAOZ7Rq8B(<nsXQZg2FJI
%X.WQ5k]MPnKYfI!7+k\$H6L4U$DOM?bXLP_ZSKj02[)S_4/3Oi_g)]8@20M4pHI0Ud@IM;FX,WLBn9ER2i@(5`GZ^K`&4<(`2aA:
%!MKlhSV6c:1]Rq[IcJTorn;Y3*F?ZX&#k3*>qJ)%U_r:K1![(_'TYbd3,?nf*o)1,RC*SaV[eWL3DXMhUTCst!M.B9?fj45;Ogq.
%GYMg<P2CbJCD9:%.4j`ZECA'<(P,1N(JHF9Rj`IJW>=XF&">$;I-!C(Cm@Y:4">!@b(?>9KHX>1UcPDYb@+L7:doNl(`#g\s%4O5
%P\c"T?qKGd8./G%Q1UdoVL#PgTkp_1Q^I<D<F!<`.B-73EYXfeD2i_C"0,8G[BL7N']70hUEQI]g<]Kk6gAM7.\_nm'VHU?P>X2=
%R0TVjHgK7&EU'JP!)_@<ZZU#+dV3)CnLRaRZCO0`3iMd8V:<SV)O)q28e`2OTVV$#.8&=Qd;Ce85J'5I%r]f96psQr5"MY%'n%t4
%5"RM(<mD7Bg)0^.K#d57k>4OQ'Ndjabq0N"]3a'#g<9CBql>A7E/ERj)HbJp"Qj<Y?+SJ_b=;u:'hn)>(ApgMV,o9JXt6fC">=_c
%i_Aj'e#o=kkL\+QN!OZ'N]6[tlMA)gb"+eO&$N-"Y9/qGp"0/[A$8rdY84PE_Y1)Hr5#$&J5eU#n'GLma6LtI)b3q<e2m(oKfS`(
%GueRK0nj<YA$:dII)](+_ne`\G1IAU",AE#6WX2DZo6[V-:Ng#<\>#i8um3JYgk3mb-aisZ7_<FkBPeWX5!jlPp:[cgGm&AYZf_\
%<8B[5pkk)6V;Q[%O>[Y_AS_X2R)]_(=GWu$Ag4?mLA_^\hVQ+0L],%$?E3mdWm$e9njj0m5uYH7a%m5e0!4O%j^'eLqiiahFu\!j
%'P9fFZ:b(bEeQ4OP7"!$;QANn24'#p-,1a54=!k`P>Aq4.]&Ac,8<^ECJ11a=2gA&ii<sQ*&HFcZB^[>1IOf;"<+kAM\V08e`_dm
%T>#sj3W1M#lL#b&53%DgPEK]Ye],2aIF[/BXH[88Hsd:MCU-Z:[!h\k=CMAK.a:!*WUSk5)2(P?)<'k-qVeCP18;E4>5R*S@%`#?
%(?p\c=d@^5.,Dpj/>[/ao-p<?N9M6QXfXQm-C9E>TajL3aD+8UfX*nsRt@Tdof$[Ke+4T!YH6gFM#sElp<CIaD^HC7-F3tDYR5Y`
%<,FOa/7-EMhM@%/G3W/e-*^<;G"5paF>O?(YReBY@e64)H&95S=f",VWZ\%+_UeImoJTEeDc_],@mfG3\o"YJ3Fh64j:m*NR?O/o
%UW3,]=MYab3u@\C]jB^XEND-C7)]'cJ5?&CiUQ4-Nr7P=TsV`fhCce-`G&=aQ(T<o,\nIXaJn<E'8>DAqWt-;SHjEL&[b+;fNN!,
%;$eJ%i*hJG*YAKaaN$EOPenP23jYr(W_BF1XoXA_h'NjOb")(V=.(ss07#W1=,TZr@LoI0\_>oKkMNNlPQ87ZaL:Q%go=B_.gf.N
%((l[%m4V=Q>=/VPI`Tnn`YK:^qCGk1l9pX2hKc(a2Jiq./cfsIi&ouahSla2%7uUO=19if&u&l&>sXRY(QPKsCfZ$f/WUpa]a:Nr
%ThF<hMb3't?Cf4a*+B6UOsV-D-J-L^<S")ZCcUUb>"H7e_V>-"e>odH3Zn4(1f)P6>NK_B*NF0lEMTP:H1Ta>G(lr=UcSND`9CN9
%:!TL)U3,g'?_)/0E1>R#/mV:FW\de_'R_l/WQq#')SW\S\Y(h8jBM\O.c=@"#Ln*j.hP@U)Aja<nA5D0+I*C"p4cST8EGPMZ2J5d
%ejm&;YTkto!Jku1X*F@WS3Ya6?':)V)sKZ^Wm#s>,U%pCQ'R>PXtFSn6>=4)7Jb]cSof`S8oB*?2V6GYL94W'N&2gIG]`f"./oEt
%e%*-SWdc3>o"ftP^E2Vr[S)+mcCRA>h5)jLkfC=Jg\VL?&L?>o;KD3kJbJjH^[$G?gRsY`qEX6k2-aeWmQYiXMQ*uh\r'Qa,loWm
%m2N&JVLuV\n.9;lUf;dedQrY]S>RJ21K[:l`1;X1>/estW%b4OUTcZ]'oG^4T:5'RQ"t:T+o7K5[3D\Y/>t#-\Nm[(kU*GI-?WEL
%l"<YU+XB,AHY>Zp#j)D3L6[W'f*$,*`"bpnY2mf$hI6<aS>8cCb$iXo,)Jl28fYKX=V7C1nNr?:jmYeKBKk9r/=dQIXP>N.Z7;A$
%re"J3Y)i3)"YU?]mXR=.L?B7&NqWEbP?3l,4oc!ZA0eW2k-A]XD,B?33X&/SV1)To:9,IBQY?2iqBgg`?MIUlJTFe[+1+fYISh_5
%cQC^&e$F"&W-!'`eBd)%de3(6U,+lTjkJ4E3>2=bMK<fPFrm&7VGdLaA-]#I([`]G('DMb\gb;-A\^0U8C%Z1F&YcM@7[)o;XK6q
%q&GhJi`eZ8edHS_8r?8V,_'P[B=eGB8u*;"^SMpYW#k("?9eT]POm9,UnUn9C+e:m]PVjdZ9W$8oj?r0ZeS(8<Kl3T^0<6u.On%i
%!_.29Ufo'Q&]j"A\YpXQj!ir6\&SXfWI.Te;/N?trG^G"om#M(hgXBR>#jIs;4u9K?sA$gW=D%U+CQ)h@T$0fY,WABNOP64d[j`'
%5aP*Fp$%5GLphVZ*MR&q0'U"3TpFfc5,F%%NjHH8VR)#CWU*N-jg$d7-hfV`Q^3Y)lB0j)TM9,c\F!IX)ZN8-AdM>:3o?W.$77:"
%>\Z-ff"M5M8kE^ME$Vh`a#7roU`FL6/:I)6Vn0dqJ0-4_U$GI<.1K\F/"<4`J"WD@fUlH#1"p@X;a#ig2(?O;)*C;A<<\j1'pRK1
%5(G,oKij4q/(ck<PXR4P^p4[.>M4<U"ULY!9f!)QD(<<j1sd\hds6G4NL/btjn8=<?I'MoY<;!NA;=`[^ahnf#!V4k2T\]e8E%9.
%"')8i:i\Zk9=tgU!<kqY$*D.*1R,"6oVecq))>I.7)R1\?Cg4Um@Yi-%S!Z1h"c\BDm??SkQu5sK_21B`qSqe"bPHJ6l"]I3Nd>P
%i`T:gQRhWM`)<bda29Gp8.X>';$l9R6uKIkYqYk1=i#t<atm9CIJXr9o5fE5C#rX">klGG=J72mK,ua9":dPG25:4H>T3YM32"kl
%oYq7!$]=s\qOL9\5YfCp>.pF7,Z9oST[$Ch:I5S/Sqh\$_XKKcTqjm/0SU<gi+u#sj\,qF=FpV[KtNVU)Z/NX^[#])i_r@f$3@QM
%*lF"u-=fRERq#LG&saTrXn[8=Tc!*qRb[<,-A.g%9s]"&JO>FS.q?Q<UoaP8W$)D6b4mc3+hWcn-FrWPl9VNqqW5SVG>6h^EO8dY
%dgmf7"cpi&W[aGbCPtdf&i_rAiM=kf^>c390-ai<-mP>WVD\8%985/gD)B\`po4@El$\>pb+RP@Hhj%X&>s'$F[HW^_,dY7C(!Ah
%!.;/ai8>;h5qjSmM>t-Q)'ap0_EBBqL*jPg634LSCLcoi,M,t0MBq[Y'ln"Z2IT%0@3M]KOa&Nm#J"R@=X'0[2d'`seY"HX>KDG/
%-W=\^Y<#a;,"a8uO3\uX-ueIr-/D[l0uW5q3;-I4Cp9r6ZoHkLV>C[O`m2USVaf'*leh?M>U*lWhR22@+Mr>&KnpP1Di4Z+g/3cS
%Ki0fKNGte\?dJi@;1sd8?e&8?^lYK,dHp(SM<N$`<i0k(&0^*kfT`4a6qi6(R3eOE;&?H:#F4NZLNb$s.[Yg]bD\Y@\sd[)fd(cG
%"[UGU8OS*"E9H3i),'$08jcV;1YU>V!>L]mrSPT(*+?Z""7Z&o#2ns:nT(u9IXc/5rI3FLl,.:llotlcS0SeM893Gi@C.LZ+'"G!
%ea]/&k4Kknnm^,I$(GhFg2rZQ=+A/aqj'Z0hHG$m1;UtS/@n&ad#IK5FSXI[.t?'AlT]:6p&Dl5?2c,S?26kMh"^9-3N$>?./agn
%U-0`?cK?($S0ELYY,bsEEu"U]:I4g?.DWWh!lVK4kG^;7RKHtp@ElQ3R=sUlKDE<T6.14)EmI$(a.*(A7R-qHF%PcED!'@ePZ%[n
%p@VQ\%#.Ve`>X:m0P?"A7Lm5=eQ+U5!2iQrQUM6q'Fb)LmMe']`or:O(T"ih5bZW;4;lU;iM$ge45K'27Kgha#ME8@">,2AdcQ^=
%Ck.kDHk&U?0diKGMjWqCcR#Hk"6VAtfTq59MSL3&3q/%%T"=Jd+r-f7X\l0b/(dO'TV%NF[HJ_DT&RQGnD,4CD'N<#7,6;:l<`i$
%:nklc1k5&BUnm&30f61X5E$"AF<:_L@rFU3,'jk;EE<]c?mS\Anb#IG=B&^mefm7d#k;VTnXMP@]1C>-YSeK[3U)H!kAH?M._a_'
%ndt3>k`%7Dcd,LOKoOu-+2N4Ms3m`#>86*8/`4uq%7M):a)Al%5OpjETAGUg?FigmX=RAFG<p^Sh_co@+L8]M#]U(LA4;'p/s*NG
%flQke_6WPfVRGknRaesDh.r--/h9M;e;DB_Ar!gr62FQ..OE'>*b=Mceo*YkP=JV)FG#PLor2legG!<"ap2.6=u^F2h<ce0=tM;#
%YR#2*>:kruW+70Fm=cs3+b*XC=N[GJ!A*^@hU_C+KG/RO;Il#2).>U.@DsE/TLgiSfdJ(E[kAtOX%6>X&#=YTfoGMH+6LQJ'`V!H
%[>H6Um.._UjDh04lt5uE$Ud!cgmIE4%5b`VUhFK3Q.*F%Ms<A.7Nft3j`hh30-qZFF'Kd<6[9b1jtrsUG'oJ#*!7qBe<PJcV;ibY
%lTndliU.(B9du^.1#O-X==UKpIYDA/>?q(0(@\,JDpj'nFR_<_qh`dkkPG"m!Mn:k3S0*TP+KHa*[cu&o##aZ5b6BM[Sk(ch[%dt
%Zt`NScE&,;l>&VuH/<Ynm]MUV(89[!+#r20k+$;oc6*_pkT:9SY"(:Mqh[\RS0>qU'1Y-ZbRZ(]Wm,W_\kX4s?/ZUU:E8lfQgPrV
%_;W+8T#RWF[e8\-I-C#P4*%Pq_;fi*EZWZp2!EM(Nt[.:eF7At#7g-&8FG`X;+=utG:@]=d<5-Y`(b>Pk&7&fT;?NCgci#>N*C)c
%#L9++pB,&Pn2bH)6aMiCf?sHeFpt"')sSMcC*/J*m?N&=2kW.3XcIkb!&j!jlg;2"8eirPj+c:.eF)K/an[E&I6)9H&?n+f3cA-i
%A"QabE)tn+4<HPWoBZ'ui1N#i>4)WU6&+-L",Gfk7f78abej3/pB*pncYIqgEF>hA*eSn#OI]\*rP66Hls'Ac^]@/).2\-;jh9lq
%r5=^"\4T\!k'lA"dF6oI*4/3NdaiR#OBk*BLB@deq7Q)$+#m_l8aCib!1'd0R\pgSO"$`E5B,1^;V0ZS1PCLlos,&I+K7i0cNaqg
%bW5Ou^j5>8>9'kcYZ@>&#^-4Ka_FluHcZNl72:/fh#EA&f>VJR'r9>UjboH8S&^Uh71%AACb<0CM%(tH9]K4,.[6MQF%V"t16q.&
%\Kf9Ji6BAck')OPTt68C2u1+Mj8:dd8qHYT2Esd5Mco!Q2tq$OI0D4FGWal\)A`RrMiLLpC2soh^UY9;?E%=)*Ce![hr>./^*=_o
%2Y+^-WPEfO_PK=)'9T'_&qE[HaSk/d;#Pj*5Luk$T:4h5(78N2<RGN70,9gY"JVf_KL:RZoA_*`ni\?FeYJQ:0$cn#S#0atcgM8U
%k((P2_+4bkLjYm?eBjp\WNYDoi8nPTE&%pSP+"T'n]W0q(I'5%War]A>I3Ennt`[gL'g2.g]aL+!mXE*M8-`<Fh$adHpMdIERneH
%qQ^O"Xg/^`K>V;OIg+&jAL:V:43fIB[%Q2oiHp+Ua8B]f*WhoW^/,(q4@I[om\6VK'I\9f!0nA!_Ae+]73:9*!d[L78WW5QPrAS/
%V63BPA1BqlTncKSok+AGa_r3Q+QT3+N2j+488$.u0$R_I/RqJ:HsiVI`VF68HjYpG-=C5p]5ouuC@7")Q-]4(j6`N=rr&plE?(l[
%ro8945JI:UJWQ++/WCOR2;"`+(GuL8iCbMo%pU[qL,bKW=Qd]rg(]=e?QsPACUFZ]iCFe<8d&e7l[m5Nko@l;;Va9KBN.jVXT&D0
%4gQnde`%OcaWrO!rpnAJm`oeilc7JZ<(N75UP:;F[!g)[X`\-cku>sOZq-p#:c?$[&'$"14<j2B9IGJ6.o%go`klEWK`Xj?o\?c)
%4G8q*kuj$OTes,tTn;O',02,($u-r*+@u_*+J>)-h&nTDUf`D.%OKu5/PTo/RJ<gWI/C#ul";+$fc5l<):;14W#dO0!=og$raPcO
%OW!RW$+0:_6ho8?M*Jr\>SqlU4&8J.*.8e6^[F4il!!:DpQ>>8csk];V1e<M1_a^X2L_Uom5O!:H\fWOInIg%C+/o=!Xl-o9\"SJ
%H=#h6FK4VS@k;Y<0XO9R"r2M(]hWQPRDIPi)NsTJcJk&0_Pg[3`@#@^/*(jA,.M8b".=`hT#QVZ9%tqO4.nPY5IBF5OLN^o?m=J:
%bN2+j7<A3YO;r`IQ.OpaXeulk)81d:^EsLN`$U%*Sst1-Cb/V0-.VB9p6W0i6<\@-EI)^?(P&PgFl9o[jNE2%qkoXF7H;(^l3[rg
%?bJ/tEm5;@cpN8k!H#kT;)l6MX"l1e^(A=f\bMVbL&^CilGtHt;62Qg`KHr,b'opZHQfU^-*EG8&F&"G"+>%F5;no*c^+JaTZTAF
%9YcIbH`dtB'N)u2gj)rk>X;^P<1q(OX;9S8X&#YleKY5E9&AMX4H64k":#6S#p?q!KYO2EaE\9oVp-8tmuQs&<u`_k]6u'@\?&Sr
%ioF!n7n<Wa7@1p5B*$3DYSA=1jt&BOjA@PHh]0oGqCi,W+e<QMSUS!](L1P5.MNasjbeD4O@K)AP-BG@nGS^QW:W<G06*'DAC_eV
%\u\?QQtjGJ:_%M`'S.&S&oS=!`+J6a=eSr4>-3n'.MRL+)WY,lB-/K%FP;7W(d$_mL1i,TAW7fag!TTiBh59S0MB&:b1*JjB%!db
%^V=X;k7&cjHdZJu_B$`VX5J%+\a2ikD:ej<D%dpHVj5"_B)%PlT^3[@-bJg/r<Nr@QV!2A.tE(sG-#LX9R+:\3^!?'LZ$dX?N0=>
%(XK'rWc.hcFgaK[K"^UglM?*GW?=OBS%*GDC3Y9.'^Mob7T1VDo^b+kA*1YY.ZopR-Z,#Jh+7R^!51ek4AduSEVB/N#9Xb6HCYP.
%\N*+%+k5jtGbP-t7;7^%V')gSROEKu7#D=l?+n><-(7,2X+"TU)(R7@<"Pp-N&[R?22./(#H3$joI4%\*2hsN^d9WK^WA]1k[*@^
%M!@`='GKC1l)AGQAWOoM4Km(+Kk%A_E=EVP-o`84GmT6?1O(tJ:fN@,:^<hdO7BnOO`VmCOkUD)5h!>P2KO9ZATFO)?m242FjW`-
%aQ1b\,(NQ=F@m@PU7>.X]`hG;:A2`4Ln@o:nJXMBca0e;6-_()b8uk`3@]-c4^TjXG^C]6?LlOr%9-<spBp'Er1@9dAB'KlI@p<%
%,;8_dB,DJNn1Y!1iVg=mAl!@YMMh[.8gZJ9#9"GQ4qnlJU[Na_JjCfhngmoM`7(Pj2)&fn(mm2O'otIq:;]<?b-!3n,AV)A'Po$u
%G6eML#feE8FYTo:Z7m<TF4o&PW,n4;F\8NGr?SCi);t7r9YL`qR>%oJqV<-Q/m3?\W?Ek^#j@H.c+ko@BCID0ARsd`:rWgQ:TWn#
%9$J-*,qM_qf(ia:*uqXW!^Gl&\?k'=70jH%r:c9SfV.<Mg.VKdmK'P\\s&nJ6$%msf\0!8*IRd(!0-3AhQM9^mbb^RZu>FoE?iWK
%<Hg_C<K8]QWTn@1kY^t;<e=i$_l>aEi>ppIbURY=&mQWG@uSb2Y"+@+d:V(1b5>+E;,a1(fA(X=?"$Z'.B&>'l./?ERtn,a[:I&8
%j.^a]i_hBc.S52*d=3XJ'%$hf"4c%j[V/ji@92uA22V9Q.+K"I%["Q3!=kek87A[n@AiVN/Q=/[]r8YfA8$cU)/.$7Ih!BfLTniG
%')L$>X/_"oTeC&jM71.jo!s5EciN4If&,=4KhoJSLej.!JWFkcDArV8[]b]IH-m:/O6"YT3'66;c,nAXPsFD375`ZTJct%uME&@J
%nM!iIVZi:B/:qtGdh3<445hmX1bXGW3Lj]GN4BE<\mjpjI'5tQYq)16=Ok9f1g"4-8,)Eh3dk=]qH`i!+hdVTFFUfl<RE0]cQD.X
%c<&tW%0KTeFG7$H`>\\[71&EG@&Y]GOj%1VFrjO-!`E'K`8E6OSe)3O!)WcL?dC&6B8$+pOaXE4<K0nO6:0R0T[fcW'jRPEods0O
%/>9C;$YH,6Dn>g]a7Es/K=-5>iNRT.hTL5(*\24907jUFDcuQH]MM)U/P.d2hTL5j(+X,c52g)?B.:f$3c$_=JA*Oof"J@^%%`7n
%oJTRZ1W3FhBZc[N+L+[N@4-DYOWHU_8/TrI-0sopf?X@CXDHEe5E.!f&P,&SPEf)?[e"0U_'sgQ:"H&V:=j0*Bt*tQC2(0I@5M-@
%/)<^Z\$`L/UBq%I;*PI:c"fh\%jt4biTNCYo<l'BFu[`[GTM<S#RrK5Ff.8rUnPZ+3F)u_#\Y&tqu!o=!'MDWl*.tG)%2f9\'_D*
%;M%*f>,Z[;(5_\22+5XMg(qXUWKuK96crV]em5JkM;l-SHoKp17.0O=mJ]/cr5R306_s07)L25Md>dI70E(k?c/^'7q!4i^D\Xq[
%RoD33F1WmK%+.Vj:!CI?]gQ4Tm@JnQ]D[gn?@I@Z6PSDeZYrL_rRuB,4C3fHp3?RSLgk%@"0We1\oGFOV8)oAo&HdqVMa2(KrU4b
%=YGFF"5W6X-&XbHHK<+XD7;*[18MosVZ-8+VEFEhJ)*i[cg&o5&BB7*Ks9ISAL5m)c\CYAS_Ui*f+/t:fWTYdm5Ggte0uS"kM_7D
%o(?.Cn[b.n7P8\':?R=OV7UR"/W(5(&2sLSL[2B&j)kl0HoIXF8C*\W^YN7`S>CH0DMVb4Fp"oihE)OWHg1!c5J\rGs&/&k"#p5=
%90C7X>q4<p9IUol`6#"q03M/GcLNP&O-V8\RVk"I-IQY4Y._@F0N/fKT3_a_TJlcJm\b8gq5*Mqs5\FU:K`-Fcu7l*lncHO`8oG0
%!5SHnjJS_PAG4]=&#4_A,VDiC9M$kjZjLVh8]3JG]+@S+d?u$*>2$OP9f.i4`0OYlX"mC)U</O0Oi*3Ib2=2*W_-Ed(7(eF:+@/J
%GT&=?*EI`_i@^\?i=bpg'QXm*f+4?[deJLW-H]k('pW'dW2d$6=$>,XJ>@!19[RtU-A(39@g-LQPu!'J+DPi4?Sda_H_GIUKKOB\
%!#3YfZ=E^7##/uJ^_P["[VLX$$GA#r^=9EY'CZN^A(d\F@;-uY4dr=ifj2Ai\)l!#P=Qr4V*Gs)jNL1:lG&+c'0fP63"'qKnMXo>
%<ErgX/r?98'TX$0e0F35aaorE,ZERQRD%;m<Jo"aA3;>UDc.`!:G4t5+=N=-WjiZ&Nt>R%]OU+RY26jplCBPN<5GWg+!\kkFbiK_
%E&9I'1ta,;OhG>=;d-F&AnX`!#u^.$.E-_*!+oZM/?M</?G!7=']D/CR1up693EX`A<Lu8'_J^;$@,eCRM:.;?CSi@H7]FXgTu]I
%/hTX@<JRKu(?iTqU$mFNM<BFX#IKDa!-mJWQ/JJ3bt&X]5<8AO<_S&W=+R1?.V@R<'c9n):M6rQkb?6[W;jdEB&LRokZG*F%].M#
%ZeBTUAVF-`<p55.+J$+gE<oE)'*7-NYI_Rp:Rl)W<ED_*)cm]]=R2)O2M<hDFsqtO1rt)F[?;P`9#&'-gXg-("-P++++D(!/2^P!
%YhbSlo@;8eCKP&0FD<g2`H5&f3S^I"S-t3!3JUIPmbK43?b+sVnO@56g)e*WPs^hMb$P^NpZ\`!FZH9kY!`?:6sW5`N6eaYT)f4L
%WJr60`OM9JOL(^7S'K@k"f<:E>\hRfV":gYG^C3J*^uLhO\@<sF*NXcDi1cmEr45GNbR(u]lSh3gc"Ug+L9F^Z!p:h54;uB6o1+s
%,;4YmA)4$GPIGo17<qO#gDKAS6I9!!U39SApqi""#01DNL8,TQeSa9_Um"H(2tDb4@;[Z/Lu'VsURMU^G>SCcA5RnV:1ssf-9Rbo
%?sshAmofVq%E8@P7%U(f$d4*#bZr;G-C5E<>t#14.!i`D8k=:#s)foC]%)f7_eAt^P(G:\eb3&<pF&0MopnA^1U],hOuYbhDC>L`
%40U1!Yj)&3BZl1R+j=gu1I2sbqS`XZ=-XWB+mfli:)PUcOQ+n%mc.imMR1YEcIkZOL?\8D^h8inHW(6f1updnD#/PCXG=Yr]\PU]
%gV#39*-[G_Bh%>N/4@PGKtP)sP:BbCa1!#H0A4I.(/e5=QiGU$7MshpnEt?tPUG>nVC:!&Hl,/nU1%F/*bjp&Or!RF+"t>+FHp$Z
%"65Ce-e7\,E*Y`VlTF#\->NqJFuq2QHVOJ5RX/.9U.`&-q/jgXs8V21oI'@&J,ci*m=Xkh@\[Do9M]-=#>'M;1bBNG!9#&Rmr1Uo
%-H)N_j+KuiF'fCJ&^Ls8a`U@W1(fZ,!dq<Lfb!Q'VQLWB*s/N!6Tb%9PALBp&?c0ndd*Gsa?F3r'cZ3&BhX%!]O@Xf35n#m$p$#i
%gf^YImmBBJ9Y.'B;6XE,^3VS9QUURsB!MDhEf>h,3_974UB^OQ]2Sp7W2R"_oI+?]mEW:PBKK;%:HQ/7@WX,\%R/=3d@O=IjUKYD
%pFF@t.83hDQW!VPPU"OCZX>"gP+WtB*D"HcoFcBT-XMc@Q/n)WFfe-I95`.;&"W[iLI_5;A.3c^I[r,5=+kbr\`&S`5/E^&-n&L_
%TuU_BU>O*IIS70'[7(ub/\guN_gj\X^[<8&n&D[El%I+Rrji^6*OkKl8C'I<\:=;'3PY!i^TTi;j/4D35LLiPm*:SX13R9_MtHa6
%G4H.[&:L'U@5X1Gc9Xc#8]4eQM&Mrhm&ja_KZp+i[\?u`QE#J0EYcTQH/Q;3%W*M+E#Ha<fcd@T?f>KSWm^*^O:$;M*W/oJU;XtR
%'/N#[>b^@4a`OG(YYH!7PSpq>U0^RtDRoif:Zb%%rc&D*o*"P,j\W"t,Hc?s[n[OHMMR/J1-QD'J*<u4Z<t2?T8uh!)S@TsiQQ0a
%fQ'7n)6N=!io2^9f;FM#.%RuqBak+E5?6(E2")ODF+'3G<qA=bIkEVLDndVh'&ji"Ss)lK,H_B_q%Rg&2rga-Y>X4?2^8i?BU@/B
%";[4G&Z-G?g![V-8f:qKGe%F><Ju,`WG;l+U>7$LcfPgA;+20>HA"Y9-TkC\,hbc)@G4MN"o0DT-DuD05m?C!&6KU?ZtU%#QS4[:
%600S@3S>4dqm^%VeXbk#YKE=t!l-JV,%aPo-;3Mu/CthMoq:cA8X3!--:VPf9_YP&c)trck.sm-kIE&G)Yc?L4-]FP`J?K8`B[&D
%I5Y"Nc)JjRU-2Z92-MU"?sL<R38(GM(UJ_^f!gZG<@(8UfLn#,iH3`W4%O'(e5BlLd#SDa57rZ\0:uL7fr5t%cj?,a%PO%]3ap<[
%>:;;aQuW+>Te)OY&Y,3>,QacJ.J^7f%Kf2*<:]st[/s)Iq(D[sY<@>(Q2!d6,o0pZB(/o6Q#2'`f"=smbV;6>9RFNRU5I_pS5j)I
%'cjJm9(:ZE5%!IFdm#9,b%NZtl2GYI^`SAf--?u:q$k+0V52>*(WCCl5a^rbCW>\!R=)FGjY-]]qkioRCM.%(.`*kCm@GnE_!()e
%($ZW,e,7A63g=)6cO;OBgQbr/F<3'P!!%np.==2JFXO=90G6]I,X2asDsMUQTIc:'?aj^7mFUC:;rt/+e^GBE7<oB'h6Cdq!UhXh
%AFGS!q%JZ<$\@0fT.EdP.@,lcAa51JfM%FsB\Nbq9Rj!8/56,eJ`op]KEZ*fU3c0#g2blFJVq%,Tp]=!'ZACZk/SjS$t7MNU7#C$
%;oo^C=d%[[c/+^rY2>?XRLJ^i]1\8W^D<PL,Bu1QS^_l>&NW2(\&rGK%VN)W4I,6+r39Pdmqu")oh%\62eTJ(!)BZM%Ait`D:U./
%<Ik#<HsEXpk?a>?7;-gd3NGND,jJQK1D#M3Qmb&-2)LRHVe[+l'qS&-pgI)l&0]_/\4;D_C*W:r.?P?OYnUnT:7t5$-XqX<`nqg,
%h<q#>B_11=Msn+<>Y-4[W!%$u!4@=qpiHXPrD</j5Qb%?nZH9oe*')X+NoG,/oZ*NKGS&;;(jgU!C`de65=gg]KH4.*`9>r\Q\;j
%l4IX;2#HE`%Z?[@$KG^4q@k),]?<3l3<V/arTH&1PeE5/OS'`eM^+"Z\H:e]]@<\lc@B4F>?[=\=!CqU&O%ftjG40Y*L/uuqj!%C
%JTM12=*[B+01IHcUhM2D393\T0dbFBb=UUSD0gIS']5%*_US(nU]V'mdOK'YX][#;c/JeR2$n^bj__&i[lQ()G/.#N'qU5/pkN@i
%+c3eaDLBE;AdGEH!ciAA%bp-"'"9"n5#SK#j;;LaguYW5/5T.%d89GMca4?VX?,$,8o-Khq!MR-6qj"UBre`2g_Ee10/`CXTht:F
%dI?Ce)Yh)8]%G"+UIe):8/h\N$(\4+<dZoWYph`;r@C]%1kl#(fX]&RBP[`#6Z-$T61'n6UA2(2YGj=u\=+hL)2/].OA+dsTF[S<
%I!DgdUu7#n,pE`s$C)YEHbgI;TlQ26Wb!7&(]\F7Xb=_"-#@.`T!\/0Q2Y+al]<MjLP1\Nr,e0BjQsbEa-lP]Ca*JW@[Ke#N[5B\
%.1FXfKC0Aj6>NVSLO52d\Q!:GVG_p>G@*T#n<lNm0Dh"$-M9iNLq=$nf]nQEo[PSgFK>;fe=C<eR+A[GVVf[j%nl+Z+<#Z)j'Gr.
%o_lC#iVi:4q4/:R@+r`u!^YQf%@ZfJ[X-cM(<qlIPs*6HJYL<.-rC/2i8C,)EVu;RBBo#[6o*=o4*$jlSZAc+QK8munP!th'$pf[
%b?rjH;cMF\T]8rDZ^_\K^6@iT5A]A!I"CDOah$7>81>S0I;fBsp$rQ=jio2DXPuZGLZ;WuI8B_;NRfag+M=;#[UJKncB3'*hbTa3
%c"!a,9AisY@>5`XL@Y7$AP4J/@rBoA,.0.c6aMI1O;*6nVN5!W]&)],B,C>^O_GXIF@-b-_s4h3lpAL#_A<2.)[DrFE-:3rC[Hp%
%&YQpsh0"C'ME<b<NtYbIme4kOTdFEn`)s-=@QW*urPN0P=9_']33M'NBg_/e+mAPW#5)]RQN5ua.3#aZB#9+'8$'e"_`u#4n/_EH
%%f<&HG)_mG:A0YW/:1bo2Hf$'_@Kk_<EK5^`_IhiX6_]ZSDhWa8&Xe68*F$`!emmTS)H-A3CWHQ]X8`n%qYhFf!u?AjV@F.ht^3;
%72A9/EUudac[-uT*f<!D*pd$\7&h"[&][gG(0A9[&Am(R]5p>pECqcN*4>cSVBDVB"PauO8`QhdK-3gP)HP**bs[@iF`3,T(IWc?
%o8bJ#H4Y@mg7tKHrrUXRemd2k[j]kDl5]?\WKJJ\9hIT5+sf]iE>%Q>&l&Vq0pMkZ>2e],.Y(1^/>N\#p<F##>><i(kU67c@#rI^
%-9ao/i$Q[;Dl2O+hH+Gun9*lccTM0TG2=<CcThES%u>NrN(Yl7FCV7)O=@sD9,,]cC.X_-!C2/I=UhL>7)^"0CnZC\B9K,$Xf=_\
%9,+t^]Hih#+:ZarfDT[hTsCgsf11@Do?"XL,HW9lhR^,mpUC+3YUf/AFo\^LT)/lG:r+sYe5rG+V0VC-5`'U5\b^W/T)*b)TDJD/
%r9EV.,?J6UepQ[s[/B[-rOGaDac.Jc_U4_&o2^!F,>of81fram5]<]<,lX5O(^KtU7AI?a_P!:DM7%'FFJI.tcC"a_;V;=HN81-n
%kr7"fkAQ.Jo@k&Z1(;nDhSTrkUXTRBhPAi[3rtHt/a>r!JE4UFj=L^G<YHG5,n0j7Z#[B>%T8(_hQN!q7+%HBSUZ`MI[5kdYQ&eG
%#eO9fP=KCT'^KD@4J\VLjaZ't\0&Hp`;[jDLjaS2NcuJt2q9GmB["-HS0->h!R<m)T:_sMR@>5VnV1[j!#BB",(%[NgHZ-1Mq$N8
%IWe@m)sMfp^FgGsVWFH,eYV&Z$[Q[4R%>"9'WY`"ab;6ihAJ^PRKH1L_Pp:)RB4[BGNAK\Jq`@]O9Uj+;6=tr.F^_R6jJdAX9q9"
%%TQU)6Qi^@,#?u?MX/fu6*d>ZhmVd)'Fau8ju%GMg/.)5a%m1RW/m!;dZ`im5DJZdo=_Ueq'`N7)O=0jjK1L^6hoB4NUV#GO,M(e
%8^rlC)5e?*Cre@%;Q`L/@MI8CJSo`YD0W$-7kasc<9@6^N<qYVi)ui?iNoH6pn(>[/m34=?8)*Om]BQCgWJ[-K/QgSI7"D9:jIQP
%%jg<R>6WFF>D$5!d;I3bXHK0HUd;+#H,'*niP8@res#Ub[CaQD*Fl+2i)Db?\4Q?)Lf2QS+Pb+/hn6dnl'clP!#e#YhI*"JFZr#!
%)`q93ek]0nbd=\EI=$D0kLXO6+55N[&$'dX.5g0-J+WhKZO5Iq(lsI.1$sIspFa(@)d1VWquHaYkQRtO^UoPJWc8%X-d\X2@12;.
%5Q&`k1Di1tZR+_9rp(Qr86_YoP4%tc]%AcZAUI?S_<"r!W_Pf,mi(<S8ine`6:6To=_K3po?[1,mJm)K[oVjURW_I;Es'0k,9o.N
%YJ$/#'dREl$Vl-6b4"3grr5*0Tu"!J>QV^CWUG3QJ5fj]KgF?>9ddGCMOT.4<-]k?-l:%/>CRVsCM;0?gnG1mTF6%$a!L]f1r!91
%,`\1`T:GDpC*:WN.YE;7PY<-(W:DaR8!B/RXN`Oi#\o*/S$o3R8GAh(7mf'e$N+0S[_C<ZQObDXWG.2Y0_mstWaZ`/gBkaT!d9\-
%!;\6CY^A;[[M=<ee;.W8(!X_YVSeffL3R=*HjJNNh.oiUX<*>PauUYiPoNNB.N=hk]RHEDL+j`gfVFoeU0!3uq;PPW.8#,7QOL^E
%h3V5@&XB+<!,'lOSU-j4$#PcV<eO/"g%^YM(ceUYmYC.H$GCgb18k49RDZ66&c.B2Q+9bufmJYKm+J,EJgGE4r0T'!.$0Xs'?h64
%\D\09W])t^$LF97@g%U=fj\pK+oF_)\bUhE^R_n<EulUd;kF[4U_]K]S/Z%#nYfG3$bc!KoNL.E/ST9OZ?6`(@^\t6$l)B.RU/2F
%ItqK(8/.S,GPUj_J03P\p;qAoT:bAg%l(Hc59=G3,S7j%Bm(>gc`OBgDar5IB.JqOSpC,CDLMjalUnW)`kMkqqbF5(M,28hcE9l'
%&'>X\FUl*@DFTgUp?uZV<n"sX3mr%Rp6[;#:c4.;>IuLd3Q-i`5]lmL\$dLZ5)$EmTYBu/*`-8SJKjZc?Ys4^WS5hTB:-?N]I+o'
%>EPNhJ/M+]p*_P.VSL*Ih3m21DdXIjr`e"X@rl\Bk)<^e2B@)980X'pj/8lr('&cHj=ZAOLKf]u$_*JU,7(T@ZkmF[26u=ImM[MQ
%&dPHg@s*Dp!gt7/(_/VXb?BFY]3[s>'21BcdiD=\ea9q]ZR?(-2,MM5hCoWQNbC"#+;<"t4_gV&\l_=EKnkp-p;kJ4FrJ%5]TEps
%/tsXkkT;fWbrRafe.Vo0cs.)-!PuZUQQ?Tm"&#U6f8),oB5Gr=/FtVkM!h=M0j31*RPO(8JaKe:j>b$7%3nc#/sR/qh!oC1M7Hjt
%-po_GL()2PhQANd_JVk`DoP]jb*d=;dTp2bR`;p)[3-+K#`p@[o^)C0-Rb*k6Bh?hkIeC)5m/r>lWh8fS!DZY%QB<%Nf7-VM\+;e
%-(H(j4@3D2$sp?;&BZMk>*`:UC8B2J"9_#6N.s')RMAJc3^Y@#Q"DEn*#^k0Y@mpS/RL+9EE,.RB4FTjQ;9*,GuuJp7a,c[PpYpr
%fS`oG42H%_&!81J[rZ/NgkK4_1o85*8CV.JZ/d#;.Qta,R]tmU2K]C+6j8)RLW/F<7`XI5V3n,;;IrhJ!e[:HS:Eo:7Q=4W53@H]
%GkELk9X73%(XM/C8i.P-4=5rNBIjUEGh0,W/Yo)r!kKs(G+*(N9Z*P<,sSNgH5B\a&.+aYW@J6-7;`O(Q*u5g]pGD"cW&,AX#Z-h
%U#]H`b_/SflU"NJ]o(hL.m1Ye8:Itge<dp0RH8=`q^2(^6^f8+p/[''j)"BOS^#[,]QVe_$j>frWK2>BK[VK:Iom=MKWtE2ha[0'
%!ZDct,Xq3/cHDig=?dub-=mY2-X<WJBI?75&RcYX]Rg,;;(_%>&Mg!#[:B+mDj9&l'Wn<3WJ%(L$0jJh,Y]p.dCgo?rhtC=hArI%
%2#2#\l#sI&SOdg4d.)gjI/H>b69eS).nAV"AesV4nK-h+*SS9-,F5)N[p-_XA.kr4##^0l[]>?*o;.N4*,ciR-@QVj%_>%lL)042
%]V&;\#tJJO)2XKu?8KRC[`'Wh\U%0brEqlBF0B;C"`$gK'`p#Y^IR,']_rd$oD)g_2eScqOsqiqW\miQbhJS2^WI-.[WV^&22&Dc
%g7oTcQ)^]qfEL8-4`4@*T7BL-OE0P=eICB390`DuZ94d++3p9m5C^ruWJ;!b9(l)kJ_(r':79c&HeiFHOFer`ZYt%DDp\eg5#nfm
%m2IQY?Kd;AaBC]]@&#-9%.%<;Uet^!!Fn_;?,?<jOOJJk-(MQ(-1^>gELGf$_T#dJ64,?7G_\$mn"tqOdu[[/]#8+h+g9Lmr'1,C
%%i3g,b5s19/MQc>rui>_]\6c\O4dp_Q=%+=MVQos958b(PZ]=N9\Dd;RdXiKYJ1I%`.W2C0gBeEm;2?UJt%4*j<7H=7X('I&i`6O
%:#WVnLQfc_WW7U(ocX*SW"WTjRZ*2mT")_-leqjU@=c\c\`p:`"NrME'HdhK:ro<KD\!;KNelqs;1cFPiAu6TNHQ6&jdaQ@TYbK]
%)Y;^/0&3"/gE'1M]d\R1rfk?^[<KX$_RDT&"pEYEcqk%o.YQ@iqmdE\&4Sd.oTr\Dk(nls33"oZSZ6!VM-D%YnHf-32Kh\Er5*XV
%d[L@e\3'io;i8nd+WWJ$aMI;ab+.;Nm4]2hXOgr'iQKaebG:+0^7<ih+(Jm.GAc/^H[Ko-E)Fm+_1\3#Y0q7hQ*6f);5Q+5*5>K3
%7D>iJZ><)ac2YC>.bOkfU<R7mNl0h.WR10ZI8kn_6a(?Qa&d[uo%aLY"0JU\5*"egFtT?Eb9\!e-$(>=??!m8.IcBAgNV[656=XA
%$jKRKn)e*VDf/78<!'./)1%Pp+.>eojpFgEi1=0sp6D94^H9hKLq]B@:<q:>:ou6&\asU,(+Ql#W0:3kM4Yt`jQ!!XLNOLjr-#1S
%O'Mm.Z\YURgF@mAoOC+/j&)EEVa=&pnuRrfi9+@EWf5&u^"K'22L9(*'H3"mJ@P2b.RUgX+`q?>C<l>)lAh-"WEYmC.E6Sj&?Eq+
%`[\2gr"c/Ac%-5WD&*TXW9ul?AWq.87_dfKF-RF"gmAu)U,XO<aTonKkr=!I,h+ZsG,?bHpETTYE#fK!O#g0?k96?/n]i1M4khH]
%[7/Z"oJ<fT+o!+Cm#"s9e0H4t/ugcu,q6#2?a^!Me3k0+L7j'iV.lBV$kDRaI'"a<f[KHaDjaII6^hO#3+C$V'B(1ce:NdN=3b,P
%[1hif6GgOc!Z$NF5.1!t'%b?YO@:FgEdl0!C@`[m+Y*R6n"pnpUo/plb%N+=V7";?Un6i7*ms7eYu#a^C'oYUfW<O#D*lLO\TK%/
%V@TJKV?.PIhYGj&rQ]qjo,]?\!OP<8SNQA^kNGWk8W%jl4St*GJY[#KC'oC_\548Kr5r16beMG@b^;"60l7^a_OAq,P>,!Z80aUS
%PIKtOii8Ri^@3hC-nuVkfAA\8`C5$[;Xop7NRKlZ(*!4'':u$C\O(>@;6>7a9kZ!j]B\3b?c#i#4qp'=G+*2<`en`Ar"Q%cM(ih%
%=4F-NV\6MmRR1BR31g1'2f6Hs+[9<o!L7f#(f2A<Zo$$t6KU,"]U-FGMYD^hbK5NM6=7?/oFe65UDKlL.7XJG<O.]gk2he)r$[Q_
%%\;eL3Hp-&7!]6H!0*1EoFOZ3h5@4f89THLmA_gf\?KU+V5q)[@qqIT0\K[AU(GG=6d,[:WbGtPA0'+JqaPh\DE`LBV;@/b_D+YW
%4'hP4fgO^g'*Yh9C/O?ieJi/+fI;&CMRcKgqWt\70NK!(I[[:=D3tR+OeQ!+"cDcJV!smVm,>i["RMt8m'YL_Sc<M^h:-MQWjZ-6
%kO^lD;#H/-3$p\Og0$;NEZ-(->4ufHD8TTE3A;G&7>J>^Kd=$WR]:QYe98aKc'E1]%Ub^iiZ@H^6G'umR_J]9r'mGo]832!TE71S
%+cu5[N>k]p^04O\(O/"tSI]&>\%iglQtYm3.Pg"9=)qiQq`;,XG"rka0kaqfQI/U#i<^4-2lgDl0R%Rp)ci/uh*tpgZ'.Knl[;MB
%%^DujgDCQ8M;9)6`*6c1?;4lGYsf]D^JhY2p!aW)<8%cR^'+%?m*)!&EVd4n>E)qcR<J)P7MVZjJ`Bg)aQ`)a7\$\3n2,6Q*0,[S
%Po`!&r]dZc#M$>/G?Nfp-KFY*B\ql=oiKmq)5UR_mgui5%>J_cX:dL$6HR(-m@;Uf:Yt[!cAliib9$JSmu9"g07<WdKG(Yq*p+Ki
%=YQp0pbsHl#9d?\jfVjEcr=,Q1bFp'-uNIFa!CH4Lq(SOe<%6IgEYd$:3%7fG'&Od'pE5!b<pU"4@0VgRV!i$a_3N"HLNWij>b$,
%:Ujck:PG%l+C*"R-'poZrMGhJJ'XEFIC:D(]bI`hoYFS\K]nb^7VV1Xh=8Yl!Be\^.E8*(mO99QjAS_qT+"5BH=!'l1Xb"pQM=#0
%AFWSEf;e>,p_:ZRXC_S/_Dteeq\#g9\Y#tcP9la%\--F^5sdRCUP67*5dj;:Ha@N*_;FA7:$TMpd:pfKqT12oRm"lWU"n1BDsIZF
%MkG>)?R4S=aH&,q=[a1%`fC#Q<tC_mO)B/=5ll[&I1XJe_WJ&lZ&bEaFl04>V>-R`nC@3B?-NqOQ-2#>&+@RS%I#u4/>+`X]HBnI
%0u07m^7,MP6u]Wp!'NqQe8]$b-aadh1c+0Z.cS#L:T\Am;@/rN:SJG>]"=lc*Q'#?@-)VrXHRR/:MJI`(`&4\g">[ESMQU\pijKq
%/3,=^<A`OQ2A.tUWD$:;RT5-B[gO]699Eh%,TY@:F\aUObJK(3.2gA@FapWpnr\\l19Kn#H=rd6fNW(b'RfE'fDh_.pqSZb_dJfQ
%QBhBY>J1KDm,F1USd^JhSGQ_.NS,3bTd,t2`tkJY-ndRf?2MF(Amt6e=9R%_UEAT>3ZtV>BsZPsHoNWC=1p8^!P]f^<ft%-?]J,V
%n?6X"?_6f*_8cC4NP\s#kQo;slM?l9foE]]Dm:o'1$V+ZJg#;*6l1gH5J5J<)BiB!TZfsW_<Zk+*d`=N%m(nkF8W[8;0C`]/E7ri
%XD+re1"nCF\&eO%<C5f@6]f9^[fY>.3pG;2QQ^5Jfp3A276qat&j[VD;@[V0`#Y$Z\^XdN>XJ[h!qS2t:2riNN]kL/ZNsj?is=u9
%(bp+a[(UidVhgV0VN`E!Xbqhm^tK-JPfH.MI=K2I^cJ,i3HqgD[]=g%@s=pV3u%W1.mhS&PkPXaI#iPTK/\e@jH)Ck-$WTK"NF;>
%5SYi$*GhL^@]7:Tmbo_Q5pp,l0<t0l<04:HTl@+J@`cW^S4b4VHN]QW+[T_*mq+j&!qh63hL*Eq"+Hg^>rsj[3tOp/H+nZb;a[+[
%V7iT68=0HT2OX!jh!qWh47B%Ve7Zld!o'W,<qQ?fM&lE7+eZu5?E01M?&-_nj%?A.SB;(HD(A(g#7.RJ*',G_<IH8SPtj(s#?aV.
%UQRS8Ic]7+@-OoN$hmR6P20^k&LNho_4/`!q:)P.#?\r0H`R&#NH(3n$)=,1M9?UQ\ONY5IKA#0j,X'VpN/\`im3Qj07suW[j011
%P/N4n;IA;BIISJaZ6=&NImge]728lR*6jT.3jh5h#m^Co,JJo;"C=U!Z3t71)5bYh`B"Xi._MNY0Q\q!_:]3er.?=bL="g[5m\I-
%?f!p*a(GTcXlo,\rpZ5S.MDP&"Ell'Y>:X)m'3MDX2T_*J/:W8?*Cm'aPQ@UYEFjjQaq=)8=Ic*I_oX0U?e_lj2eI4>!uN?qk!]I
%dA9A@4q,/7MGPQn9_2Es[5kOFX6aeN12FI'/nRM&,r:6JLWB.Y-d'LsRueP(h-jO0+P?pMCcMOt0a$\jH,&/H=%%W%JXItITP-7t
%0h9dVdTh68.>>.<hnulIjHmbr`OW0BgiPOhK'7?<SRefWp("Z-VCtdK,oc>+;Lg_Ci?OmkcKN0dcs0jNlhRA7ar+RDVW3Fbq:k!n
%_7QP/=Ca[AYDk-"-nJ0bF?oFA^'U4oD\725bl[+^U5o_h:u1f%284F^8mmi[>HuRr!Yf:;ce2H%FO<<A0V_W*V+:t,mH`M<36]jP
%1ap7TajlA>P.;"h]uCCbI9ejgp`tf6R!PgpR*R2o/5I;bDf^@$R[g!L>"ZHcW9")uaMKqH/>Oste3!^b=k.74WjI<#QgJBW1kEj.
%l\6<LM;@=OC%cSG22B&T&"%E?Q9t;`+YXht\WYN_X?[@04;-rXO1YKV5->QnRA*#JR%BbEKRBK<?[sMS6W6$>""U$8RYLu)Ct/lh
%&AU<qRo>K('3-SUp:hK*YMUf"q3gfF7/6jSSA02c`krPE[._GfkhnE$/LIQ)R4Y!*aO'q3Ku=)G9fcZ(?id1C$bj1#7#'n^)JGT9
%Ln/PLel#+r<O3&/&jm*m`<Kf6Sm)B7Z@39N0kS?ue*_-8P\#(!A7O.d$VT4Tn)0TZC$'P$<FcKkRhF#\Jl-q/S3?m8&`/U$f7cdA
%[O'T:qLHI>CfMg-p<90HQ1M:$PR1WOZu_FW5GhL+(uUeTLb8ng,X2]<#at$"Kpm9*ek@R_!G;d"MBYiC8^Z17/^VO/a_9'E<6P&J
%D>[H'i]Ce?QaB/+)-/bO8W,!CbO1,;JcLKs,.<,a+-n]lEWQV.)i%@_]Vfj.)<6a)ni8;J26?d.%em^2kG^3sq6X/ZLP%qJ'H][B
%)6Q"7aR!schPB%dXeYcu*Rg)s<-?J%R/\[\!um#(dkPpUrH_WX'i]90dD_hZ%87R[3tJ`0-.od1SMetSE)-u#::q*$on:5U"E0'p
%N%3!MHM@BH7T2J+!EJ/XAmgBVeO-aEV\oX%/kErX21(Qe2Aq"JKdDRpP>48T+&RO'_Sd=-,q*.h*_*?&GY>h[@AB_F@)%2,#C+gc
%pIA(T6GnT\Mji!AcplN"1.PF*ho,6E^sRiS.o/<ILX0"t8#@p*$?A&(0:flVh2A<A.aUEs@FFY,,WbM)VMnkH=/KE(8slaJMgoMq
%?Y@Dk2e3XE@YrXj`QfdSWJ$[O87.,,s6?/R.^@`jBYn-9_Q7Dr9q;TVMPsqYqY@WTfEmoN1rO]1WKejV(?PMKPh,N<-PW8k\jt^O
%c(\Pl-q"`Pkdem4/-!U3('&/s0"LVh26emHScId#,e9Mqh]rlP6NiJ.PZgu$eqQMbJ7>I=cNkI\O%"Y65.+q<R"$l0MDqW0h`WpX
%2cJu8s$eI,[+t\k^)nN41ikW8a,'S)S-0RC<tuXSP'@5/DjA6LNVG%mR002BS$uR0Xsl,r,b:+ZQM?gVGq$UhM/_A%r$=:+ehrKu
%V1+lc3Cp.t!OisElKm5oH2cohkP;`(rq-r%3H?@`;u0nWhG!1ks72CL5<YiC$B<0VOA,kgSYUk3gL8Rh\%[=_SOBW_9?ZbY0?]Aj
%Edeu`BtG]i(Ho]8>rmI\2PF;!#e;BKLUYN/"*>gV_[8.#jHs*EQiZB-q^kQ\oDFO9<:B6QCDAIT>FipUeu=k6WM2NVfpDIrjaW+\
%mB9jV3jiC=.^MO<6k-[-88(r_U]Pb4G&g8]cCiuSI07KO9tCICURGrFpRs3F(!0Pa;;$e[PuT'HaCc-A/>FO^XL7PkQn;IknqgDG
%osc\m.Bs(C'R-@P$Ppq..\ZP$<fArE:)tl9FRs1GN0Kca)HB]jX,^CSfr`^*5mUDAhI+d&UMC_WYQST;Zbek"U.%/5Pb:SED44'<
%Rqsp`Ie)[7$m#Cg:lLO:b]i7*?dTJ&JIjc3$`T6c`WcE6.*JiFpcjN9BFcoj1]Wt)[D'e6Wref6&^L5L*_U8b9H:M.Td1:%(LjOP
%@^AD4<VA5:3/gLrRUht6[rK=fWZo2g&#t1If*YSg^8Vm@Yp>\%c-FUuG!GGb&=?9S.:[Y7dl+lC+Ma+X8H*([-VG(-k[7AQ1;T>t
%"EYU6Fau]?es4/XQ>6HA?,%r%h`f45d_7A`ciu!<)FWJW<CMI5i!jM>]X;&b`8RGE&F+=^Xr#6"^\F]9#LTZS`hF<^WIcLGZVJ76
%s)"=&A+/7hb_IiVC0L<KF?;KnD#<Ce3;969h5:IC7Irl--bl*J%oZAK:hLFA>&Wu%fosl^;j86,4:aG(*(p@mrQhQ@1KLeH<rte[
%q$WGP`QN?'(SW/,UFt\?-<a7i8rKPk`G['t.g(D\<R%i/\l/4f@j8"&ZSltViTDbtQgT7uq<k?7UNJk;Q9YFp8rKu0]8'<q>0P)o
%1OtP"`0o8rhOsP!5pR+^&]%c=4.fnr".d&oTkWFlQ_gS*eQ\64J"`K--n7sY6Wa2V@)<o67bB0p$rG7pe9+jWlhO#C1@7q;/UZ8S
%<)6-7NZ^m[[P./u`J<?K6rWD)9+huiQV@VEr_'^b,[QFN3uKRhIFXR)8IX@(^GQ'PiA-!>C\VHG#_h0np#,CC:Wl@(;8`Gs-s:K-
%X9ooIR]$d%;hLi"Tgi<r!"gCoS\F$F;Ktao.d-4Me_k1,4$sg'%2-M;AK#/GZ'rKcp2f?oU6Z^a$+ig6601XCS@ae9&GS83HifIo
%nB\&;T5UA03sq4MiZk%'.=Tl:imaY6WOu8?%ndC5%-5YIFBf1F;#Y].-A"DTCkWjp"%H^9RJ:SQn9iW*%WZ_\AE&Y+M%PE,&]/#c
%A60+[pi`b%<?oj6J324g'Oro[cDr]o&J<92679Y7&N]/QrpnepQKp05Ppml4CG`jF$+gHX\0sr)5:rN8W!+c$:WpXUTi@fq#2W@G
%_e$W-NY4(5dp76V,E;%eUA.O^ef?:Y=cfK(6d1Ji$M8HB>o;#=-gOf@)b$!Z]cE,GhCt`U0VnBX.eouao(q#>8U3?TWd`RAZboL1
%ppC$/DUkD*H-@kAKFsDVOZXh./EpM9\(PiVF%[oL-=$8$qL<L"V6[""*W<TK9D?Q">3G%pR9JbS4aa`8fXViWL5.3Pa&*.Z'H+qj
%,Vgd$)AVT++slLHhLZ:%PO6ag1lmXSO3ars,qaZ;I,HEA14Atg/K;='pc36JU\.]t[\f$)U'.]t\FVjmTFgjLTgXk)n<Z0U.emJf
%^C0GY:!/":!>*^13?&2%%pq;RJdGC*1<4g:eg*Ob-pun)p6VC6'mT3kBY2.(jL;k6FVXR=8.:3^?rg.?Jus`#_EU/EX6RS/#bYQG
%8b,#k:ib]mm_pt:[U#CiHGPF@fF&B,_,aH/>?M&;?V-uhV;7TS3YsT1VY9&eA0d//gt?j32I_[D7IStZLYG6%j)4hG@Fh,e+U7go
%6V?LB=MS%].c[j2g1.s[*G.`_J1$CFg>_O>R==I9GQaccAKdZ!dLNnYF_32<Z/c<75mAtU_uk>>!icpb(md"$\7\F%JuLV)Gp>L/
%dh03AOtZM)H,'7\fEttTI%W3TSQa&aa>O.YDIGYl,s,WUR73r5n4"!a?LIamSKk\O6Q1gX%,*(#n^R,Cq<GJ'cV?aDAQc+"2'**,
%Q/NKB8rKU.mIc;;`maFm\5bkrXdH0l69re&>8tfO'[ERR5r5CQKHJ\hdLM9RntH(pj8)k6p;D[LVLWhQ@`9/3`*1ms(@]scehHJK
%`LFZ;7S(]lot3?WeW`L3)VHjq]7+mIW-KU'*<[=RO?kVUP\H70HgfSANP0h0c9n_s$#TEN8PP%39RIZT2EhoEIZ@Qk-AMCT/Ko_0
%,rh=$/9\,H=n8$Zr/c@[k;S[=DI-7ge*6$UrEQ->H&h_AA!:euB5%Ap&Pi9)J\,i<[BON.=Mpo1V:E(.b5nH=.M%KeQn/A.\Q1kH
%H'Tund8E)q,!ZiBH:+WZTHGGD`1:mf432if3!tdC&ls\]q'MLsT5Tt+FWp`b^rmhFf&=spBgCm=f^>F_ra-rK/(d'6Fu9K58Fg<Z
%XBA<<P#+;mIg#l1&>D[b4m1<>O-a&n3nA7tECi;C\ATM#rP^X0J_@(8B\8=R*YW"pr/U7&2p4f2G2uR5F[90XS[p?6/d8mU!;VPT
%%SMJ4%#skLN[C)qnPCA)Ra-YG;=,;u-)aWBn&Ptg;lh!*:NN`i1`1:MHBqmT9Ubj*;Sp,Ro?'Oio9aUrd=gr+Lh[CW2D$t`U+0=V
%f=E.X0o"M?<6Q4F51MW0[]uKa,B1aW_MY26b-8GXHn8:>p&kOb=_;eI^o9VmR+-Z!CnbD$.Nr_`^6Mc?eL:V.;2iGHX.IcoAV$FK
%=r1f<3B/S8=(r@%(iVn5;R<-Z(t9PAk:FkN*jU[FS#[4*9_)nT<N+ugb86M4.)=iAJp#"en#KcFSts6D-%-j88(*:HJj[g<"m:%0
%+jFq08MPuVI*8NbOieSLW$g3SF5\f\QH';l5poBIV1]_%LEs]U"AO'!<"nTub'rs2G&VJB3$sit;\Z!19h\pEr5%p>RZ?881[G.R
%,07b[`mc3-;MR;u,_CkI7PD@9phd:K[L-%p\JVV`j;<G4-6tR1>,&"J#cA54.%B[RTqRj0`!)YbgR1W64c'M,faJJhbsNc]HtU[A
%,lYUpPqBe91jIig,R#1ZqIu9C>ENYP?O1*HK:^e=<:4lR^4J>6GlIUlKF\Ta>XoI-&*t-X,6]oXL7n[GaCGMVj'<],)g;V&%<+[s
%BKY!;5tC7E:T^S@Ur_7PmdRs`G)'Asn!?4&V3>#ZMcgbc0'>;DKt=0/mVt1hS!fW#TQLej<!cs?,W6uZ'rMrb;^d8Z0RU8@8$(ip
%k>6#NfLi33-d+.iifr@Vd8F"u;O^%A,QQQ_#kp^5-PBHFA>kMeVL!,/V+TYe"-%>h@_"31XE=*"W!fghdqMDPjqQIQ6r-DY+j:nO
%^"XD-EgMJ'_k@iD'-^(th)*'VWj1<Sg@Z&uquEZD1ZG<op<FP4joQoiLgEs8Bp":Rg-r#G#91uajV`>uDVAO`"^6hl3VRrOIJ^Cr
%]KOSHYtZB:S*Dh<$at`*Gu.8^KaWY1(:47F;)!(<DY#[keJ6.HQ-?pFGnGj&>qLhcH?AW<AP-fq]T1?N"S*(EmdZ$/0Sj!'d=Q'[
%Fj"!f__.Ysq=5cV\Q`&gG<Y3##q,^2O0'X"C5(%o7Qd.mARG>glC0u+ip$"T_5,VsRnIbe=.c.TM3JHVBGnT=.<qX,)r!S$SRaW1
%GnZu"%_Q#Fg_A]mdk>WoIChaoI=]k>'t"b'T5W&X[uT@7DPL@rmQZ[XAT+:PIN$Jo<o*E!F;rIk+R+^5KNJ0=^%H)g6+Scr&G3D2
%GCVOCf=-0VAU"1#:L3Ur)n?_IYnj)n-!8NRSAG-Rk63_4GjV.'B-XRr^=%T3caWXk<8FH<koUrp\`jklCmFjDDUKZ2=eWN-%H$EG
%/4][.\C\@lo4?k.GB?'&15a66$4pnIQ0tbPWT>^+:10eV!\%6<$D^p$?TjNT3U6Q0+;*0^]PdJn<2.2-hFc9Wf3dsT_oTY.\ii!@
%^3UXj$XOW5]!62Jg0Zq&[snC/NDR[)O0+t)bhI2(@4N/nGbNsc4:p+uO8`FoHYUuMT*I\?2+3->[nDT*g`IIecbj^-p?9E.f5##+
%7_u`-mDC?Vbi&uB4f1dBWS_&q2a*5=FlB*:fBmHMn_E;).$0p,innY*D>i=`)bnZ=n@7uE3T'84^FoZiL4H,o4:j9)Ni.#N%c!TK
%pPG4!@G$o03d9EGeeAXC*ed'\E-b\%^_nPf]g"BCSk%aZiM-q\G-@Hb)$Niin="b%fK*G9^-)_q6SZEt$gjhSEO[WKo^BBI;j3gM
%4:kCp*)DIoFPP?:jG)h`fG?\3Y]'0fe$&d,6bSA?Y.1W")XcLS>-Z'BW>l37+Ykr3dL+Z.Q5J7sY26@1[-mhjqY"W!C0`J__M:Jk
%HdLJ1+Q3i0b2-@K_i>pUhK5nFoE-##h[0H*6F-!UY<K.E1bKj$_15ARe(l'>n_!X$DTudJ\D<-,7pAbbNM`m#aSgG:Ko\u6GC/TA
%f=PqO:Y6_,^@/Olhfk/br;QHP>/=\u<!jr,dC8`0S_`pPo9]%!]#KO$qe3[X1J#[+_g\)iL!keLn_-M!IK$rEm8(u6M-5Z7j?A'3
%XaA&R>LtdJM!$';hqRo[J$T3LjlsW%&c18L*_j*MHu%P:mWQ3*0lPCOc/@=a?5Gf:ES^&Z^RmE:?bc*>O'h[N_=,,mf.-(X1kX]2
%S3L+[p<t<_UbHgWkn"K^M90Z#9YodQ&Q.1`,FH_KfadI@,OAJNn#+2G]E;XYH^q>#eQHh:qWHTlfYN*1Xd],(j7ns_[A_To0(YOP
%jdMZ$*EM'=DfPNN@k>ImWpoJL+-]PLC?qm((BGEtRh>0&%<m\1!d00sX5,a5UVmCFCc>'R+eE$c&4.CsU8piepD=`$/#j(_;F87j
%'3A$?[K->iGW[03?,R5L4:F'R)L>!UC1PK8$mNj"WtEFcO!*+\fIQ%=b,iuIOUL5^kJn%k**Kq#./9*&Bp4jEV)Z.h*$`H8AJ%3V
%7UUOK=Ap_7U'ON"?-t@b/rJo=LLA)"`8[rIY@3+s4)D_HE[[E[TMu8IUdbhj6YpTK8d&l==t:H%6j1lt2`YhZdq5`JUqtr9frr`5
%Un>8j3-^-s0p>q^N%<D=@Mc%6?)B(lpQ1N4(g+:`e'V+[cluOa*Km2Z79]DP[fd%\?!!-q%5%%79PimmK.g@F>\UoLKT0EAP1QGd
%CrOI35APIAYbMemPpDYc&SR6>PH2-[j@bN^92E>%YXXHFmr^8J5?]=#Li&M-MdXV71?g'%h%m,jF&mEc:)BiF0NgC2=^6[G.WZuq
%&fEPmV#lSIh3IdgnJS\pX3hQGCnWV\7Lg@3M_uN4P-A)g[Haul7.g\dXeO6adqE7Yo0&RhZV[!EB9=M&k\#GFI+-cp*DOAs>DRbe
%8n".@Bc`%g^:k3PBsSa(P6,SOFUHXCVf("D`hZ?V`%Rj!=IRc?o(D!g<+&+'KRM10a/l`'&\h!oWJC;3i?]7OQ_?-*T*@)WdlNmZ
%lMPL/1X`WgZ*&tB\QoqY?gQS@H7W;P8pLN<+S&(TR^onb8-@R!DgM<V'3g/!cDjfm)A@Id#bNsbgkgm:X0tmE6imL^]4Vt-ESn!Z
%3H[$ULoVFM;UQ/Qc=<`cd9f1Hh*u2o_KD8b\XT6@M.LSEFu<S&<&^E_@YN<`DSpV^O9<Eqas)[KZcC;8I2<GXGP?1!dt#)oO)D2u
%9'-RWUPm'C)K=5f^o*?S'fDlKXmJWXrs[&UZpT:2+IIQW.2i5V>Rjr_VJHrTs(/XFAU=4ji3>2$R0`Xgn89ugZL05Xi/9Q/H,?g-
%qpk&&Y\XWg0e^O_MS#?:XRkcc(3(Xr^=l]3F]1p\J?$Hk"U,m?%obF#p3$[dFJ__N$%3%BVZ_0[,>8AmFL%/O1t7:W;S9%V2INE-
%/arq.XgOg4CYC?`a)3?_8#g>]-'(AMDGNJK9&f\QWXsaZoA'7q),jB[l3o04($]JT)9s5(,:c=,]^.pN=OAFDmHcFKoA=eUKaNLX
%fNX@D_Y@g2CDdPYE[D7fO_4)-$kiY2;h23/n9_VP&!pY\Dg-+LJZlaE2G/o:l.^EW(aGlTa$s!$Qi2BB$[48,gO8GUSh6s.NmFtj
%,@/-dBJ!V#X6g2i5`E(MYTO<IS&\B#qJ\.\$/Y9`&?;-USo4:9MW_ut+0FqWH18<aeIA=VDpOE?D3,gnKYB'dF=qJ*dbc.Ac+_L>
%<?t:Z%eqCY>Q4;B*hQsWPNpK1rXQ*P,+#YpCU`>,*JY1$DGIkt@"o=^1B9.;W?^>,O0,)*#u)]NXT`an6df3L=pLi1^g.=)f'D)g
%qEp^c5<F<I;7-PQ]rI6NMX,N])KcD_BL3Z`4K>@YY4CZ7EWoMj6`ade&RR$B08H(OHpo/4]22KB#><]5J\S6DFh=RW`&H7?!&SM'
%TEB'=cLaJH7Ua`r+kI9hWWY8&D?1K,4/9mEiq\HdJ[Mn,dD_I2!r6/;!0;f3$M</E6Hi<n8-B]-8b2Tjf4o<(/.EOALN/&U,,Veb
%ec9'oM\N@2$*)[[GG],Z>XA_8>_PMi=)[=GUSIP,</p6e;[4N=\0`nb.`V$WZjuE$WaOXEjp]-9q@pbR:&iCs:or:o;qLSNAX_Y6
%1Wb>R71d\r[1f+UFB&NP\Bmdd$$qS`0+]LRLK80KQm=ikRmZOt59p.afFNQ%/>dY%a[Ea>549'cS7de:A:1i6pmSds&tA3q6d-Y^
%f#l\`khcQ?'=6*M:9m79^pBP*_`@cRrUOR;mLUV=':gUIW2mj?p/IM[[T+([/FO\"RR[FW2Ge4P'MmledmRJ*\k<^H"84IL65fF2
%!(+FV_f$[q@Dt[:H92rHaZU5UAW5a]E`n9$F-IjM2.,lZV#[>@@cDQXK?b2H$\)`F;BrMJ<H:#\_aN<342o^j#Kol.q+GWZV#7db
%,sk\2F\V4S576=GdC:+72GpYrpPgF[;#>m-`'$1mJKA9o0SFXNa.gpNXhf_?Ak]!i$KR*i77AA4HCDk4HA)r'!#9e4VVmRd2.E.I
%BRt3fXs&SN_Gj=8\p7plB)MW,Gl6+&<6`'u#]P$B3/?2Xfd13(4@Xid)G7d%)hI9(EOh2[8r6ls<;*&pbQ@1#(nuO\Y@5R#b6ji#
%./tiRk*P<`FcYJ5q!c.m3$$ptbIcLK%U)u7KkB<H&>.7^8aTbm+gia/T-gQ2!`earFqQb=CQ1b>?//5_Z3?Y;4m3OU<jPJM@*%3t
%5`4^V<XtB85ZBUM>7p&RmA]lh,;::6j<GeIMH?m1oliL1bS`_RDu0</e*,\(j>\eDs+"/+<,I/nF`8:u+M:uY7+)q*;OA65:WWpm
%$Qk-o%LBeA"Q(0/J),jt6F.OS)71e6&t:/476@"@>?Q;t7Q%>=7Fp.5;]6I0'ChHGVHZDSEZ;nb>%q12To.dW.iGO4T7G'IM'8OI
%d8?aE6^:Z6%3t/`n.`/R-hX#R4th%[920>9o#\YYQ$p^F,XQWsFo5[so.uHZf5I=W9P5*?*0%I`W(LX=hrcaZ83+Obd,4+-F@VHq
%R<$""O7ZmqS;Y"T["UU`b%RRVP`*n5F%cnl0+G-(#>A;?7RTX;-U%CU6a]hl(I#[Mns&RM`'Jnt1fhU>"V&%eg9*lQa=K*'Pr.?Z
%Rc`C^diJk8;AlF'EYS*rL#s(FLk*b_FuM=+h$/2fMb'$t`ZsGF`&ADYYM0Jq%X?D-h+NuLGe#Xb/*mPOp;h0upP:'l>FBo)3n34>
%mCg$FIk,1)1A`a5QGQBmAm`!Zakc;F+)c2TFL]Qio?Eg";lE8^7T1_[HCmP1i@0Wh6&E9o6HQWBFb2L;*/qh4kjs["el9'>T:&#"
%0W)pl9WGuf,CS?EoK-]elL8W^+V-R_*+0O[`GSR*aS4iD-ZdK]/gdJ35jaLiL*6K?Xm&r"f^`X0<"S'EbhD4(M*`0n\6g6!S<hIg
%P1+NsF*2OL"4LYZ#Rd,s*hJrJr(BY0A1i#d0g$V+l+tV->jV@XKtkRS_OZl<U>i\/U%VM+;=cV5l@YgfZRMoBGOWiUYDS9jHkF1a
%LCpMmRPD(QOl_3E-:?eSWUW$TS"r0ud34mD20J]`m;W!A8j?,;W%/cL46F0q;h1RA?M/*5QdFf/,$Lujp5P,2X)&g(V+0EA/l=**
%7G&O[Ng0cXIX/\Xr%Mh.X2!9^LQatkAcp7"m-!#-aYC2l]$qh6$iYqD54mS<Km]5^`CI(.cDc6KV.JIF)?rmRQTW90^9bB6PM3Pb
%XD\;D`&+K8\s!'1li"?nU:a*JS-&7^TJ^=9Sc(Z#<jEo77J,n_*>U0Z4!0WU+t(O1+Yj17\tmU;f[DSt.W9IB"1Sg'JO2fbK2ORX
%\;(`4=,I_kp2W8f0RZin[iQ8J.IYq8ooJ)6:)bM/8&D`+bMi-4X!B4:j"E%.@lNOO2f],O3e^fX'te"N[3/JE]T^,JTsru7Q3:a=
%XtC`9Ws#lhH,P'<_l;u4`Xqjp3[+f.W09l;>hL1LaR.ugqCmLc%$1hO6LOMB=K-5f-kGqml7(ta:sb#8<r-)JMHgZl1+-ed7["\0
%o`b;rJk>Bg5F*gD,t#E;rdn.O,SD7D/n^c1(=g$\.Q3_bhKfo,NZ6.3(a4;TVNU_-AR+,SXHG3+4jnaR7e9nYI)@[ker4P",.1L7
%G):,SV7Gs'GU)J*MBgPnC52_XRq.LSLtpRJG9cn9?dO`(m(&Eq3nNCs>)6r1;6F2V2YTd(T%Vh?\EVJ5cC=27O*9#gFYTEEWO8iC
%Z]lbD,53)7;qdNL>AcWZRl'_A1'G,0hHES7EB!'&&%=T0kjY"#4@;V2jQc84k##UcCCT2?nZYjb7DCJ]3bAM#`J.jbk"%SO=-"cB
%`Gon:41ikB!(:_1Ni9d/F$m!O=d=o+0ph(+aNj&6Rt'M:0RiGFhRbOW$E#7BVM[M#HnE-V^R,k3Dhk4GdM?p`V5q4*+d&;CG&MqX
%)G!o(DdjZ,l.ms)9P%K;3EoODq,.'HPK4g=%A=<ZUbU_D_V!@j-ID'RPGUMjN<'_e)R@)(dT?L78M`fM.3YotaPqg$Uo?).N[%*Z
%R56b!R0kD!k0+G%mNa$C+K6T6dVpOUNtXJ;Shjq2jd/:2Q`T<#\hASh>=bm&]Y?J^]B/f9n_O?P%Ung*ZUM\P]s_mmP5Nu-$4Y$e
%%]N@uf)g!>B"9mgV1S"R]CfHh\VbuB#Tr`W'.<'$;)H>nL%N/qLGZE;mjJ%g7U.oFi(Ai8P[c3NN=@4irT/h[j>8j]jqij^C\@=Q
%kNMV:^:;'rP]_DilR4ZfTbI-WL>_?mBTePAlY-;P/FfXQo$,#qeLLR)"-+)C0F`TmNdG0niuaj*8G9,e/k67)'c&K5?K':4WTuQ=
%6kU9@Xl'i6Dp5>9gQ&ZoTW-m"^c&k7#b^j88C#bpP@B*3q?l)VUB`fM_ObW>+g^N+BL+&u*+dhs\SA6i&Z07e+kW=/Y?PIe!sBe;
%nClV=6C%QJaqGK4W_TdP$^@/Mb'Reb<E41ZJtra4Megd*lM_t.@UoSQXjT(JfI(/TO3BLa\gk9.]s4%r:Y1ub6O;WtFN<t14+tlQ
%kj^)lB^N79q:tgAk=a-LqQn.Qa=%S*%'Gk)PS\T#p_]uGh2qFX)m$<RiXqem1E_22l6h(Am=CdCh$C:739Xg34jFl<qFF[r]u^@b
%qRFA_ch$Uc#GP][hRM\:ZJA_D(>B?Ek`n!ALr[3tm*C+3G3h(I;tJV?D:EF@aps"<D1A-%f8JbZ\JLlb!.>s#!rZP_bP;h10Rs%m
%5?h,1\n.)LS=e`&j!\+uaj@dJJ7]'S[2Pjbe]OsI>`;DG"#'Z[\YX#_jKXi#jRTq8c%$.)Y72\JrEE++4jY(,4!g2r9GCqZ.Lf5&
%FsB/i&M[RE`JliA>;LR+nsfJV;:!*&,ZTWqU*Bf!3VK!3<+&.B8JQ>90[ZE.C%M7M[to"Qdj3R^Of>7O].*:Z.+k\,Z;.oHZ8J\P
%<f(odjCY&pone^5AD1jt3P9PB'B#2$DC^kV**bsp?q$oAkW6tehNFQ(`)RW]GY_BlEK]lhUpJ;1Olb;."JqQ5:dJ^/j,:IJC)7J^
%&0X5e3$g;ag^!qIGZ3pKPqoRB&ZJ?4J7&qqT3pu5C=H)9DDj5p'9Q];Bk+J"eQ.ZuS"n$dM]\JU=MXiUD!nqNS-=\X<2;ulI#qm,
%8k;u"c@E,;r-Q35f'5Fbi'-B[OkPH+Ws9c?XWFQ=OoYI?LI?`B"9aLW@O#n-X'N^!9V3.M`!LI9Cg#:]&&C.=UXDin,+o\6glBkr
%MP$*<R,>Oh>IBh>L^ZsU8CK.:-WO%0@^'=&rAp,l3e<eA*$!lbK%0b5e/s8>5;'JEB'"K"d<,^#qP>?:o6dS<^SgGKfLsth:FXZY
%j;BKufHp3(SY&r+.(:mRZFsKDdH.<cI/nr'D;SnP;K5M&=FV_%r(NJXO</1a[qMq/kh+q@T14r7LR_WqJaYLrs6q(2]#ghJ?^[5_
%\ah)c3dT#5\WihS0`*O=iF*3WFA!gI!-qbmS'stP6%rWWh&Gbh>;0tf01I@Kqd`elU7"AR8)iup883)I&L"(f"'AJ5:PbW`[uM)Y
%1B*6^(M"cQ54itnRjX$^]2Jhh=kP*&!^e`a4_j!aG"Sj[C887rinBX4C$;HKpaFmh`5nA&<0'Sn-4/6,J!gGaFZapKAO)9sNE:2M
%_3L>XQ'+@lX`_-Qs+S>dQpD!Z[-rM.fFMg\l5gLll$jm-$Od(mqXd7g65_'k6=\knBd9RM]6$3N':V*(W+A0pl2U/N"B1D6)NkQo
%.Fa&\43E.W-5MY4(@*He\!f$#G*EIaR=`VuA4I25;Li?!F!4q\@F^omm*95nE)Nfdd%)='6o$"]5+F8>D/8S:6p::E?#'b*>QKg!
%MOi9q?tKA&FTia-U*c$gj1;OD=hfu+nb@V.,S'+]+_n`&V3>%+]TK09dSXga6$RaMUl%l[9%XS.VUWK4%0ee6J2kI_"YhUoKK&9S
%AGJ`[=USgFq60Q6X+9N6Rt5r!dmK(,$g,@uOmo6N9jf/R-YX>h#H5cpn,I`hs#Ze1"+4@2efI'gK+hrB_Ya4j_Y1#ba*"7hC&oGU
%e!O38hgm4<C7#-&!ac$bd-RVsU5#jU`0[$RriH(b^NXeVGVB*mb_14Y"HnU+IC5p2IQjG^Fp`V[`DhY*5eLdSfb)UA9<'Na#7tia
%-uZ5NA=:3*:kiTOfe@4]F?B_HNaGNDd%&iT359iV7?cq3+GZFDP#\ugrD\5m[>H.MrV0uJoObi5_>&3a2,sof:$8fB-OX2Po7#ZK
%M<f>'HFr-SIt`c`K9aND'a5"#<64oL*Ja@Fo2S&`6)T&>!IjcWS2,IZ`SahH<tF2A-hG_8nJ$)m*k-JQ?-hWA[oW4+du:sN+(;YK
%4FGQK@JKPM\'Dt[hXpOO1uep;c9hks"&,9jo!FU9#BF,_QOeSY(1MDAV2*P2`*2D?iEIfhs/56W,idamN(E7iD-FTY[-@$Rn_8+#
%gfjGnIXV+cc.>dk3g:@'c^+UVi@*Sg@UA:\gt+L"7XlPu3[_*VRlW7EC::l]/'Ll/aFAVQmAb(fqZ'!djXP4=c[GT>["#)n?*3uY
%^V5-k>8ip%hdE$MY3lad5sBf-=sN"WRL)3KB0`Yp\V$cL[DUC?S%6.f9nSXDN-f?@P162K'$3?#s/g!"Qeu,O%B;tg.1H:ua].br
%I)3jEY9m:DQ!nWMI<=M\h4+ECe:rTE.f@0Tn6N.&g"Xa?mC-Rn3Tfb)k8(LbX1,_2oEISTher+#foP3L]CD'hDKk"sE%aA&h.lr\
%-dTNmj&Es`!$XX%`^]J9ZjMl9fHd5@g'[Sg7FT^r]NT5p9GH7AhK1pTBei]rJF=^daiQ\ahH/1TLd!G=FNlake(;p6L_WtbOD;IW
%7hmQsm5>Q=S3+F%EZ_mKoJ@;df#K&jGIq%]Vr$TGXjV)h5<3acch?b_FS9i0r^l/;6<tQUjsi*]iCOE$[TlsHig!EqU[S'Qf2H^`
%A0FA23Q4\VNp75!e6RC$Mb;n!b?PnE;Fl?[&n-KN,(n%t3^NqdAXRTLlP9E$=,DjB?RCAAi[JM+FF_b;'[XFK._t#Ug)OSFOSTeh
%g%josQnZHBV\K:6k.JljUMuBG*e4R'9B/f\0cZY`!FWku'63!a!-f.J@mVQ>0\oQg`Gt"-@#MgS*"mic]0593Or"uFfC^,UM$M9f
%(mMa7HbnmiYcN)(E-LKIkP94BnSG5V4.JiQMJIVOoU[sjAksS)29u/0OKb>G$mM]u?3j0uo]@L:,)??H?4a>"J]RX1N;kkAfqZib
%n67E_&+k9!`FG!.Z)K]6iQ6">feW:XFIEtsjumP=$k-kW_dK#\18^p^=N'qb<s.lE]]asi7)UAl^0^*m=&D:Xo)^Ib38e=hnZI4Q
%QDup8keC??KF3:0:dYlVDYaL-7j'f&V38r_@/Y6[>72ka!G7emeB_I8REBlW)IW"[,;Vg<G$`MOag0&F$!"ZSDi=GXf[[?bU^X]I
%%AiK6B%>SJ8,t'@l:%Ec\*6&=dD/C#AN-M(SYke5EjSppkHn]]rXIU!mATVC!&aU)@n#a(MJ.Km;7E"i,?Q6dZlL0o.iccsl:V.T
%&3H#m$<)VJ^0R$e]Q(3H\tXf:cnmp6>pj(2_bXBBE2FJ*R5YB##eBc/@&7LYla_+NQkBoOWB)t+dijPMAm?XDWhh^-!WBJ.2OqSA
%`6o@bGsEVVhFUF5*[%7=eBR9fJD@/.TothFJ#"0:@LTN!/[\+[5V3**?5=nSD?t^!:NSS]B,=j=IS/h"=+Ug=hKd>G'te[%5R@Gl
%P[lWPW;W:Q)F?oP!#-Ks":[]Ba7XcA]-)_L/ETcCZ3pd_(aMsWah7jT1+fq5g]Rb1=.,5f9B#ITf41g+7E5VCZgIh5,Sr==#fS+@
%p&aq?\I'bmU!j7>`6s'%>of;9KFtW^Jp&&G,>.E`eHLp6JD8tKh.XZ>_j?6W@_q'!9:naS;K]1q[;G&+qd[TgcVaO)moZht-*jW)
%"#d\KlfqZYUEu2KSF4oNGlB`#8_Ys+1WY3<&C7,%k,-[J-p8_&]d1h4XL*]6O>'`q0FNE]63^`7b^7*.=X7PC]7@I22\iW5",",M
%r7<4tO<gtIAKo3.,(:eZ?O'$@jr-UYC5^Yq.-VAK;eEH"*"%8>`Fra6m((t33VB1\_.V+c0B&aL8d\.50&8r)ho\nu'"%2*_-:YE
%iOEC$j`]d%j%V:3hmo[=f+-[,#Rt]`l?#V_G(e1E!>@]Mo7So(-Tb4Yb#ICq/j=k^(^<:\Q<8/@%q.Y492#d-^oSOMG46Zd9D;PG
%UL238qM!VL%oOALkr/*&1j("4qJG=Jq;Q82.\$U=KU:;^JrcrqAPf](ELWqGGF9)U9`H3eAEk8lABJ9:AFeSfc4f9p/i35S1]R)"
%K3n,(D5POt5-nm/,,!)iaqdjW`N%;=BqSS[6:HGA%+gYSNcl=+c:QZnn*DlF(U`7[G-NJ:Qt>7/13k::GdAE<fpk6rQ!LY%m(re0
%co5,]9CA>=$h5RF0aI_iTFlkWLO[#@aWA54-uGF^U9HNmL'agKAEeq$Bh5kW'JU9n_q6;C75U)6bn2\AFN05tcg&INiC8f0.hM>F
%rp=*$ht6!EIL+F`ItfKP-fAa7%Umd`;ehLjpG<0cOZJX,>,VDHfmX3?T>W)NfU/SP9X:dc;CNZ'Fr="[8E:2VB-Ei>WGGoJE@sdH
%q(-<_i[u\eb_93R#+3gV`Gg6k:-u+.cn]ZcW`DtI%^VJ7HYQJVL_]a^*[V9LL!Z`4`@%12nFSHh#se;#<bhI3kJ(YZdJe>]e^2ql
%hnkjrP^T1-LOpXT64tQl/I>om%g>=leMAI(X'D#A%]^an73$p2iVP?%oIkUNT0.F4'ejL9GJh7o8\&>f2JN9PMl4TCs,C^m6@e_4
%:W?fpU<-7^&fO65i<)fZAbm"?&\dYU;a5P4V@FDb3@.=c[P"`$j.,PcOZN2`DjrTR#)/ZYRN&p_1e-:Xq4(V[nuZp7@I)@SY;8).
%"=!(m=")V$Sf/e.eDUL(=jHH@E9"OV;lEn5l-85_i]X?ZH_fK]1uSD`r6@*R2gbB&Ceq,JpH^Z)nPet(i'F!5P`P$\H<H[(fF&8g
%9GL+C(_u:!iK0OYJ>PB][3Y@K02uB$<.%3b7AR*).:*8T`sC'W3=W]p^\b?]q?&^r^O44sNt:Wnql8(;O8Q=>FPklBZ>*.UQV`mO
%bc4&j9nhf/4hW!$>LjJgRhNe\`I5uXC0sX[>38j?8U..J8^\K?XO>lgm&F#Hm6W`1e"EA8>&8ZKljF]eV9iJ9DE8fmGj$:6OX%Dt
%.+@Eur*>#A<H[5RVb2M9)0p48(&o!@*XS?6oR*1[,bDbXKHf;@>1:9q'fgqNCmGX%`W.Zc9L:jYM8_iK/M!nT&@t<WKG&<X?i3RI
%R/X5)N%20+1VnKNoT>5?JkC6@0U5VH87`2&>sTE_jB_h,LXb+XMT%DYkT?`Q$LtKfbqsjo"t7Ti+qfTKbDH2WLWGY]c63`H6"3].
%n^t0j`+.c8_&G`+;D)k[rcE<"Lk,\*.oGjM[N[bbidn&V9e;S]3Y!IeMdQ?hX8++q*!f<a+S[foMfDoAT[6%5+YgTYf*r'kC,;BS
%+Dp50.V;`m2YGP`P\Y%!c:%l]a"cFb2$AUXORJ4c4L\^0k$oqCh0P`C<cbEqR6S94/+i%N+c+GoGS"jnn/ni,lg)Nh;S,9]kF1eU
%jlus#]iM=O?[oVQVcV6QDh>SH'0M0e7^]5gB!?c5%!K>op93Gs(NCg'*PQ"CJ0ISt=Jj$R,Pd*IKm.XhQiY!S)6mc35&8LHH[0lc
%+4NuD3<ZD%jT@0ZgEK<Dr^BE<5W$>PiB[0,68W5.q:KJgB*_n?Z3B6V<8lgFCMe4lEr6B`U*:Wp''I?[9&fHk:n3J%b90f9Xe\Kb
%?#IM_kc'888L^+T<0sRGTY5:N(3+h\q&T/Boh-,OXXJma`9&p*grnCX&\6;981/;dWC=5a6Dd_9!!%jaS)L8VKfJ)qY4d3),3o>g
%$2E9b<Y$3^ICt1^<-F%rE^=8]Jk?"bCoFRq$R\eDp5Ca#Sl$pnIG$FAD9j'NSh^5cSrmo;7fS[!L*ID9e)a0k"5ES^T^U[jc"ToI
%Z@,tG)gC&^5-=YK#c+Q=MHZNr?:4)5[Dg-POIp$W.#b1LfHl?!.gAI9m;;5hbc\'s$/$H!(q#Y.l@[0YFpfn+KW)]C<K\/kB%FL"
%I)I)+,Z,bC>+MM9.\0:C36AZc::m6n4KSdELo%DYklZ:8F!H"ql/%I>okA#5m]pcW#;k,Lk6s?RAk8)"f@V,TYQB#BMKAC3g+tR3
%YV^Gd7pN`R4\qG4Ee<RGQN>2]b8PeIX9SeRC7QVmA-8e(;_jbK7i803JXa]i=;P0WM@'urGduDQV*L1:=</I0eh+35j\`ricS+O$
%7MZ81Ae&K'1$F<imQR:.o^t+kJ!#ZC#(q&8k2/O09@ei42iu[Z$KC%iND$>>Ql=C!Z3OS(1"/%6:'W;][E=r;&nK*B[SCnTW(AJV
%H@UlN@MF]-4Ojj`>o/sZO54_0H'Y68Zsgki78m;c.;L;'GQrOA>>\f8QD>]%f\<SK2ZKI+<TB^4:pC's)<6lJhPHikJVYVG\gJpr
%8qBe4D9TQBa,o=LCDg<.',PcdDWh&1l'U>"'l7-%9NRRK8!%SRR*UP28to$R(sG_%Z8)DqcFeq/`#\rVQOT$0H).a$Ku^oLFq;dB
%mW>a2'fa4!3XBlKmT.e#?b/0A.b6/CQVg/YOa]i,SZ=Rf^3G.NFBGX[%R6EI]!R,.5?mA&XE:!q0u8NK$OCXXQ/3f<XUB,lo`:!.
%\Jj`P(3B-ej[.`@=j05pU"J)"kM1jl?;\KK[M-a>Clq;h<_M?$aK]rE6aM"eJ.nuTbed9%<PM4pKT9ltC0kDI:5'6M-^^XfX@;r#
%(a@+@H?giYEQ_fA>J)JiYfcjKbgSl-.*:hCiW?"AkXOr\TbY`_Il]8tGXu.Y&u9p?e3/[Ymqf!a>bBJo&u:o7XrJr,e\e:)LW4m&
%#$0+*SjM&;PU;))?7F!:\;\5%4a,6%b2ILsKD`W[9r=`FI+RqE4^sh!o(uOnKNGqA!Z^p'fZ<"Ci_<IPi\c@3pcM&"E<qVCME(mE
%W0Wg1s.&9ocdFD"/5"`u-?f*M"-N8Ako1B[pi\Pl5'X)95%[XSDr1;FK>N([3bm[c",EKTYti'.MnS(3j)kpl8*O]%7Gm8&]-Dd&
%%r@gXA]hE-T\Nl5*'X\XRg7sH@QnA/MHc!!R%sbV4TY<KGCQ)a-UMY-)[P_>HP#9][_?g>Mq&2J<XNMICd8CJh/'I&W+"9bQ6@c#
%1d46)Kh6?LKUQJTi\YFq@<UiiVl/XWjDAO%qtMdD+g$P(4R@R&/ZYZXAk?$/%<62Nb+(IF_t(\VP\e(hdN>Y^Kf-knIWI*[[lD1'
%Ah.!u?<pd0GdXAY$AS8h,2FI0]6gC_#D[BnKb_]+5I_88:5^9G"GL8K/E)U!#d2qJ]6nL'5M(j42B??7Y'LuVib;=j"ag?aX=6S$
%a+5#.!\LSDK[ZD\`[mVmA]-&E\3S6#ku5cKR>OL@9f#<\KWf,H\Wp''?!*s^jXSe7[H(3EeQ12GW&8?gRrE5c;i<dAME))P^7Bj+
%N[hFVbGI^+f0\4oHB9R(OO!6$&,bP65jbY#-]P!AESB*?[6/m4*'@JS#`r=NGe(D7l3GbkVr\2$Ef6r&_MCh3/"7*h*f;OERE*-S
%ejp#u`NR8;9$4Z2gel+=3hg<,-6'[<&;3<PHT2_'PuBnC.'eap-qU9PLLVacW(Eb/0'sYO7Z(NV<";EAQ5qtK(UT5pMc^K,9Jfn2
%9`9fZ2U(g-aGB!JJUq"(FY6SnrlQ6-UJh%K*KKZ'9gs.l+S7)oUo@J6CWW2EC8so0/JK5am.24^2H?BW,j^hF_p^#?,0O*;Wo2:Y
%*9X&p$G0\;@mP2fdQ=XM$Ds[h_-)d(@L5X-_J>#KX\M43^/B!5pp<3dX+e?tS2U>3\#J-V@R6"?oWM%a(eT6uUuSfgRt#jJi+EbY
%S8lG9I7_A1Ni\TZPZs@u/dfA1?.AR,e?jmYPA_'`->UcE.5n*2<^=r)Gt"s0.Yb8P:iI*3XpAYq*a)6n,1Y0U&YU`W$E.f&pO+r@
%)D1^P4GoK#CZ=$V@nrifpP@.\_am`]h2JjC_/q$f(dc'PXJsP&OakA[G[3Mjgfeg&cmnl=RbXWNWHPh]X62Ui76&.qj>RqQW.^^>
%7T=JsRR9;^ZF:&.'3rj4>/dY[f!ATmamt-rL-9SnnZ@fK5kGVF0f.]h,2ulR#M+q(MICXAgQ!)Q1].r#O7k2i.BWQd]?DXO6m:K(
%<IkCh_WgDuDp<N2rbUU-IP\0]/\W`Ygo"Z&Hp:`U<<?)8`K&Th:k`Y^C<T_1S#f+&g&dj&=3W_s3b48Aj(Z4@$u^Y!Ir!CD[kPK$
%Ual`'`*Q>Y4.hNS(G:Ogb.]mnXtij>W0""^9r);dku$;ep@%Iu-pW1b"PEN.a<[):Knct'Cf!E^7*Ykn6qF?#?7',(ESW#W9Y_)F
%n;C@s)S2$G6^;lb11^Em.tPtP[PYigJ_6d^cQU#j[W?Qh&qd`hr9)mXJuO[.X)nsKOi9u;GebFGSP\*434[Ao'j4U\gJWlOP?qIT
%H5u,P/%EiC8C3HIpEiCE&PCAY6O._UkG_Ag)F;Y7GX\t?%%H6'g@H$MQX'A0J'I\O"]22H]QHr_et)D\/!+R`^WGB&Oj5]aC*]^G
%$Mspl2tpF]*'-?T)GO?'Q6"BNbu7^%$KbKn\nkbT0j_@93IJR09tg?`p$utbrV$6&m&I7\,m]?Ue8bBf8YAja9_iY6SW7L+49q1R
%@gt5!Qm7#p$A3,)4r^$3b'%La'bR[88BLorEUsOj2`AB^_j*d.*6sG,185\]eeSG@ppg;WefWi%Y:oOS'DbEql<CpuXENMGJ0Pn5
%Wd7NV[?&Bl+ZZS7'?[[L4CBFP6s@Oq4'0/Md(b]'5)*L4?Xdrp949f'W+p(^WY7!)8eGWU?'3hPBbI]4HKAhCL<%Z;=McJW#Cht^
%(KLV`ZD%H:=$"pB%C$2VX#&drPak3gUrZ+*rUOQR^:pX`MCOb'Sj?TeZ>`kCXjNIVhBg_1<-A/!Ehc2=![qb]JI[Y(H>Tsi9C&qT
%NY+@N%SJ,?9kC!nQap'7)(br#&]eW[>-[#EQShem<N+@AUU?8:SMI(q\dHt&qC,OfUn8hLjg51F`Mt]\#-(9B+q[k4qDBSVf6M&E
%G4p]bQEJa:TAh\>9@?k"e!+,dFo#)iJ)K$r48b0*Pmt]7;P$]V)'8Ql[1o`;b)d)*4j=HlY;1p',cAtX$e?g8CRSi@FAA+meD`&5
%iM!7m7$EV-bl5a-2i6QP`IAnIT"$[(%+I>Z[a3WZ*hf!`SU(N[?=h*Bm(4`<G_Y=ZdD.#(SW\d%D:19Eg:0b6145&n\JP3DPt):]
%RKTkaX2=nb6lDH_X$nP+]-TSW02[\Hf'4,%(uM'RYJa*Z$L/Cc/[n-%#"R+!`Wd^n"#Zt@9-b/Nk%k3&c.U$<P2`Ba0?8$IAf^Bc
%SFg\i#!egWk2ZHn`g]MESpSYQ$(_"4-3.2+5P6")k&El_g;B4!b[B#53)^'*4#A'+bRNOb^;POmZDLcYD8[JLRO>@><@5/L=<fYZ
%7j,YbHmL(N*@E<O26H]'YQ[m!L/U%DYRBD?bo:no>Om`??k5Oj/)/+OBk0T/fL7XGX)L@Rk'=RKGZu;[6#"mQYO;dV]R!Y;6#XuL
%!S-e.GhnnM>pePHFS2lKV(eEngHa5Gj"l!)BJoTYDf1Og]3q]ic8p8FSXEIYJ?P*p\+hQO1.V!^K_ZDc4'O@;Dl@top@5.jI?Sb!
%eom4Q;gd-[X#iY5M.HEl&=(%m22bTgfM;5IAejlY;VBDN'.@-OC*ah:gN:@CZ2Lr$i=+-)&ZN&WU(Xs_mg44(Fln,;Nr1]S3(Bnq
%pBqc3i<Z1%;[pOQ#SI1LI'OsRJ5pPf_UI\WFZcSD"L3n,$Y)`!^<&q8\leJK+X^o_/tsBWOL4I;OiqJGA%5KbT$4m54SOYA;";UP
%F^[#IItnP)[`-otI'^P]b/h,!mBYsHZHeITB)JH./e.pRXg9jkO096;/kd_Qnp.^nLPVd(fQt9A/>Us)_mj:[d+a$9rA,V^qO:!O
%*'Sf_*s=(t^<:C&`\"jUs6rU)Y1X\p"Rd3(R]_&X2HN(=O8W?4TX&>NbDODX0Hj2FOEaJ$Mb?\feK_X`]9rbg[=c,hIQE-i,TL,i
%X:6G?A]<(G.Sbi`f(3=.Nf-o+$")A8=W*Cbf"tlHT[7)gnJ\Y@(=MDbB&BMhN:4Y\s6Q<U!4)8Nh\$/UO9n8g;;3%ACJhlu!QkJi
%(H0J!-:Jrmo;tXk)GKM5h94&;&mVCkBN.?^,nDSo'JDs=X5_m(&_-$X";R5s#P,L5:aA@Feqbd?9^5(g$FV*B;SqAKBdYSSRFY(F
%Y0K9<XJH;)S@.i;+\qRg$sebPK/3."6!fq9jr%fh%04k8h4X.VV<=C?^fpH*$p,0[0C`+B(bd8p4BW:dfM/:8jY4`NI+&<3n\?uP
%b(X\*e+3Pj::tZucJB%GE0HV!RmWKGVAQaNQLa8S-\)khYl3m3rh4K,D_TrGo4MR.)&hBFL2P%brT7-^'[#HET7Ts4H+D`DHUqK?
%37)5e1;qp:bKtN-e*tC?#IR%$^'O-Keq?pYbcB2kC7]90?j1oeM(m$R/-0O^f"6d&!APduhC.qUEfLMn5J675f,IVK)7tDjl:$'`
%<,#!r8!lHV)KF'I2T(8%mUBbnG(3*ldq+X2g(X?gWlf&:*kY',ARWrdn?o`=b//q,b1h:0]@naKppV>Kj,UPEo\i1<RZ`HBa(iba
%H8M`\j/R]ciYR[O=RJg*(8-7,HIuC@oEdrQU<:N`m9&`K^DX1-D[5ff%*c#qJRAB9oe2XicSSkRku'#>WsqKrrH-\Tb@#LHk?'Tu
%>oj0`UL)FI*6`jNba@O2^;\83Hhk$'R+5FbHQ'h1I[i%ZVUX(n`MBBp=2@$`#WnD[H>Oal?1UcL2VKhEV28.Nr!_$M4sVj8'fW%g
%D^&]7KEE,2?D@1]'iI\\Pu(ZkDd8REdUc,,-`SF(4JC>C6H)jt0_p0W"]AN?e\Y-thTd+mJXOs#j3S(si@C(e/8bLHB^KVUH9I$j
%Jgg1a2nlq%@f+@*WG4VR`U.a!e6WKd*B'?OB2b_=PS;T&_pZN9A@#Nu+3=HCB]Q\Vm"l2)#3)Joqe1.*ZQY1*FG9!W]<>0*;1#,>
%<pX]a7j<INYk2d+2X`p3"pDWd\_\%LIQ@A9SM6Z&KPaVgbG=ppeageJOg<"S339HnjbQAYC;tu;S1`TSiYm^@)Bm*\4I=5#rF60L
%KS<c1bjViA]:aDN9e"B>cgpqgs77UdYR-LC;jXFWM_c!/(=Da$ROJ<r@-UJT7hCf&i.DYXbqe3XL[MZ$Hs!8%8IbgZ*-FY#A[oX#
%ZT4iN/CI)$&ml=NaI9bR%]EP#%oq()(YJHp+?ZV#%i%etdR)XLr+t?q=HO@sGr-Z/^C=&=%"%N+&X\I\'I0HS$RO&s!]biEA@3SR
%Sgk:@d&9Gl%jl8\Y/./1mNkglU>fk:<&@6'`MtO\750CU(-odrZIij0mPqLf@S*E#oEEYpY!:-IK;C"p<t2(+J6be*&2!?4W'Y]^
%N2d.d.8cofg#Jp7G+c%^Nu1=)oFQX1fH<5\._,d+.eL5]pSrgr,4rh7"([i9&I1jCP[[qhVLlWncH,Xaqh^+UPDkQd6D;T/WEFV*
%(XC_ji,P0eKb;!(fHsB$`bXPG0(VJAF/,c/Hq>:?C>3VrS`\D2/hJkIEhQNM<VjU([n8BMPK44b%u^kTi"oOkXL=J'n\a(!+O]X:
%B@\/cSb2MA&>Z3)9H"CPB3>7LkR1`cBja.\[3-7s-o.,2qss,9I:5+sZ[dpa4<pd+C0%u4=IJN0/d/'fH@de9$_<6jZ@*,Cl-U27
%R7af0$&_'Z_qN^."]%CEX96Y\W@.pV.rFejMIeI>:hsIh,fM0>brCM)`#`?,<Dd94KU`_kj$Lgq&_VjsUoSqNJl0WsBsFChV30`%
%"\1i"cK3Ekr$cd?DgRPB=X04e!^_!tq-Z_OAP+Wn"^@&'IDd_5\pQ+V[[1AZOdFEgiZkE_Xt-6L*.l%'[tl,sQ54:BZo7^hd/'QG
%WFR8:_?)o]CceUgYD]8Y*V`f9,<!^K)_l"4L=SLTjV=H-57Fp?$84a=dCLIZ'J>cdU0/<!G@+H`gl8*jro#qr-srJ[6UdUm.8:r.
%HhDKS3LYdf-P3B@ik4Q[EN[A##!l*\Kr@mhRK.IZR&ScUfgD9)(N)7>/r`W^0:;j;Fc2u7NQS?AL2g4nU=uT2!rGZC-"$Xu2"Yib
%r6:PG8EO4\1<YOuQ71<fm*Sdb#GXgKqeFm_cKtQ#FX\I`Q1)$I,ZpYqmlR/XV^7-gWAX+Fno*P)G_m+fEL>WFW?ukXYbt+&)?Zu8
%1PhlLGs4PVA)%<*poD$J[0e#+M4`Fq!fN8Mk&E6;Uu]X(P"B]-=ftgQUN=/.2Ph<UE/>nf/`O5I)dKM>k[#`'0`_UA-GYsI%&9lQ
%'`Kn)RF2@?X!%+]K/CPg1;0^-&/?^nd:W.3Q%Q3'81+cb/eO5'Oe72n9J7TLANodc;,E(mZ6\1m4\&CH+i@VBHnnUUV&6!@VkSA#
%e>@W$UXlg0G%kY*HVq>28emotPu/][/_KAc;E2*Edc\d7^cMXZJrGRtI_2,_4_V;Zk:rd8II<co1bfQ"*[N`5;s$3>p25o(;7/X"
%;>!/b;3`5?<9)"<<W8a4eU$&Mg9jcq48-@9.c9s!J%XI4o'8K)ro?7#Y'm=`h5At^IB'HZ)qFl>N=(>fl=$,Y:Zm^0*Z2L\^>'L_
%^^S5VhG>$tg*C1f2W7&12kr%<-4!h!q4%L;<pM@o>DL9Z-m0:s<>!tnWgUcW)]FX6ALnL0Foi\mJs<3;P>FLRVTICuD&:<29lkKB
%CD/*C[MWE\A>qcMS&4A*2YD5:.B79KTrY-s@c6L[UfgZ!I(RbB<d"V/C0!;'7S^FiYE9'RFQMQ"QdOPQ+i5@r$;.5F4V],D!eRA"
%FE;g'EVLWrNJeD4m3)f`G&jObG)Si[o!!UEb-:BE;.pLO'O4g>DLk$F9'ARj?Hlf?W#QP9*rH.Y&UcmR6u&sRfGu+q2G?Oa2RF7S
%_$]%e<Wb-Y'[N5F7*0W@3)6C--V9]b[HZIr1rYk:Q<?rUKf:+@C'&st55t6e!%m#1aegZ)1Aid,f4$dQD2?[Je8U$_B3C^g80(ij
%W+`6,1`35VA]_N"9k"s@V(X`5X&L$ml5[.JG99#uIsm@QTUkrKLl:QJ`LlKX9jLi2A90Ba_lWXX4.!:[/Dh$PSN=_9d5_miEkYa9
%LmDs*:@[JgQUs#,X]?dpeqP\'6)^IN:aCjATVCb*9VZt5+frf!='\,h,u'ROlWL6bU'odgjTAbspht/s];p'Bg7VN"'pkH.P.#dq
%hmS!0G8'qus(<^*WVWu_$ZSB'=HGC07<N1@(f:mAL3kl'm)Rt_+s"c[p)md*:pUko/I,-T8N@%knbu/-^PUh2buaf0*QRb!Linf?
%P;'l<acaTnni/k]`7_;_V`Y,t>B?eE<3!b8]1"b%NM4`s0^66BDs`Nn*TD'S3p4W\FV.%p\(7Xt;0dOnUuU$J'?bX-?E+n]*.Ko4
%?taHmb%g)X^H@?p'\QVE)6O?k-a((pp2r%5UM-tI?N?7b>*;>?D`KIj8=N*=An$e@N7$rWmWt5aGdLeg)?ibZMiMeXD\OZ">34fg
%e%l%0TkUo=1\CiM/9Ui5O/BNo`k=6O2=:P`l5THuI)pEb#B4$plWi659n-M)VEZ`_;2A):qth_aEGN5oF50teR%p<hV"ipqb].QI
%#]nd)D\=%.T)M<u*9E7tjp,=T>O,"Nj45-c*5sNs:oT>Zo[\*tk.%hU,WOXCr.i-/Iq:Eug0qR.@=3E:h&790.f1uMGt;`+VWCO)
%,?#=2e%PE2?5WD,b<ppBeo]BXGdLf2%iGG=Wf5h9Lj2&V/gX?p.[>$mI<=M\h4+ECoSs!:O,g^4+hV!fGfJbQ\%p"3">:dU7uqk(
%L0-`th!8:UVOJjNU\0hjDti3KIP77?$X*MOa`uFq\:)>u_=<nOQaFcG;\'=ta(2hdDf]`1E'0TWH5O+lb@Wkkne-b'4S>j&nJKEh
%Ko`D4AoIPBGnZ<tX[;[FBd*lkg.n:?p8P$\#Om3^^>8E<'sH3C'\g*D1gSFURYt2AU%8Q$%j4PM@m1?01jp4VIGprBqfZoSq`5Pn
%]P0i]qE-s,j>a7f+q4C;OqZU'3mdUsJ@)bu(sZZWLmu.O5"qjM8_L7[qt6ot:4uJlN'2Xg^@h@$k>jCWnaTZgI>ZC@LUL>nqW5"R
%%<7!W)ER>=:e2AF"qZ5+oVYi_d4A"TG202.claVYZiS^2b80:s$@P/#pUAKJeDV"qZ)EfN>Y$e'4k>tX*o#YcoRr5p;1(AlFd6k#
%qK?f-lQ.Y'H)NJ>NTI/04tLX?qT7Rl$h^9?iiK+X.)Mikq"sY=mErP2%R=4$4B*PpLM!jAk>dmUB5god_N\'NdZD^,K2$#B*Rnsh
%BI4=GQSZ2Z63&o>H"q.F9nHub!B2KWoQ+f-POR-+-'<XOIJ;8aM!J-OQL].bCTDCMe?g2fcIDcPH%/biH%V5de2mbNp,%_sm,)+,
%2T.DDnQ/_la:Jf*Rq\<8=D\>B@O8[9L/1:ls4)-[D=XS%g`uCWV0.9K>LVtdW6jVck;X_GrUFsa>5.3i29"`d+^"iHaZisUFZg7C
%XM\iXR^]ES?p^"Ple@GKlLOl)!*nD$7c-=mU3_Cs#n6;f\M>$glq0oMNW/28hhALIC5_QAT5X2pcd*R=+,_THpM\<A6&.56[+=&*
%[`)7NO10RZf2$h\J&)rVhB-FhApX#O"\Kh7,1;!$"XD$Xcc*tcbBUSp\eL?dbma$9A,Ek3f$c+tM@ruT_!Xg,Tc>"dGVrpKOZ]RO
%(4'6<c&d=bftF3b+8NTmR(W0B2bJ+07W+9HVQZQmnTrf0O"O[]Hg0jo6IB`G?]k$\p9D"=c[<CmUA-^/H`qVAo3aa7]E[V?[sO;[
%q`L<HkW+n#\/bjnVl-QRBdEF1O4V/7o?ts7d5\R&cFLCHEJ-0A68*DnX%4Ya;tSY9X6F=<D\qj#\_ZZ#'T[Y\7p6R/hYZ[g2D4gi
%\^>L@bM.16Y/T4'HMalac'$;7o/rHU>Ef#2]IertY$fQr9rt5Td<o2D%FX9SO/@0go4S3I6DEpt4'<Hol+,461n'Kk*hBh/p<q]F
%eS)g+3?qf!e@L0p52K?$D>@n+m&&snHsCn*dc56>-9_'J1okH8F<=5q33(d3laaXlBf$p`4Z[T=mA7;lWmOebd`3AlektltB#>!i
%:HR^hoK8S'$a2jBh!Nsoa$,PrVZs3rqe10<dZ14_Z(%=So5WT]'A)&HHMa\:q&+'uJm1pM/gM+O+aeWS%;^Q('N0$f7ZQZ[D5.3l
%&@+*prR_srrUoQq51O]Q4<l;5XDSquh]p-aCCL&JR`)\=VD6C9C65==gh;R%c;4u$m6X'S*hqtDO![(LIem_?#d)nN#1t.5=o5JO
%o[U.Xhs\/GhR0lLa52:1/DX7s00>K'PO[DJadD"Tq<heSd\](o"*X<!5#0,<*<3Kk!rhe(<]XC)&kl#\Q%!Y"Mumu-;2dW>oINVN
%4J)iPhY:4%D]\W@\^GJ*9,8!5A#8'%@qd\BB)C?K=(AV=l2=`J)2a?db0u'-I[EoTHSf"Ym^Z1Fo7"/N^\>c4(AdFkp2s.OoA*aL
%qJWdehb;"-+/e+)kO5>.'STb??K^cipqQJ_s0p`D)Du(r\j^B01//0@9Y+)PVq#-0@*1*"@7$?7EH;ln<VQ"GOS-a1b@F&Z%sT,:
%+%'m'>851:1obR3E'gEW8TKGVZ\4DSF7(5#+2;?*Ma^?BCZ%60Z6`4:6#gl_n<KiU32<^+P4s7N\W(cJ]eG"/F&jcB20;>3`^/<,
%+HC<*c,<*3\bu#?D75[1MN7*)eHV1kP,BYDJ:fm`@_V=P3Oj27Mb<DRU+6GQ+:cX,B,2Wo!DVAW/@*K&Oo(LONY$4h70Pk(Q-5Sa
%1?fL/r!2eH/<F8rNo(,h980n)c5WT.N&:3q;V>IILQ[AT2WZ/S$5RnNSsu#*%"bX883.P>V1pD7CiD4ZmgC@#:7W6D?jSN!Z.Q'+
%&AC+(//^LVLu]2R9TdRni:<@A'.T#Q,UqUCY\.C:hG'%1\7uukV/^=;[0N#f=@)hl/.2_j!9DI]#YLg\lC#(aHW3p,B1>@;Cf!]i
%ee)E,W)5%qi"J*alm3Ygjr>gMn:Ga"Y'%iI:qB-s*jTiSLZhKEd271o4:o/"715#GJmqNE$g0LdjVIgZleDC;OAirYR`7Zlg:`dd
%4:ETD!m`hjl4^Ooi6RGF;2:3/ZoYX6GsI*iJFBVb3,iaoDE8S=Fd"6N8HD*e@pV,#$P)uS.Zi;I:fQ],e4le?'"a+t/Q4>,Dcha.
%?I@apK1Y5KSV!??L0<-L2Y>074SPp*>E@q[pYWC.a&IF;oM-:H8^[$/A!7D%1IDf)W$OL,O7NTcQ2tO9Cs,_G<t-o3Bm00-Tk2E>
%Ij)kN5ut;6fHhJ:BnF2[52]9Yjs#;$"Gqpkaum#b)F9NEQlP99Ja'KITpAit=]!(!@?h&D\Ha,*G4;p?4&1MP9@\I+B7i`';m9M+
%n:1-UOm:7QPEh#gqMnrKL7'>3$)69u?ZB[O0qmM1X0ZIf`2uq]:m@dkjD*uhl)<eFTZ6e`i5Yl+"oDaN.q0r]H>6_3Ys#6.;4GP/
%ba!BCKP?XtDbsFf9b"7)'%N3<B8\IhC30sVdP9al)+W]\Yh"gZLk?TYJ_4&KgH5)/OJ^HJmaa\EOj)/Uq!Y.;Y,b-=5aD<R3E$"4
%r0oA+>pKYTbcFAPH=S;c@h)59/%J+YI%gn3#J2+FQPLZXgb<<%L]JJbrJDQZTN?n[(Ao3mL2*5mbupMF*+gcTCcVu2Qi<>RqEphH
%<*AI"XsB//$Ve.areE'kV^,SLEki#`2=&m[>+?.RU$sp1QtBBT^K@\bN!77^3hfW'`3N*&8m.012Fc3,k>I@Ag14PJJ?mV\p,X]s
%Gm3a-k#c/mI;sUFNQg>2f!PaI<F\tL6P3pp"%H*::.WC^Dd37XcU%QSQi[XmJoB$MP;:S?KI:8(R,UQaPXY%Cnn./\`'qH;Nq3O:
%X`L_I%ub"^@=U%AL<UU,6h0c+5CT)M;jU=!b'(L,U,5/=ec)W6;PJ(U7pZC5B%u+&6L`&5:I1puG[+SO\gPd/A`.-K9ckt`43.C8
%,Sb^7^,D84U57cPJ'5K>S-;f7daBZAinqpC0kZ?HellIQ(]2\j,00eA&Wb2i08!$OnenIhCHaJ1:;?Z(>3pX*-dBC8nd.u/rV!(+
%5P2r@Tib*Km*G1_I?GTqqdbH77P2op(a2g.UI'^pP<e8YF/bFlDcJZHAth@rIO2]tZt>>"G11Sn=mA=7%)GkOg-i&#hOLTVfYHc4
%m+TL<Hk,Qkk&Sbd>5CG;P2i]J@Y?Jd4!qR_h5R/>Z2eV@HD,QCLb:<dcn[=/-tg),0::qS$j)JVRJ(jNkUQ32Nu^85L\)I:o20:l
%;ld+HE8,/Y'>"mFdBuP131is0YB\\]>SgNU3BH&5Lt_FTNUo*6*P4]T7Vd&b%JVD4bDir=="GSDL0RFAXU?NC^7=]!D16>HUV;5n
%(DD%ga\*c9J'[lh_=Lrk]?q?bP-`e]E$O@$S'KonK%m<u\hMal`-5*Xfe&LU;"&!,,+XEW#>NBHQ)G$&=aIDgI+baKce@?l=/GLK
%6'(3(kRCXRdi!+EQX@Ho+GEXFkU!AC8/XN=Xlg8:3TVC5<E)"G+R%00&+'jX'IfQ:f^Q>%>gSm?`;U*p!3eQ:bWQ),V"K.(\7'`p
%V2;0TXUtV[e%)(]J\6:)2n(]/TC*7]Z/i,5)%M4fc3<.;p)F2ak_/3e^4IJ?It7_QHK$&<&MJS@`7tiS'Tp`m[^:Z0V2K1Ge1249
%iR>3=BHBI$68gL+TJBR[Ub&cpQX:e"&0uWK3;!sgZ&4U^H3Z`ts2ifL.Y8f#qo6g"kDp_khs$4:lkKXP3b^2En-FWmWd!,>O<S89
%'Z83<mjH.'LHnJKp!t13$\=u-'5,T#JOnh5L(EV^#TOAs?KNI:;W*<aV>(OP'X81E35cO7+lRL,)2A)"JoG-)b1[,Q]Y<91%"]/r
%8^irFO!"^H]8eT8*!8L$:h$Vh(^P-abujjI$mZQ0#e(Y,G].43TT4RG:MatL*Wpt<A#4-!+pNW/C5Lk``'DULroHKI"F^",p]h[p
%NUq,eK/p>C?ne_`#j@Qs'TW5"@rb8Vmgaj^<KeKY\r$JY+aP9NKI[+%,i/D5!@^I[CELd$6?e#E01$cbT))jJN"?8k,Y._C!F_=_
%h?Y>-;MYh7i.G&1Uei@I3mCk3"LXk&_AZAR"A,98dg2:3!Ka$CEIY)EO4ZIYacUcE"-*08>2AmLO\1pOaj!#D'<,i$7eREu@U7hN
%_ELk!_';(q7uU$2HRd0%@cZ7Jc)kh)O[-$_jI:Qs`"u:kZ[Dt^1-&gVm3@p&5;"/cqad^<ojf)*]M>3a]r[tq_:Z7+X0@UtD+R4k
%[Z5H<lL!7eU35%4Z]=Z[V2+KiO_Q>A4Ej4YMTA_:R"IKsTq*D#Hh;rY>O%"P(&`B`k5S?Oj)kfHlQDo;V%F2dE,t%[Pj8g.Yisf<
%NkBrcM$!1RYusMB$o45,36W-8TL68L#S]AqU!&&.In)^9%((KKNd`7`6roCc?I9:JX>Zc]K-0UQR'HVtI_=L?rklkQm.eF\pd%]u
%B!-:G"&[VihKA005p!CE+g0H&)f=KK(^3-G:]sXpUE;o]DDaHkd19M@>==\irEp_n%Tco_O!KIm?n9!d*thfB&J/pR,Dki1]<NEE
%Qd3='I_<n.kqSUWc$MiCBW@gqE-t/?BUrYQ.A5m[QCb))GP$M70p4bT58]#a%@/%6i2Bo2D\M(?RRTLcf!E79Zo7B"&cM2p4TlAq
%Ggj-Oe*)S\K'D+[&cL&V\aF$!5M/TjiT&V=%k]oVfD`rloL%R.3MTU%O!=CN(bu7Z$EPUh1YV<U8'tJA"+!I%MR4kA%#1Ju7AjJH
%k?:8<phe;Hj9cV#cu(mcUlQ5hi0C@RU2T!$mDOcSX9a=Fb'eqsV<Gtoc=d&O*Ci3h_-'`RT'Yr:\Mu,-i=?o\3d9Hqrnr$9eYc/q
%5HrjgYBtG0lmNIT:mHn,LP,lNZZ1[`UqIVu\4?<]g7k>F?baH"SF8ld"ZuYPh;`pPAj2q2T5_CAn)=8d%emtG)]_f>K9o`k&]@3'
%,?h:L`c^7&FqYsSVQtcW48'g*_AItIq^;f(mHLP$a."[@Im3SrW\4!Xe%0M;$V;]]YnU'mAAoKZX7`d/*^8*6r+`!5![#!mV>u-U
%IAh;GoUg%D[>>pLe,1o7FH)C"+^K+coDHAi]h,D58!9]10-L8sLCXDVn@fdt(g`k).6qAY@MBfZJGT#d^LcR)ph@el`N,>n<A,&<
%.+:AoI=#IADTuA$n0p78pC2&paqp\@3'[@9'`C`VdKR#2$d&J@&qM'*@9b=4r(B7,+o$g?qVepd<_c>Q"lN:WJ\RR/LfOrKZ>51;
%7q*9o@?;;38NCEln%s,b.9C'+#eSo+?1C.S`di0\H%I9A1s];8\l2lYV6q$?7(Pt[iZ%S<buMUi'Fh*D>jmqfkfk+96WOF4lu5>O
%&fsu.Y/5\68\XsK/*ZoecW1[nmYfW1,SMWm<#;KT#$=ni#Zl+*P0B:&eB`UpL.6+j6*JjDRomdr0U015U+6:s-j>ZKi7i1TR$=o7
%"H9nVe6r&V7^lh8`j/RJ;_c2cesfVFY]@O^q&.2fLl8L%@uN('gM9.tUt^O]!AXFrfD:7NJJ;820E;teR"KKWS6[lPMHllI3>%()
%]-bk-'kWHQ:%)NL+H&j3\HWR'<>)n-3QAS8P$kZ#aiL4I19,)]Z57<Po3\4n(l"u!ru.C\->d4[\/UrC6[flBQtpt%36%6*i,J)D
%!sK70_&8o"C2g85(n[65:kKl>#%F0^!%_en)?D_ih,%oOB<u`\5aE@G0Y=nMats:9d8J4tXCdEsp]m'<7k2_Vr`UGGLJ'-c"F=oZ
%Xq.Q1?Qr:OM1biDh5!AgA341!,qrT1gaH1@d]<F\(nXV`k%5eq%]TW?fei@'4=C,OGU'-9$_UG[?:8lN;BIoj[^;FpTR4fEh$I,/
%lW.FpPP48W.EDm_BfI316Ip&7]="-hI-VprT]VE["s:#gs8(HDNK-$=VVu;X2mba_6C4kq__M<IVhh;!;ThZhI5m4j*'ijQ/F"^r
%lREq#9g2.\UhC[0TZ-+-<Imq%h74IBKc\Gb/!bjY*:^UjC5mM\1U@G2+Gu\uD3ZG99:4?NJ<#MBRLW*H+6ukuJ_Chu+<Xj9Z]JM$
%FD*[bQ*r'A+l=f8/7ZD/#Uo1>P8ZphWC^k>1$bf2f?H*9X&>:UW\g-85?4]S`]g>!E$Xj/WG@5eP<LCQ[u[ls(o.l>BfNoh;!R;V
%/e)$B@`"*cqXW"Q8VT(6?K?dJRE)RgpZsCK/08pLfK,<+V2W1I1!LD<.4IV#6=OCImlF,c*V32@/1V2V@_]L.6.DL)eR5Qk7FC0c
%SQdNgj5fuh>?.lC/h9N&5=A@t(m<9ED8)E?euf]lau)oV"3X%iI\&qJ'Ok2-K6W\-MSX]_n=$T:)6#e7:Pee.X*$,3SVMD8l*`5c
%PDtqnMZ[reHZ-nO,Nk$4.>dsr3MPG!cna_m"Z?<l_1F6jE*]us:E(O:*CF.[^dI`3&:I6QJg4^.MHj5rJ[p@(M8TS:bV$O4BUPUe
%T.CI0UL.E4(j`Jo!hpRuTS\]5-nl=R8+9trI;%0DeTAll,5@NJW_0T^&LrJV!*^FZo#E3s;Cpk,BKEJf-p_AkEP(:jj@'M)&#A.X
%EOu4`%ReQ\N2.H,a;h0S>j5+2_6SbgV9uX)O50T-Vf=^Rf*!W-)3C!cG;[\l/>s\g+a4g[IHrh_@(>4U#^q*0.[[6Un3QWNC8EJG
%Ymkou-:g2E$IHRgb[Qf)/:EF=07+=Q1Rh`res:U4;>/RE:R:H,@S$BuA+%:>AL_A=j-rjP1>sRJnl&pIQ;O$'b[;X@l(4Wi-sK:^
%#]!G.N&9-8XaL-%Nu^r\5jG)!=uL+pYn72.MN%g+nP9K:iE-H]<CW$%`AR$m0@TuLWNYikJi6n07^JaTR_]f5OKMaIES=+qX*&d$
%Fab-n2?Mi@jDds(qV)drc6k:N.7DmJ]_-.e3NB`uG]?D#K?>Ca4mF<f'U2MU?KRZ_!(dome]5c\9QMCFHL\[,1RbQcj8D4kbsmQ=
%f0F!M(qe$5#T_'"$QK8bP0,SVF!.hVHTVOb'cP643$8pdr&"t!NH4dJ39[bUHN+feAaP<<k8FSR>IL<Ba5P##I_LNkfA[.^$J/lH
%hfS4egN"6#4Df(:N<eKDE^W&:f&pIcU^?;UQ[:0d<\DP[M*)djg1?/jPgt"+qJ;"T,<S(Zjc%t7\)qQPJ$3(r>KZRQdjD];#`ldW
%CJEfP\%?:io,G?E(E`O"8)<f=e6dQ-;Qp(5,UiQO;6#Pb?E>Y-ck%LLFbHFe09Kmj)V*[6+=VU<2S6A?MY,WKQAiDOWe_XecK7*.
%mU'am4Y3qqAEObR;_L=W?Zgj-?0N!)C9DV`*E$5MZ>mg:E@htIMt9^);)uNE4rtCelF^p#-FuqA.G\duB[.F<n_.baS_`%]h7hi_
%lfhoo\ula[MZ$shh+>!eG]Co!r7^I*<s1<LNeJeH)W^_)4U@(>o_5Ju;m[qJPj[(@2!7NoGjVoCcL1)?DVoE@p%5M]?X\Nbm/eMg
%TDi_e;l'pJ<#oA_J[ddsZL)Do,h/GsWk06-h$E$^I4X1Qa5tP0mUN4;Q'C*j*&]@i:@ZY$_3'(1Wm,_3]U-'94qrOh/K.\).8rDO
%kbhSEM=Nt:4:928%fh0;;!!kOPLpGqp%.Oq9loGFKdR_M7CJDN^@^R,93fn74/D<t2<Wi`kG1DsMS@pJcXD.`+t!>3'D'dDUeTB3
%f,*^iOS^a@8@$p*HaqqV,HGV:3JKL5@Li'[(=)f/ce,kAF@C#fH7I>.H$NOdm9-Hj#'12T!e8jEdE0iF3*k*\1CfP-F#bf#+_?Ig
%<'WW#r7NRq;FF4I*?O?OG1o.4,k["rdl\WIkA(W\q>RRa&H6j^`R,V._<1P5<&Hf[T;M;7>!0eif3iJ/o3o:<m"URTLh%$g!um50
%hSUY9`dUIhCTb:[k%QDr^O9uk[X9l:;f>Q3^@865Gb4UH==oNH>:,A2B87('F$eA0VF0WVI^KPeEW7$+q1e4mDuI16elgP)S6u*O
%_nUJ^pgFl,@u]7JQGlh]6Fob90Y*7V^>:-u#Ml3-B90HE;S="eiZtsXO+C#s9RB".A-<aCkk0")3(9uqHc[ElH?2Wjf=:ZFJ9q+"
%k:ubY1&fqB5I/kkR18Y0oo6g'Jh<]S+touj@lrPC-/l]gYTq:5E7nuLpDUe-a0.g>U3FX.6GuZA#.a).),uC+=ccr+C9i72c".7f
%fe^.gU-MWHC3&hfpU;ugHf3u8'oT.\-Mb1oIs`dMBMC'_RbE])KA;*>1dffTad=uHr\7=&dJZE)5PQA-&TQZTOMLVl20o$@KB:G:
%q]M@`JD9=AKR^JVdg$19J[6;d5"HMBf8+'q;</eDU8;\ZiZUX+-'Ohj<d-hF=k39d>Ok%2X;H6+.M6RjG&HH+LRQ^K"YSbe%oYJO
%2\0FV9B>_1<a_,`4HK_j83&hp+FV%XG^:JOCh2eH"$)Ugd-a#XSCurJ!L\pZqS<1MND&AP5dG-)ODm0%;&hZpEH=CR?`d-2CTG'o
%\Q>Jm5Z4fOoFduu\,10Y@bP$"$1.]GrTJ%^6f!fSKW8IC5@lt":"JYATX@u\IIj4<^=XGE1b1=Rb5kf'U0#2B\U>&fUSP[mG;?\0
%`BN[Dgp2n]2%Yf!cT,Q3/k0unGsN@<NM203&VY$2S7IZP2\54(c@XmiS1@LJ20k94Wg#>Yhp5-!C>+m)/RhM[]f%O`/#KDTA,E/?
%?i.*JN&<NB>c9nnE6\8h_)'7S!;%@nM(q,oV3j\OZ'?MB`O&8/,]aGS"d64?"UmgMFk\CGafn1+cn'(-6YYs%ZDjA`RP.<^ME\(D
%_,qo/b4[&ffD:L@6AqrXmLUWE%)DLnd@5&Vg8BFHnZ<loQ@JdmlWX#2\m=9%GI.$N7:,K&Y$B+[rM>VEdH("Z^FF<7O@<5nVZhoB
%@;$LdNT",#[&E+4D:?WGB!N6s^5j\a3p>!dnn'6Jg)]9%I/c-<3mq#&"T^A,M\0VT&PJp(k]<QZ8*J02+#69()I/T0mWiX3.#,@`
%l0fB4S:hH'.0Sb+r6tpgL0kB!Bpa,/(,#0YIMUQ"m6R<+8ep?n"9pIb_9*>d/]-AgWf"oNjL*VDFN:b[BBMW`OtHr2:)B*=BhU[.
%*h__^m?dJ$ghg1f8!d3-+B-RAX;]?0-R,9E[c;-2aTE_5nn=!bHQ#r-I]\Obm^q[\AS#HJ7.^4q1+-[nk=Z<4eX9A"SN^9L:O=fO
%+1mY"%N=W9!L`eRQ&h3PJT"BsAOe983qGT8?pPE\rM"<ba7E@&`M>;U;u1B#\^Q3S'3Y;T_@\BY"Ud=.^04H5#blp]+t,=p/L$FA
%%0bkhjWBF[pNP?ne]KE2^2RH^4au@CP[V.1?in('daE>7:CbVVJ>`9A:o4;8^c`rNHHH>bmtBl5J*88SKh'J^n`s#6\uq7m0cZ*g
%WXd3n*s)Tmb^a`,s4-f>l'D<jMuWW:s)8.Sn.n-r(#E8Gdt`sO?VWgZ-a++GieqiFri^hK+7705MZrV7J,\XAI;m+ghtb%be=Bq]
%1._t3gOl/ja??O_s0U]qB[(sVo$>(]dlj'opYL2cYqD"Hf*EK6RO8`.kirC$_+Oqq,:TDDl7Z@!mkeE!$EjPA&U*Tmf]GB4R#_>8
%D,cr7HiM(>s,4)KriO`L(E?uK:ANgI;36*/"*S21FONhJ6;'p[Gr<OHAF#=j7N=n>&>phU\]?E^Z'[b!56s^>Y_:ce*/cgMU[@fi
%^$O"aY(ZiE\6Z=4G^a#R/clQ[\QL?I7PB$N/]H?(eCP/S2Xd_%%*0T:JEnMm)ibPlhRpPgj'Q0u7+fYID7V:CF\fOP,'Gu^Qg$-j
%/(HUkQaGUcBNh[7+Wo<S:'>u>'5ZpF=j9n,7G#k>*%6]dlQ(dr%IrZ+gWM3u\7YNWMhk8=\RJF\e=*i/8AhsMlEZ#K/+YCe$^^U"
%D9b,rC%Haj#*I6>]\PQCTTKd+jj*.Q9BWQ)4[nM!>acu2s-ju;+5oUT$ckmJn-1cC?T\r\jb[hbpJ2Z`njbPen%7OE-H/AE8hJLh
%<j4cG8V,tI@kWc1eu+Ko18V\9SYOkj_^K&5I*FgF1$M!$<%cTW`A3GCddlf3*L#<IWJSibp0*,,2^k@.SdCn&*ImUUhjb(uSlt2h
%hsWj8,8-4Bg;k`\mZ1<aF')4I8X>0A=o#SU98LSl@TLL[s5LKZ`P"a,$c]c1PFZ#:,"74N<9VD+M$mdik#o8QgNW0q<ACCs+&ssN
%NC/9J84>8*FuNbk(q!ZY!N)c[#>h(igh!#Ue"$Hr^^#L3HMH3T*R50n2S&0(Vd(4gDWk-^Md&m&XR7:J0d`mY!KpATO;L);qQ@$@
%h\3W(aNfK9-(T0?mA#Wo/C&!Spa;S@^;.'IB&n%\KHcOAfLQbnN5r6aUCt!S%]f#FfF!U;>9Bm+eAm\6WX`("JM4b3j-TQ8\_Kd,
%8BkDnBQ&G($A_5!]#i&0@-iu)M,cV%`eaH*_W1VM&WiFr\SBW$pUW4W1_iU\EO9`5X\NY(0F;";PRt_<[,RAm-jr3kOgpl2VBE"r
%_:oraaBO#_88=4W9"57'o`LHH'tHiGC,RVtW/UMLrdO?mIXoT9kTSc20]K-S"+"'LZ]N=-fL8TTeOmoSeK1[8/((eH+L:R10W9K;
%IIDqd8qEW`Eh!7A!(>8^TiaGf/%rU8`=rX"jc)sSFkf\aTk9\>$id+GQ-US#,8&`7o0itT,bZhPUDa1=+ciI&9TPiLr"^=<*W9qK
%!alk4DqVT#5/DIMSH^:ll#V4$F4?X*o1iITdLr,[eeiolLiP<BpgG.iJ(TD>@-Fi$U[g.C.k6BmZfZQ#B#;%m$k0DP"&DtR8[[,<
%<f,ucjhA<"XernqolD/?![,6aJuDVCEU+(_N1H%5`j!)R@XrpB14\C=,sHVd,mnc5dn*GpOu*p@gZV&'7^!LG#5'";UG\fq+D*Qj
%ERdkS[h)Qi.lP[=`Pd4E1kO0;olHB-:bpVeIL!nB@#$eqYKjeom,ImoXhG)3LEip4>Bj_BK?oZ\5W659de:O>aM)('8\DCY3]+Qk
%fDoj3h63#A"XBa0A6MW*^uP4-Xo](*fRoiG/G7i'QoZY:]pL4h9PTcS>t8R`9K7"d2<1Cd.?UqE`W_+</uFR+lSL0=!<<a_S;fR%
%Tp':)%5N=2%)+mG@TTHXp#<b80p,<<C^V_*ZmmfO(5.96(["s\[].>I_)>Kj_6:_+6kmQWdICL?X$sr@(3_O7egQ,qP+,PkJdR)j
%GY%-sZn)a,j\2Ts<dpK:Xju$/DSR%'4#4;9-,P4um.2X<(PlHHV`-^79;V'?(PC1'hO"+sVCIdV!<=[_?^/PeK?Eqj7MZr#=.&Q-
%#]/k\Ve*+f/!`6>`YdR![;C/`CYq&G%_&@?P#_4Kj5d@XPW/:c7&RS`'XkB3=Cu[q?&T!$.-JEJ<?RX?X%kd&D''$NUpp'!HYP>6
%>`,=<eEnP!Z@Q,nf2&_%+tXRZ+CPMd(>=l0')"3YE_3,m>I4bK_bU%ET<X16cgZsueq*thpOaY(/D^eONJ\K;/WZ?_2:G8Ym$Tum
%dtt08H0%G<`;r$,o>O=beJ;0Z1YX#]?&8;"kn(;=^ri(ohN18Hf1NtUFrNLtGm!XMlJ:C[/\6pJ2r'M8_0br^)naF?[Ee4PN&YO3
%C&D!hG)P5ddP^$B5O<EX.2oSMBW#-I6<d&oQa:^#AUYkm1etN52g\,lGe90S?W%oD%;A"U%FS^!q09q/o$42Q-gCN!'KZ_Ip@4<'
%NJX7:ok',04K[XJkhFuZE(c7#f^F&>?>hJed9!e(LaABWnBDZg3q6ls8C@*)Lh8S);fogS;(eidC*h*.kiQt@Bs*2\09QB%Jlt-7
%2TZ^UN]]"L9qk>kC=d+AX;_2XO*0<XOrsi_aH+PtTa71le>5@ArGK/rJi3XM<pCrS!O"c'-)FgFL+oD`$il=6'$@b6>J))4h_rXN
%kXt-bS#`L'A9idOR]Fnqa,&.op!Esn>+iL,kSmAXe8:(Alm[r8F">=#RqjrsZF#d]U5''Om)=c[_e(b5'N_o^JO2n=DfF.Jcl^CO
%V*fA4^Hq!I2,Ph=R/rdBq>;-bedOoU>S>I^^"W!WPf0Bs":%/Ab=NN_FJb5sqJNV`7!"=j`iLr\CNTO(;DT$dA^^J7TRubo98dP*
%=Wj!goAYCPIoY1n!B(Y"<=1]D*)3*SJ(Z[kB]ms%*O1Eh:`EV_(Q5&N(%D<5#o5VT<T=1ga"gSfPlakmjQ'X/eRtQqPNsACfI^PC
%2h8#aY,AiEI.U,^\^M!2<J34Z<OrT\;LR@k%of),AK%$e3R9gG6V*A2,N]!#7]8bM7%Ot[57e_:I+Uo/QoEq)nYIj8jlS+][ql-:
%K,rN!"3uaiUQH9b+n@kb?Bf#X0AD]"6mK4^ZIT4'6_(aH'F[B4Q<F?YmLRW#DH2E=TRg$=ql'FV2J'$.\D$NWIP^^VM$RRTn,k]6
%ZZb.mQ@X\;6=rKRCWBg@m@+FMW%Ob5$AQL5)%q/44p-i-QBa[im)[2X2,CXNQFfKBaf\;JA+sSFVu)XFp)*T4,,gf`_$b<%#/BP)
%CDhlV<])lAAW0$dBp4f[$`IV/%ZJ;G!A.rWdq+lb@MN2!Pe'+!EBGRR6sVP6S"KOn-V6,D'UJ]bVSP?\70D_a+-UX*0EBVVk-Fcr
%J%C*G$mAPKI^q)dO3fhVla$@tKF*j9=S7"sitYfWArI@""Yp\Ol5BRuW/09*,-=lIM(Xi%Kk(AWWZ3rpo#S#o*'0MY0L-h0-uJ;@
%8G&=Ab[STu84=t7BUls!_$80HVL`)e+,DL*S"1$sUm^/sc72,O'GlMffI#'B9mlHJ0L-]alD&"^:U<OjQ_-W2TVlPZBqPgJZCR9b
%';R"CfeVT;]/feGS]I-)[+mKDY<.r[l1@8="q"Bj'Jc+ZMR)27']S9O=s<]`*!J3FR7`9*K>65$a=2t@M\0a1WZm-[WGd%0#O..!
%rap].f`UlRg$psllN[Zo6iAJp7tA%c=q%X^r,.C=L_9l(`4B+(%W?'jVtu>/bj_i'ND9pWf`5Ve9*%lQ%6jV>II?%]3,mDGbs4Yu
%1Z<sMKPH<5,FCh?M?ePjH!UL$qanHS0D9HiiPO8L.LclFAaOa"1&d8s?.Z4AlbY:K8A]#,GL%A,07*EJP?mtPha:KB,!YkurrIrH
%/GjIj#ms&aLW)$MZ:L,/FFC_m__DP%jJl8UPur?u%2m4rrdn+RKV8/CoD#:b[+KJ(g<<9)I<t;6VJ8b(5>[+lJq9C=Zl(LI&B*40
%muV&J`LB*#!a#._W^W^/TZ_V@pKSlNOJegFA(sA;rLIi)1C[PSdBc^W+*?=P0SH@cRVaLG/UNsk<bZ#9D4d++M[PH=,=9QfDCta8
%]j"WD4]k#*;M;HWp4;rH_'>6<+Q[tP_hMn>c4YMbeYq(DLM0OEW[Runo_'kB]kQE`#/Ppj9trjmafsc?Wl$eF)RLn]5\deP4b!O4
%;8K6`eFkbE223U6q)2XU?4>*5^OYPH0?3.um*%U+MB"@[\4*]d_L'j6@]^ddM4uTm!7!@paK9EaQ<DJr>\B457Z&U'.BC;0"X8>a
%Rj,;7c%*_kc7`QA@uqi:D9jnLpadq(9m.q.HPa]p,c@US1fm!6-/uCj$qgb3Xp5>`7RO.%BlRG4JQ>OWQ!>M^$ZkonX_eS,+fRD)
%G621$p([?76oUg.5C6NlNeITDP3>c87s'q;rIfd&cp8E.X`nXc>mdTPgU,acV>qUoML-X2%s5f5MLLF-q6qWi-Y0QOLBMXi5r-m"
%b-"aHO2_/CI><M!:c`$dPM)o)@Y]*(QV(F&+DhXa&Q>.tHEF-VN?hD%'Xl%B-VW>&Tma3^.]FebRZbiXGj22Dpht0:lF1.*f5p*%
%3*E2@j)4!8\4l"Qd.M88`7aKs')B`fh5tT+Y-"7S7@Eadol:Kad&I-SO5+:uf)fYEl@Bd'pouHkE8YE*#6n;ZWfaTPBJs3TKN`]k
%#N6(n&&qt9W!6'\dT9dLq:f]"b0OkuB,/MX[oV,E8pfqt7f:b$:QDTN-fL0<0h3*6<a\Lr"<&o1C:*?S#Hkb:nA\-so=;%'j&6Wb
%g2I[ogh_,@/qsPL#0/,A(o<c,^oJ3_FPYBa._'Bjj4a!_8*Q:(*4"0tgAM,^j,;N=1$LA1C7Ef):BG%jSCWF]h>j40Bl+Wpm)Mke
%[3:mchT9QFTK^Qt:2[;=[8#,HS_S0E)*J\5TK),%\e0=.%t#'0CWaIPK4H/^TE.S6<;S";m5;j]9@sP\'\hZM,XCNegR(hI%</X_
%$rh%ro^sY>Hd"%7$>!KnR\i3d?ba'Uj*[h`^E;2?krNq+Z0e"=V<;@C]j;a%bY$HLkeEY#,%BlB#`(R3:4\E-VeUk0`VA"LAn^M?
%j/JK+2GOFp3lQnc2kuuj]`ug.]#Um4eZk=<"Y^lp)9""[8_29BP8JS#0i0^2^Ku$N:U6-@E2QWX\cS"8I'M"A2B-p3f1F^^JheYa
%1BU<MSQ8)`RV#ifWXt+sP"]>d.kq0DCA'mn2PLdO8>A^FnD?QFd@>h_!!f;[(g&c?-0:F<Wkmom-ip^6`=lWKq=Rc\*0Sd=,][sN
%CK5&3Tq's0Z("?jK(Bt)Qt@2$/5f?mN@dTP&n[,hS_.(cZ+6h<$S5ulRD!12':Zg+XTb#$2:>\KLXY5hgd"iJX7!*4]0;1kD90U'
%/ieCV#(<3:0l-As"#cT#,Tq^uUGYXE0:l>K)U6]5S6SdfdCaX[D.Hb0"cpae:=U$a5m*Q3$q!8OB<u8?;^%`0Ns^8_4\3G`;,i_7
%On`1%VN!qY$C]o=^OY<R]M:6[\T<<K@3hdXEhUgM(OJU\Xr)*b1_XI\QPmH4nso-T'-$h>RfY([fhc/9dq!t3J$'Uu9$>S(453;]
%)4YP&9tRT1Ti/.-BD"]`JK\RZ"oC1U0h"2C)0Ec&TV/E-C6/ocY]rS`k=#oM;'r`>-oXSY*\j667XXG*]fH\mEeCmbGC)#F)/s7n
%3l0O>@l)6j9`Dr;77titU0o!7[oI&s&QeCY?2sUGGfa9.@VJD/\a39tPBa^fF-=,G9Y/@9V+kSmRm?J&)%((Zg4o;PcGZ"OI-\Cc
%@"1)6>29jUr#S$`']SRu<q3)\Ta^5)p)#;RGDo86QXdU+5SussDY`U?\M[mnm)DB]>%ded?_[no^r2hOS8E[I.D?'3,m1eB`OSR!
%E`3LD*NU70%eqJagGb&h,j@mUKoqM[A3<72WU@-J0t<XiA'Qc&ln[&W2&`KYXo]H,p)ORJ/"/JW&?,u$?+5Y7/>SsEZ^JKXDiMrh
%\*g)6(9r;T>_s5^&rdX6Ak75,*=sA'[P\KIOj+)*06WD<<;da?=48Kq^?f>T(%>fBGo[\rl3<cB?D6F&EF#9*OG)1Ca4r4pcH>hE
%?"l@lph=G;6'S^)qt+=SFP$NTd?7'79O68Tftc&2iWE`JP_-XQ4e)qA`sA*kPNA]`fU*t:6Z]<CD?gM](I\TLG/_c6#SG`9>if5b
%_0a[:rH"=YjG6.58#o-7Q(cDl1TbQ*#J,?[?4bGfbf=N*V64p"Wt:ji9lbde1&LL"oB4BkYYb_504]1d@&ORTi2I39m<DqBbd>t3
%4;r=O\TQ>K6Sl$f50hh;%BtYX5o1)cL6';G)MV*gOf5S2$]Of406SkZZW"VV2MN1klg4gqK5o[UgrmJUhnX,,31lCA'gRP[n)B)Z
%L<f:rpS[a;?orl2=HCaJ3fK*ecQDKCs$,(akZEUC-+\3X@m[QPKsR"TaQic/#?/0d^%cYkCsg=.PdY8frHWZX+6NVL,e[O9k\g?O
%K'e8tpfH=t^RUD0o%@-X2'bCBWFEk/7^@@tj-c()g<A/*UgY*>i\Mc"S9H1Q'?U3bIh9Z+F/eTi`$2e=+C<5e\Rh/u^ha,D>m1ru
%SM6,r7Q5mCOn)Y\^Q_8KKf\[8*bS\QTDJA,X7P,\%kT[%#!H_qS!5N5$uS<PfTf+ACCQAe27f8@9)V6?j/nM,S&7)dMo"'adGh&j
%HC`mD@GQQG#Z9j7\@P14Hl)$DJB`n2f+eKSF&Xh0SQ#%giG9t*.&k@]:#!FQOuHL9LG;AC`>$s`Ejh4lX+'3j5@%V;D&+%:+$lH3
%ZPEU/-W)i$`VM9<-ZOoP2r]e,[%?=GgZ"g?V,ZqT<T-gi[shn=^DQ`1D?fm.,\Fr>h3&^F6s[Q0-_oQ@JV;0(1;-HW%'?jTC/AR8
%CU\h71bdUiL"ShXZtSH.o*aK0grSVU+rHLE&bNW8\[ccG;*MjC.EVOn"&o,B!Q>,j5kaGK1pV0>.']'Mc!:2Ak]4C8=mc'C/&2WN
%?uhajk/QqJcVN[fiblGIaV#>X,>O_;RGj*1*m%34aRG!L^3.0kZt.kQ9]hl-<QLKnpb_D&Q%.YPX%HhWGJ/$u/L2J2F(6dLEf;A0
%b-U%hUgeF1`dfp[0U2p7)-UijlRZQL]3F8>C1&e1[$=k(A6+o6Xen(h:#qU5BpYWkXilUf!pE=JQZJ=\=,"0>r"`M@5>W1s7;4<)
%eOQ5ADL^B+eOUl!Ef,98J[d+VkPAn>rJYOjeE?Lg^:JcXcL#V,Wh#W4P/4s,@>mH2/>Ee[P<-RLI9o&>Pjo4.9bUeI0R]PYhnF[l
%s.I$2(iR\"RSH<]b2.DGQs-F\6SU/b&F9sJl_udN2egZJ\pB-[PBG(.:=s\EigV]m`C6D9"-p727/!9NkG5GpS*57g+l+/lLr4JH
%YKm2gC".NXn(Z#_GlN%`._fG6LLnC8f?gtnaHi#4=o>To,7LG[J06c>+Qa9]3"!93-G-_Ob/0\PrK;gM+nmYHok_[h0V3;?BT!fM
%G[JZ.!K]StdPs)h5<]G.%oFlIktZ6K527PLZ4@7r0Yrq?('W_nCO6VI[c3dM@&8=\USF]k%ophje4gYbJgg%1lGZNh'jVMIYi"FB
%nr6%>#JCgoVfWZLW`,L(EF6uf1nHKlJQ4WR!dAA[fhBqdQ:9r[-X>s\7pg/I(>jkV3o[U:l"LkH<0(75Xm\8=m!Yq2P173U)EeOa
%>TDJrPkMp4<-;1NIM)te;&1HWN6MZX$Y>9cjlDa?aBk7o&5BdB@]/HN-2$UtbL46Y.?R'rh*D34XRU&TdL\Xhl1%gF[>U5:a._-I
%gk<+ujS]!V<U)B1pc2?d[7NEK>=+<"RZpUQl/?Ln:%YXt56(8s7PK>aXX7X[?q%D9p[fZhX.fpGjrRpbEUg,>*d9Ci"1m\phMgol
%pbU%O<F.n2PsJ53+BncXi1emV7`LV8@VB;u<");c2._i+\"Tl+7+JE7g,u],ddC:X->d*P%t:<$HE%d[1r)dQ6P-1gpR8hqQ4!E*
%(@T_UEWTUq/e.^+2E:-]Ccf\-SZ]O*Z-Sa&G#.(+!L3@dYpIMV0`.34ShRMt<O(]_Sn%J>DX@qUbZ)>89hQ/lPH+Ak3Q\*1`O\6]
%m?;9/ZR-E22eF:?o6AOqT[[9oAnet.dMn)io:#5X(L"A2mC$W)Z8S`@=\Wh/;RFOtd6D\8GABZ,rSSn69F9s(n*25"l%;>QO5\)U
%m)aa8"5*?dlFNG(dnL?RSJ4mR536i(Z)1LS4tm'T*uYg^*Ejmgj7cnT.hs!:c>rgmN1q5Q<m&+FU1uk9]ZYb\JdQt:,kC8h\R?B^
%;2pl>o!"EDs/XYeqilt88lK$W)HKba<*bjpC9a(Tji=O?K`*EW<`WW>UA<=q"LnL@H^GM/eBPI.#=Y<>Z!7'R8c,9I98%KA.4+dZ
%CD2q@*F@5o2U8Y+>bs(I37:ERq(I_s--&)39uAHS5r(p'f1$'\Z#])0XKk^6D]"t1OBaj;!J6T9qlb!8#1:[n=^9<SXcY6i<V9S?
%o#6Fj#`NLnC0+7[cH`?XflcEZLae("l)1>ao(=$VYV)6uZapT5[^Zq2rG%`Ob#=5G.c3V&$6b'PTE-9sL^\l4GKkNn7/Of_aNE&;
%?Ul<@A;[Ae7dhH<dE8XZ@_[5`fJO_AT])m"*Q:1>pROJTcUUi,lSA8EhOn_`cIu=T\,mgZ<GKkRjfAh.l/Ps&'I/[LX+H4/CYDD.
%lCc9A:!l?T,\-siGYia:=<q9'd:@Zh8]V19BM,`qkfA(Vq9/o0W6i>#GiI['WfC\BY7Ii\BKB]N*P)Qd2UMQ*R@:RL)*EV'RSFrs
%%!cSBRbOLbG\Nt'>$ljo%ZtAkD2:$=C_>Ios4c>76"R`([;NX1p(R_K><[p,S9T=+\)O>?Ek]sW6JFrpGj,-@JPG1U<\6@tI/gR9
%SJju@!66@9[+U=`\PB=/ciu?dM9::WjY.637I,=Z"c(LRfjDt]5<iPRph85g1po$9kdUEdZt!bQ#0:=dF3CfOnm4O5(T%0.\ghpi
%9&6[@p[qCDRsk1`pQoC\@dnhn3Qa"Pj7em=pV*3o._aZdr9bdR5J++Sn]=j,]iL,pXe:*U=4c2.(?*a;rjEKdf(Z,s1"JUI$@bl+
%4F##:rVb_6&*fHmB3f+%N9!$R##l(HV6j%^JK=ap/i>d<'TJ,U)#Zp!b5+r67034LN('CKB=;h+ja!So4!?gg\"m\/+s\nG'4;XI
%!m8L5%g$pL9P(3&oi_X;[$:YZLs]Ke@W4ral3bNfhunJ"9K#KX$;>J>;$I3tR+7#_%<\^r$s=.pN=iuB<%XWGe6ehp3Q5URM:Cor
%D2lE%Y!J#_>al^q8YElKG;KTna>.MI6.h@H[cR,EoBnVRoS\VW))<P-it/n,`^:ON#L^IXn_L"CmI*]s:eXi\>#`HD*##h61n&5a
%#T[jekd79h3L%akTKWtijK.`8oCU@EUO#(#"D\3=%0fiu14Y-WL$3;Pb/HKKm.7.r!,P'@;c6%sWlj6OH@*1\2d?I)[fR19F>>8&
%F\q%^UNT=e[9%Zcn>m4:\l<=$"\B""Mktl&*s>RL,YK(L>&lqf^(`jn'Z$8QN%XZj<=e&o@*pg:ppE4\U$U-@&^b8VDbV<I9sdVC
%i&S<L7c,LqR/Fc@3*8+>2<L-"@cB$e9T$9FSVugD697lK<'+o@l$/Ed<J>!>nUcc!%,$OqiUhOQ/Dj,PT\O5ZVWT&""8dQ/KG)VJ
%Ni+q@#:jq0K9iU-F%VE@m\m.X=*7@5"C;9d-p<=h3'e;VCdfZ+9CRhp0r:Rq_/'D"3(qL)&HK)SkD5^/NKu>U(9b%ioj+JfBt(8&
%!lUeCXFLY(PW@r@EkmJr6(eWCTkO0=XU*RPPH*76%?f"bALV_tC3lsd9])A'CW<6!jl`?6n;7%k"ahuCo?14TF8gKZ#t3'iYH;B]
%:E::FPj$p#ro&eOq,(uU=%IAVVerHP`OpY2!W8j4K:!'N@B##kg>#D=#Lbp]OmS4hm,EYndTa`Amrh<WC),h;Nk&c%_%2g-SBEg:
%U)h.IB))a0PKn7[b\HAD:Vmngr9`5rAnu3qphiRmAt;Ur3>eW%+3PE6H`@(,-8'#XDC`V`o$0*3!;<:U7Vmf,<J=X\9esh(e+XZ/
%'"Vk.;A40)9c[>tK9M\q],uUudMH3ei$!'X6_+IV0`,<B*i`m@3X@'BRB;+B>D6\-HhY,mSsD74*g>H=W2RFjYO*#ZBabttENT/s
%fsPA2(P;pZPXIGLK.#oA5(;]4I&fO"a'*f]`Ve3pp`\Tj?uaRGqM&YLM]$](0[OogV>MGc38dm!9Wj+fD=Zm[]*q-pd!)h3F"0N.
%P9S!\`m8An@4W,<I?9GhC4$5_8i4.oBuk%W92k!:g*ZU"Ji*da"`@7d2bJ$H=?JBSd(Z7_AOB^HbI[VL8\9K3=ue($S2uF!19b0d
%[sa1!d#q.1e+MK1+rD+@<L'cuWtIQd$nET,\qVk8p9A)0p1>>!Wl"'oU0lX/0?S9H0;n5_qacf".\!3q>Dug:G]KqsS=h:d<%dOE
%cX-Q!Z!<X,LH5:qcX*^lAoK\R\;</a%*n4YNk2nTPr&1-EV_Q.#r_HB$G5mqX]R`q]LIY0+j\H@HU[;MOm/V*3M&acc&-0n>Yt<d
%H"_eM:>!>ID-2U]i_l=L;/'?K]]+3g);pC,`0NemHu`LV&5>O_;5.Nu]0mk;m&3,d.peR)@$"Ebi)uHM,uQ[Y=#lLc$5o_:kXS]2
%SkNHWQ;+<,j9N-QfpdCs*Q\5R.#T@c<XjIjfbL=E!LPZBr_IiN[gG;+IB),Y5fDWu@dmFK^-7[Or&hB*4%-KJ$n@VX`EBR*3Q8#\
%p?q'6W/CV,#A#"Q@T2u?QS\8lq*]PbQNHDpB!E98Mo(\=WkY-C1m!8D79uqiX#9R>AaEHM>N.=Aq,pkGd>kZ6.HBP,Kc`[j+.3ub
%/&DSsKRm3XbjqJ;=j<\aCia1Rb,L<b5UC3<m7&"_=`h6dgBG-+5=#e$%[`#Kq508^cGs+H2>osU)2YqQ"+JLcg'gMufSF(nV<$&Z
%YV:tf9J%-5&8T%>id%VA-WPM;-"]t),XN&&18o5*``;c%*@l-3>e>G#JWP+`PYk]$#O2d^W5M"s>I1pJ=(jOi<=c<2n!<KE<#6.)
%`ZG"<l#;E]E'&*+.5A<\+UMJGq&LU-WO]7<bW>["01P6EkNu&P:B&F4,>f@r2.ZkuOF:[F.<DcKrLS'.s)ul4Krq@k?YEQ/!cC)r
%[QQ>1[V`Dc\SltddO9S=M@K<1X[>o+GbTgGHbo*+8J`'))O6bbcmHAo2ttZ=Y!h?B^KZ1/UbB=S9cKFl#.;2&SY%GAh.\L?7#3_h
%0plh4mhO9D-CSO.qjX.U^Y??-;J*J&Ydrh%GCQD.d*W&k!s.O*dKq7pJo$0K#oLi>8DG$0(Oc5>5u>"PY2g9aqL+E6/Y1Ncq$C!V
%o3u+58b<X<=/i_XJ9m-N;NgHM,()a:e/V(tMW)TPr)H]RX(#r?%Fec%kSM\1%Y!aEI/U):_bGPT4Sf8&o/$2WprLFL9B$-/=O+Km
%JEOZ]Jrmd&^4-UHV&B#s!"$`J\!YDJ#aBN@\!89C&_\Pk78eNO,1#%mpue]<D9)/O-aNb@!t^0h!5\_$[D[ONboETOP.+<B?Mfco
%^^%]hr;=uWWdqu!]eg1?:C`H(ER&9S</&j>harAV7'lYS>*K%cPZ7$I@'[qse.KHC-Zm@:SW)Y5=Fr;F)b70bCrp=J*CXOW>uHBH
%`Ps6.HY#*c^LZ\D8mF28<,Ug8W"Bb1,ROO6Mbn'Y'gYYLdpQR$T.B)RZ`Ccf#dFLd5cW%@GTR<j)?0W4(`*%4&YO+Cm5gh@AP$QR
%g"n7;>0-@<AO^]UZA:rEkNK+Z5C54"l`LXW\]!+U8Ze,59UHNg0kb0bW1$N?c'GV-8b3E!5&d!M^+hDmC"Fb?P0^"R`uK<L$!0jE
%?Nej1>W36R*lEf!I?fKGK\&l=!Or40]5ffV/*LGiI&Y\\F_$P(;aG,fa1--L9-_^Y!H'C#e-b"fTgF#.PHXe.Z&V'K-)sGp;Hqu;
%@W`G)(g6DJR'$lc,-Z#N(n,K)9ceXt7c+r@6e-/p*.CN5TIF2&a+Ppn>J:B99HN2%HVK=h+qOu@1o_f7$X#/coOJ.VQ^b_7aRgn8
%<:36Pb@Pc`X+W$ngg&BL9rW23C)A#JEmg&h@Dbk]$ct\[Qo1TU):^fH"IuD^,,nMU,n!$"GN/+_2GgD3?<`r\/sUKe;2[LC'SC!g
%h,O0kRET^mruf:XUPR!KBYQ1'Q`,RJ1_KT<91jdD/pf/!+_Q*ECf.OpEf1o\Qftd?n7Xr,>:OfL:sS25dIH(_'O!(7=Xd$u,JlV\
%QO(=9,Th"AW6d6m+[EV5r%19\=%0--pAMZlThbCGLJ8@Xqs71)6L#BUH^!1soQr<(MKZh;<huu.q$]b+AV<r5R'0uRSP\A:e.aZ>
%&I)XSkqA_gYtQOE[faO.WtgP2<be@ZNO.#bmPj2WU/qLf,Gdk@0Yd!)i+-m;&dqBKk54OT>17R)>*BY+C!GRO?9"IP+,rh$Ju(2?
%=u3^\/*+L?1gqpkA[k`P)OKC1R,rSVV?F8OF8>Gp075Qpp#?1K;ug*1Wd6%18\:]>Cu'g-A4*7)W=&bBWY\ZqEAkq_l1.)]iF,>.
%miaVfJ_&8<no!M"=!g&(KZDgf7ojY,W#m7>Q0**#XXjm^jpr6E:Nb&+d-O&$KGB4TR?_77L(?_44alWTn%=>8is>Uq6P2<"U[eV&
%5=]3f77rBP%[)nfgEOI!RY!ibVQY*M;"qIGLQQ!-M^QE<`#9Jsf%o6i0L?m;k%_T\10>8ZF^'a=Q9;qhW&>_k"ViSH:5>]7T#XV+
%F=!*7S2spP?$Y3oGgr?lI-en6-J>_^9oIOnF?tk)Uo5Mo_4ir]W+O?-ND]D*>9IZu?`:qWSF!s=^p6drUkL\UKpKV(G*"ggCK:id
%;3,k'nZ"Z,;?:=])V<rgXL'$sNUIa%`MWlR*S#V.aEWg0?]!]0R;?o!_cC?,<s1@.06/A3,OBs!lI3]$TNR-%QMpd6g9bP-K$EpF
%$4)'dqB.2_`NUof+=Ipe6[BRP<DUST$uBM#EsrV:!UFV3=>4IXEuP3bX/6GU$nMH4(s-7re3Esq*s@!p)Y4f!kE#RhbEAtm`YfH?
%N)j!mHgA,e</="'Y%1tl"@mS*,SntDi(4Z]Ea4ntMU>He40t>d%s%g_%eNZ0'7I;+D+n+l>DdPW]2#ZfgaVgg\f%cLYZ0i"\)qYf
%@tG]hFck#,mbmcrm5(p-T"asj=%WeN3G]EKiik(B4EsJtU*OU,k%L-\;]h]d(VsHc+qGVn@>5a4MG:,-20T`0Hi:EXMAI%4oOs7/
%nC[0cl_;_VkM<u?_:rU-brpLD^)m3jq>tCWRSD(Ed6g?XPS@'%l1#5(o"pC?WZfOk&EK"aR@u+>gLF8q1X<E=Oh]COcs)ruJamC_
%C7-p)Qb(,CPkXQkm.LH]>>JW&eWhF'[-f/%lqfj!`41>ajMEZ_[%Lp8\W"-\*F/0g4NdpKF*e=cO'_;/\r#dET.T,O'?1_;m'[iX
%a,W-rnPU2!T^9s0&"_\?brpO@b>OT)#&(i&%D7@7A;W"JT^G4W<pc!bX9#:i[NEms"fr*rXon<b#hWsQLIfTN)b%R<+=%cO*ER=3
%d3`/<p3Y\'p?%"d\:H(aN3k&3$tTNmk9DmI.8AgKXK$K?^A1YUqnVbTW_D<K'TW9iY`K^V0jpgpQ2<:D>BE);[g0);]:->@fRE;D
%bMIX1JGfZ;=NM,j4P!]9DUOS'mVO"C4H1PU-pjOV72JG*QF!!Mj@\N<?/t9<YN]fNSlFCAA[;$$h//M"lIOc0]?4bS,em@'Lt35Y
%5MQj>WqdW>F<(N_/_>XM@T6`7E1PtI3CF!O\mqD4."-GcQK8n<(SqH#L8G5&Nk;gOW6jjKY+;kpr`c_A-#qPp[/5UVe@dZ&\n-#=
%<:oAkD+"$b*r$O-o_FN\XpkONcn?Ulo5";8Lh<G`I3Q27:'[0[-;)<*U0'Dcmmk>RE0%F_GVrHar;S)P^>P25.IgDO3$`\nOD=5E
%/@B-bKUT@^7p^B-7EG%R;`%u*+^hFR#,@#mVn1b2.^^?HY[N",ePS4K*LTN_5u_kSgLiR$(ko>:RHN%V&i4chfTffkm5OKV:$(=)
%]6S_mAbTSmZeK/N5Z[*.f4a0!E]9$i-Jk56q*]Wb`C=(U2su;ILQ7dKHSc<PTZB-^U04_oHnaXmbH2h<8_9hq!RAM\qS%!VY/*Mj
%ZS!eU0OK4oLCWI]rrkoq%-8q)S#Y:[gh0+#RNR,08/quSaInheR'q1X(@frl&g<]jBZX1$\ejLD*2g[B'_Q>eT.B6:UrV0abi)FZ
%c=X#T:arURVIGkcSB67b7e&RcI@&2Y`j86*.f;DkI(mokPnXm"Mcg%G_3",-L.1_;fCEAlcRc6$G3*&hrfXXRChIApnt(5QV;$^_
%iOs/:iOL17_]0N,.1ml),1#TD`^X>h7m\)is67+h%g*K-e09MggJ(24;I,MA5OV&3\UX>18t(N5&e&'k(rkMDR+9KI>f/#=,uirg
%l&antNV.,T-99t00*M_^&ck6B.?1C37*Qfg_;ITo&-IIP-@IfpF]S#mNpsI%n8CT]6ZA^ihoba00(F>-/e>hl(pO8G'[RPESr*c0
%lgl%f\!M/E-I(HIj!4=t<Auj"/<uZtL(cJ88nGQ/";d!lMK.^UWrEXpi:X+FRrg)XUh=a.bS@1k?L&6UG\+r6E'6.EF48Fc%ajh#
%6[JFof%fp5O'fLpo"R!/bsB[YL;2M:]a"\KRQE^HT7VVf[G?<D-XBQIlZs%'%TT=^>!#-]ml@6D4\';Eq=C_tmlA"(4a?j[X0nk/
%[B]M]^O(Y5n&e3rJM^GEr\RTb]Dq@lE1FqFp@sCZq&[FPWn'1!6J=tR.*LfB-;Lk>'N@NO:Ltq"1m-0J_]71/-XTF%/[d7]Y#%bf
%q'k)9-2L9#eR^!E.8N0p)gN36&`2':+V@G62+T@sn@]qQ=%1ZamZp3q<>D@-<.0,3l?I[%dWZ6!a6K@T+JcP6>'ohm<uBBlRL1pC
%b@9#nEEi/J_g'R*s1"YMa@PQKJ^#*6%[0Ua-Ronf*ZRX8_KF)i\#%S+ojEO:@C:t%rar1g60\R+bt]`X/e(HIcc,Jf6IH"!ES]D@
%E_@K_'(6em7?tU$RoE3NRPb\Un;>T@%dgRE2<3gU;N?7]*P<3&S+9KQ\qE&Apte-XrB%Q=-Ab>R[nNUW^g_H4,P]OLB,,'t3e`%^
%rWtJVkDJfmW`hT$Rl?aQaTb"`1g`qdNr$Ei"5'na.FPrOoW%6b0R@q";C8]I$Tpu;m8,W16[!`#]`W\KEq5-"b1X..$&UP!1?85/
%(+FIT+Wr8M@T=,XLiq=F<B/m4E`;D79f$&>8obJ4V"SkNm,VgD]A81HC82JF"+*GF1@s]Z+,TW:6mI"j)A.t<=/5P!Rp;LYQFT:%
%Aa,[gY1pVkNqd5)%P<sZah]Fb>j4ToM4NDW>^_pP>6`;&e#t&lj;+S=oa8;nJkq!>SGto-0A$+-IYOCnO6N&iqA*lr)pa3#3!f(O
%@*B?0%6sZcURXFQhn@W_gBPh0[??PV[N<PJKJEhL4O%upD]@"ips!*i>$^mh1d>B7K,q@Yg\BsfV11]%rVJ5O&?,'-peoT'"mDf%
%LJ%YC";U030"/G3MocNf^q*?o-d_=""YTXfEQ-Vt<o?l@#`I"h&,?UV+hGE(SC7GTXp*\b.eRjb/WYW,[+Ks64.rFKE/fa`;FfA1
%Q#`ETa+d`#)D?!-K,40?'`J`+km=OC+*^fG&[1K!>M&Xt2m;DY?N"EZk6,oNb`gIn%8eC(I4'D,KeT`BX7/3"s&s_*i"s:XV8&6H
%j;d6VG8u7tUgLS%YG,%,K^X[-lFE:A54nRGf@$u+^Hp5'60s)eErXj)Z]Y?YmsfMET!,Z3n65\J`>jJ\*'"kM85%tG?.rJ^D@P#J
%<EDaEf"-@9VC2:S6K[T15K\Hm'</"+2/j^+!1-\"emAYoV.l3s%J6]o$LWTYD>s<N4@%GHE^dtj%(kf_GV'ldoc\2sB$9!Gj\6/N
%,1RB#Q7S0o(EM-jMOf2ZkH[%\*.!Ta8f<],GRD"fFDXe22'M#kT;"R$KB)44rM"JVITJbm(D?5jm8;6\lqn7%quN_>5#^'k6S.n`
%;0pBX+iV%hj8MnJY.1CC)UmU4iWRFa,$>LZ5UD18fLdDGJ1Aj@!X0bL2U]a>NAl90Q*Xi>[EeDg-Z2CXZt,g8#q`;RH^#MdlT(:d
%5JW%5Ridu3Idj`(L:j>2:_Cb<RT!1'/`*;6hc`.<'Y)cel$*N5R<luW2d<)g\TN=Y[5)Z-\]*`Fm.];WqU+U"G]"ql^!As,!cKf*
%`B[Lgd-Lm5NPoiT[]'s"G&/uhfiMpb3*-C@BA#3ag*3Sl\VZ,eD,E2X%f.[M))Wu4)S@Z-@4@8s4Y-UcIS#ks(rb`aNF_AO*fgf1
%;7"b$J83S%femrTGmZ`h)KR818P&=u@WcL13\>>naB2gX-i;eU>C]$+:[cp*"o8#!o5jNr>n_h0^/]`D$`M?;<52alAf417h4Zc3
%cd0:s73L4P62E]@cc4K?mV8bm0dV<HW?QF&?X+QbZW(*LpIZB)"fPrmi\F]43iP6?-5.tiXmIL@/IbV0\^hsb`R[LUmu]'`>]V3K
%FZfs>\(,H!%]h*]7d"SglMp:X.8JbEjH*sHC9aS.:`q.r,lTCKqQDZ*b=n5=Chi]9Cs1(UD%]o`HC)hfTpL^Ko#BioT_]u"jqN,g
%4f86''-R"=k''n!rlDYK\*Mt4mSqH*AARY2K+@JN#CJ%5.Umf*:YCk!gtun;'8L5,8k5[[na?T=1Zp08,u?.Y"E&iL,jXmbGc;".
%!q9E91';u)&LN%JVtSC=R;.S1+tF=Y,piC8q/#D\4uiTi;k>\nd34]i%:s&q(%e]q(V79#N9@[\F<u0*:/(3ZQa@]i2'T*(9WI'>
%*"=)_d!N*ar:hn)\hYU7RCP(nX99]l-7cUe<8n[*:I/N#CBA2_A2h7D<38h.;UIS)`E53NB#4;06U[970hlYZ%oO^Rf[?lZP5@Un
%GcP(Una%8kcIgE<OH\/5l1e;8k)qm;#6d>Kr78?NMpoI5mtNegq(UM_(R0+oR!P5V-)8`T0XXb:j`W0Udd33AHWqlm6SPn8Q;^IX
%epa\^E_qG"I4\2eB$A:>rbO4siXng`6$[fG<HVPuAqPWR,SNOU@#1\,fo`F1/1jo!qQHLqpUdUm@UMld7-qEOiYX,Va1Z/+6VpBM
%$\QlbrKb.$0#!N#=TRe50FrL"/iPZm/],rlVM84>"A=?d?),84FjX;8U)DKV2h"rX_5U:2U+TA5A"m\MW"ZkFZRL#W_:r92b9iYN
%@"U@s"]_o4)K;@7,t9_&H>D>./#I]j>2*MYf#h2)7?3F^)]cG#M6IXk0?.brAfF"4/]*;WD1X9GM[(mrIe%";C_:S#6Ft23p7S?U
%m[G_%,^]8h_*O*fG?H'/p&#"KcV!#a+)<K^H&dalcZ5$cXumF9h$pWVZU6e:U/:YsU-3"r,_[:\2mmUe#tsKj#5G;K.'A8%Ye.om
%H7Cc,bIR,\.])UKQD_f\8psg^+qh0<mKF,oTE:k>Y!=c9L:VO=R-/>T.GJIm[`e>dgPjHKcd&Ed4(E\54>cS=,(D>lQa/2WQa3FK
%OJh]$:tm-bUph(CW*9Po%nFUd(>2'gT8Ur?RWJm^2,3s&@.';oG&-Cj3o>3RGMd;?>p&S6V4[4(*]i95ouU0\(Gqg0a_2G?1JL#R
%IB$2";>H)#n;`tXPr)L*c&rb_O"2^4K!Z_5^:g!iX59+1R>DBB$EhJejj4s$bW#_CSqo>k?oE/N.a@*dT0b2r,&Q"hC%QI.$ih"i
%kc%Y96_"26*h^@s9VC6DCC`;XP">o+KIM)2\=6\Ml6OGOL:>d#O^^Ab=fp&66G$dc9=/j.*RY4@:N5-JPVAu.VH8%2_tQK67_4.M
%=cr%TD&Y><m[o^R&3&5V1C.+<7>W_]KJouGD)j.ID\!pfYL]@:4V1*58Zf]E[//3W9:)Gf]rCKf%%-:EMKap6E,(5r],sppFffX#
%G<Z>63mG:',e7c1SPb%#(ADY$Sj7Ft6-sLlE`_14B)=Ch'sZ>*YT_UGO$RAUnb/.!r]D"a]c]H1@XbrJjK_HE@rD+IJ;c@0_:euN
%YpU2ZOu_'#rDbQm(.0?164KsWe!JJc$t55c8*-MsAYSq/$\R\M5@)b[9-sBoh/W,8+>BL$JT:2`=_eQK:i//'\5<0Z8.,G`Gj+5F
%m$@oSS_t8k)o(-3L7gAcf"N]]!R,`@kP8X8&-_SME)*OqXR7/'gMpG1gat,tWgR<-:80f:5DL8+fkpAc-jp^9#Snm0eFFE&YaVS;
%2ed4(CpPtU5uDF,#7#K5<MF4UR)0aGGrdjb.`+e%[WbT12NgrqV_?OCnk0$iOR'3B\.&!P>%Sib4fOB]$=gUXqA`_QAfA8@IZd):
%I#1;.f%*WlFN'oQEfV>_&q.cMgGemWADFb&"5HOfC9\-r3Xob&7aW\binZ7ZnDgBL=g$b`d"@`a7:4YT=r0W<\UH,6P@B\Cm2VU0
%`%>`S19fGk9n?%s#X#^W*ZiETm=\Srm][TL)Ht1_,ggp/esj-=XAWeo2R*/:9ja-fdtBJnZ<GgkG,L0b^p5+%9mU`954_uFXKj!f
%&#,Gt2`I[D*E+X]ra'SbWAbs*gOg&GpMRZAWa`G5C#lXo$sP>J!R%djd\K6,&Vqhl0NBU.pH@#G[&ohRWfoUQk[s2I\S"0//u?`"
%Dm12QmM+WNI3'<CEX'$#<'gPb5:F/^N@!H=gl'uLB!blg.lMd]PH9W'3N8%RV;:/'[hkpWDCAH1qapTF3g,?!C!VuK%(s9GQrQ9)
%m%0Lp/Buk:D!@%o2Y"#km-107>"^e!$CXXq%.;nj?Rg*>^2XgJ<UV7T5ru8L+,b[Nf!Y4R0LV'L;3[8X(6PT0]ej3TD^M(lerZ?/
%>\K&_9Yf_#Y\koE.k(3hR\OT'haBdJ:tjVHD="dS\TTj^ck@i,gO$C8j,H+3@[c2N/=(0Clu)5&*Uc.fhSGttlSG-IpQa\b@O^2O
%OW)\%Fq\Qkb=F\*X1?L</A?rfckqR.Zi(<4m]>0,hM*U'=ADP>+uL+[ZGh%34+`P7[;;i1T14dn9n*XfH/?d@&jp`>Gj!o9hoo[N
%MHa/mk!Q.4"orqr?kQV.FF!?p>'G'u*igPb]pgiP*O+I5F0n_C?rVW[Q"m%,k69HRh\\=TMJ[BaP7<"t)e1X7Y,(m$N&,Wt[/CZZ
%5gV;MmL9_ba!.b@A/fZh-%#AZBst&ll/AD)BqLRW$SH!qEDt7hPl[3)^'Zg6$e(cR73G<7pmr2_\h;F)H?V?+F9,HB*)Uf5!:D`s
%DeU%('q\&tMgdX@KI3Cs5]EY__M;==,R?j)9MN-WR-=.qil,,\#%h;9KB:'@.gq%th[J?RrZjQD(msQj-kPcln2Ck-'])RLapsjM
%Q6@^NA_R?99#opUeGU#;&chaWi+DarmW1;'(6hfFQ,?W*i8hJK#ZI%#'6A7+:#%Wqb<Cf<<B,E_KJBo%XYp!&7[+!)=rO0<9mf:u
%Ar68IjWDCb3Rm>9V*F^eTT<#jZ_TFm,^'-%$LLKKW7ht%bFmpA\^jGC:Wb)5/TTlE\p8m7?d.J@Ad)4#M:QCa<(+*0jid8GM)@kn
%_n6JjDDum?,#IG`Q=Nu$8&H<WJj`:2DS`X)UnO%N1b"PYEHfa"DUX4ak1*,XIU9E?UZ`8N!;#WB]Le3KDF)7MZ4MC@1fN4K50:a#
%Efe2NWP-SLa?ckMm.'C>!u\Dp?H0^fRUMLn8Q8nO<Sk)&n5!ZfJ'*dX+u,.<]ai-reoNQfDfC5(Suoh,ZtM.%>`uqnAa:&#[hA@]
%o@XHu1$`Qlbt_Y.ar\[9Y"%<k6a1!\H&liL4Nh!T_";(GW^2#Z!Y_=I#%Y_tP>32@J/_WIk_jP>E"Pc00W&9QjG4mKLM3e9D>G#W
%6?.njIM2b4fMFqoi-GRiOs&-0#76^B/?/3@q3EWlKRAU'a.IZ:duScMLmo4]0]uS4)B>&\$8X-tOelE^m(9_C(s=?lRCid4fp.QG
%6i9[DMnm6fc1>:_E%*sYgkb9rk\i(WEKn@tQ\O,CS31Hb&Rd<#j:^XK2e^.D/C-p[J^-41Y?8[[:HQ<s2Vt['?9"2J`"\u>G"%:S
%dir._^p;TXR7O$BkrKVG9BjFAFM[SnR_qg>cL`B@0)[]]9jcaP@1R%4;i%WuM^Z88"Bpse`CRh1`EM84LKX'4R.o(aVg+b>;O1Hj
%bfX@slIJ!u?ja%NIp8*gC]rh%@EN981,(6g>r7`+]@uMMd(s8=l%k)[DX4pVrCEZ[aO*]Df_K?uc)nP]c$d&!@,JOn-3U&RP*A>F
%m"K8e%060CfcR!C_!B\nc&(9=r]*`,(F*EZ+rVbLe*%nTRQD'`nKp=c4VB3[9d8BPP&*LjFl,-r!45_ulL"b/<0:I^K1dsDO.e7^
%$Mk<6'&fuGHGS-j&DD4-ieR)/^VWNb8jFIHG9V!E_=*%3l,NAbD>qZ!I@PIi"j7:<eD+gqR^nL=&luXcMBn4VO&T(-;$+78LG/54
%@jZ/0'SPdqj,F6p/lA-cl;?+2>=3n6h^)9$H8E_6Lm+rFe7=s4#t^'s28PD_@n9=9P,99]Y*.1+R2u"j[6>"8!l'r*b(IsP<kRi]
%;`HmNgQ8n,84i2D_icgZJaRH0@a+hi]g/gqc!Bh]LrV&\Q_"9,=PnpGP(Qu\juOI*q6ZFbd)S*6I..\0(/ULTY>9%*oNQD)k20R"
%f8B5o8]3raK&!hN<&Zjb#2O4eh+f+Fk=Z)AZWh>3>#mnb%E5mQEZ)JVi,/)7M]R2r$+md6#7GIP4!_)-H@OhLG"Z"@l=[NR1gZc)
%#b)]1h"hfJ;/][D?Ch0n?Jrc*[WCZsYg^:D<Y@t-/F5eAGMe[)O_l^t2O7%EC%93:M#Z+GMJ`3)kV+g@V&>.pR3WR#VGAi/[?nSi
%ZNu@Em<dWnf>jIQ&\qoSACGY;+L$416P$lrfLao36[51h\[lZ;ZWZBWp7BU7mE.;>`G[Qpri0ioABsmWm0+kN[e?R?XI1ebrKf+e
%N&(i/<qdPuST6J`defbk[fo^:flLs2.u]PrV4\gVT\u[3XL0@*7_hNM-s5C1['RJ`5nL[%q;$Ym3[2g3-'tKH_(?&n,,(Sn=2Ii4
%S<n<`ZgErQl@,t\`8b=<%0@7P,I2t&D"E'L:YL?U_0lVbh&%'siuj[eHZDqu'Q=Sq(mqGa=b_+RYqZdV+NmeAG&=M#=m@ftLR.s^
%"=;_&,QQL%&&(e*Mf(4gK_m.>D<XN!ZQRDT#=>G`p:@.D%aZ"TI(Pn,s!iXkkun&Phu6,maQ0TGSkoCX-PC^G3\>D[a=-,S1+CB#
%ZCbBY0iA'_YC7$8UWT6"VsZ9qC5cIR">.N5[q0,b#k4O)"kq$.(X,A;IRifCY]#8J&O\RNS$PpF(gRN7'2qa3HmSn;D4sd__dIIJ
%H*dS+hk&$N35ruTZ7#tkiEUXp?jq/NJulbZ6ApKmc*!N)@PNa0(qgl']-0)lfpgO^6BVCoeK.uY\fjMM,]f;[%7,=Jrc=#>jeOeL
%A*\iAcY^Y"(W;'-`C]]"kT_4q1joOhgVZ>]i!cEcUQ&23HJG;rIA$@:&u>rLNTQrVbUG-X*(>[X`<_/0+Rft3[2c$ES$Si/=u_mg
%&='_I2g=:%mBKpT0P[?Fjng>Pb;oT74C1/tO2$u/Q:_(^]p,PS;$HA+qutmP]9Phu-Su(]R[jFtO$r^7*M>-s-nul5]1tJ(E7B8Y
%9^H(Jj$S4ZS9^i<AXP)J_e9_DllOH@mV#L8lnDKtV:tFKbJ.\PQs`K&@YKfdI>PNd]fAN,Yrt@J*C<"rNFig`m0m$04&W*5r984=
%FNeJlREAD0nLcitmA%(OS4%/&3NQnLpNTjo$_EDcZP1Zr^,4PH*-Yuk/Z&XCE5]_/G=Z][1RtkKjHiU$c=PA37mU4]c]3k/Ze`M$
%6S23Zb9J]m:^\NCa)m!qVqIRX28P6)3lg'?R0pZ)ki=`2mrhn1;AB$hCYkbQ[*1qGKQPdR,^N1346)&ecH$n<+j/1_+5\&n:bH0_
%11DpUapKSP]&G9-#$m'n>uI1&'BCQI_=<G;@WYJIr=YJnE_%CJT4Pk^UdOSK)MQ:Lfl+U0PqAEo&W+M9385IU(#M)DP6db)BcuS6
%J9?a5B*sVY_Ze[>&gM[7>eq[cL2ARMh]p39?%ik"r&*]L/2*lJ0%1FhUcf/P=W%e"d%Os;mbXC*#E,%Kb5>`5jQ(''.6pNBj,D$6
%07p6@f8T.a;bndekC8&^8g<*dmL!NN#XD%>d2ZI:TQVecGpBFIPoNEHL7(1h%"q]@G#>/r1dQs;LGG2H5RnPCMk\pVV`ZZLW^3$a
%4H-+%gLin6.qXi-%??'.q9Tnn-Wi.(+nRY$R>Y4<IT1EliO0i5Kq6Y']95K=:@X+CrR`k'gGd<iJ$?%l_6C_U_LNMc)r*)R9Y0kQ
%Uh'8_k,`d\=s.Z^m5?.-=\iJ;R9cX)Q!0>*>Dc^?[(URJcZk72Z5+!IcRt))EeGu;7oe.=1te9g?E=/$-&p2]_%A$o,mMg4Li.>#
%-W;2C\sWXdf[8@b'jVuE$6\FXl_?H,oq];`D5j1NPp+#A97haL4WslBM%Zarrm=$22]9N"beJ@+3()2i=o:&2aTLXKa]s%$b0cs=
%kZJI5Nb9\Dbc"Sn,q/.hZm]L?Vks_7Dch=L7$.X)6m8;R9;DQ@2$etZZc>s]hHg<4[[XXh@J`P`PpS9E?nB@'IqpuB[&QsSoo]g#
%jh"(nG9<edKqRmM8r1ccCrC#JYJ&$+cRj9Mn):hb$A1K?;-g;k<K,qs?-UK,86&]Z[60eS(?Z9(\uA=:%#A6NDuOJo]VF#L&dAqm
%D&+H\L)u-\[C\urF5#W(:e7Cd^>!Qp3)NiN6!h/qn5pqR8<X&,E'2=^da*o]Hui+,b0tXC3:2;L&jXn3IL(U8&l!`hp1Y/h;\<c(
%Ia-)pLbjCU7itJUcL"b0GB6U6;C!TPD0u[an%6DN$]IXl<j/WZ$7pgZ0Y9s_'FV>pmp7iHA?B[EdgHN7G$dQbF"RZi$<$Mo7WY&>
%P5=Pt:'`o;ST-XBH[q^R##O*MXefH!#Z4=8G@-?<'`"lm@,!S6rlJV#XgXiH&O&TdJ.`/I9HoVEBAFkLhe($"Jn!GFR=0@ifO0Z$
%+tDT?#f5Mr.(e,RRZV!P/P6_ODaR\5`\;,I5^GBRd.eFcLOL43=G<%m_aRR^8SI=!9W"kCU:cSB%L.O%*$iLbF*@:"o+uH&%o10\
%Y!Fe"XOOG^f1cqh@&AUml@cN\9Ml:@[C)"2]gU=&B*:iFNh&JJ.#qUGPi]\g&XX]Gbo="i3E"h?koE@r5h*H_WPAV!dJX-b\kQoM
%;eR"aoKY3)[''2W+R54FKP7K^[.i3P@Y7u!/6b]AQU^CA7#tcC[NMIpT@0-Ofq$Rp1HO5YE*dP_;U,j*/(JaR^=]iVOSY%Ed9HYO
%8ue\>AR>h?njjY^,'nL_I$g2:Kpd1UW)0fnP`9FtX_^U;TVeJsTSC^"`<_4C$AGZ8qm]*_S5mbc^/(.CLo/Vf&V[KNO'UAT]N6Z.
%pBrltQrJ/IU0NW4+,hcjdd7a4Z$u#L:P,A1dGL-[\dX:_r)#$R,W"_?`$,WLRY1d<ppuFCApE+#1>f2+!_^#,>COep'gHGJ[ZQ?/
%k^X9u#!FlMR#-f[[+Mep_I6K2[ok6h48L?:/P2;?aOcgr[kMPm-mu*cl;9rJCS>J"A-KUdpRe3,]*[#>rNaB$k#9fMLI_S:&ijhA
%?SR]QF>9B&GE_`r]n8K"A7&^]p^jg+3I2[1Dqhuj3qSHr)r9fEWF&WeG#;4Ar\STi@2E<>j=Eq\7bJP]F&6Fc?oE=SrG[bCI+BL^
%OV&a<F+n(&MROUgWZVlG4T$0HFrgOj])YmQp1_9ROsc+-r9/q<KD"6q5'm,2WhfMnGg2o2=>HYA1$F@4COUalR*E+*Rsc.LZ@3gT
%e/%ou,l3NH[GhsI`,$1uSJe\!]e0L^/$bo.L4:Ae9s9Q.WYL-HlJ0h@^>dW'##h?rZ52DR1ON$j9]KOaK'C8;IdhT>6)O"o"kNhF
%/.V,QiU$0L4NrStY`P`[#N^`m!\u8i@7(Ron`@=>/fXOR-!>ap(A^i;$dV9S_o(ok]"KA_<M-nup;')rcBF8>R&!8\n1dJ_=-T6C
%>Fj%'M^mAa,t*7?Vd3nkEabfZZ0g9/qbkcl.>V5n^+TYXK`,N2.CA9:gWshSO](ff?2Wn@TN4Li=VA'AUYZQ6nF$WBLu(jnltS%#
%dV2,6,BrVH,a]k:<4cG?qR<J&H>g4#e=*OEbYWIt(@ui2=PU'"!BlfmdsC<<#7lAOlhNUIYo)(D,tuq7EVSp$hQc;iPML`;<I1]+
%0>SLe9A^QP&^k7,<E%L@[J4>!lSY`rQ2q-n8ER.7>W9a>(Hq][+Wqq9/&$iLou57??oET*3TkP%.!8$T&+8,"&s[k^(H4\^L6H:=
%G?a!?.`uMCh_P%N_H9NeDAFPN+dh'N_%dMFNorTToH4]8NGdQGb6HBd=kj;J!$RfUXa;I1;5@@93$6t+kn(jHF[s2";;Ls6CX&.L
%6@`nac+]h9imH4)1GoRhh9=Ke1%m:qFFi9;K3uA[bXU.<Wu75_@(eI+ESjj,)BJ:+>LV5oZ.dpV8teM7Jddg_EV\g^II.uk%MSWt
%*dCXWo;.VEDjRCn6ntZm(t)Dq5A9p_LUR*KAoj"iH9Kr`G-+KkZ2B?>Vd6R\[DUW:8o&<u2gP(f]D/XHmouC2+)U>5g^[nsMtR[6
%mStl=]"pm8%7!kqPl`'V.M9Kg[J%0$+5B7U<,Pa?F%Ehue90sinh.$3.uN))M3JmZ)?@jlaJiL@%68C8)X>b%]%+W%nQn$Ub=QX;
%G,_MZW)dqm6PAI7)AK%24lGSa2S+=e-,N/*'2_=Ff7RH5=KO>;5-e9$dIDWDkqs$]jqt)pJc+(_\i9\UdSp->f='nc)R[r--ORm&
%ItEo*4D$MYM/LjWRLUKoM:B"30tHn#-^QURDhQQ/'c2[dKA^*H)U([`#NN0j4K/OcVP-I\*(>a_M5Z$MDgSRI91uM<5NS'4,07Nu
%LQ#a#Y3qgH\1oYYq+Wg,rq,"Z"*6D9h_E84#kBN^UNl2n9igecUmk6$+aq+h.`83#m2[dkQ6%Vo`,7]Oq236#[rf;`;7CH-GqON[
%QP*jekMt74C[%sToiBm)'`30#;[s<k;-LFVB&8"08p7W0nR4;Vr8N*>p\+&G'D@&+_:;p.dSIE].ZE+cDTs5SURC.dYGKQ`\/Tp[
%,O`;&C]"_-1"&Q"YGM!Rh^DL])teM#"oGDd^@74*9ckt"QJTB<9EWV^4^LZj^>)n900H%#dmjeLV%54)KA/0c.$qOB^+F`I(ZOIK
%hM:F[088$(s)IHYncP2`0DBheP.ogHnNn,Sin;1al)b-V*n$giLZ9&9-MO!C9CI(fWf4#9i,%A[o[\W&<&!GW77<"XqB&FMl2:tn
%*,i5AB+(o>[ha?Y6k?C>0.[W0]&78kpt]`MrG-qF'Z/qeCKM1F["iiGd\H'%L"Fb.(D7!T8]LSC0!OR;nA7P=2LTB"[Ie/U?/(lB
%Kj]c#T,^McO<0>>B]6AkI]8EH@+UG1KcmYQ%IJQ%+[)8X>'MX4Hf<RNfAgh8j#I=["dt!qZD[-cZ,BdE13/6/n&>(J603@+Dr`G.
%UQKu?;CuenHO:4:BKBW$MHl?M&+TOL=@J;U.=3uD(%JDgIgDeZY,WLqM`;b"hR^Z:Drm@.&&DNr?P206q1k`8cM%0:n<Zd$O)I2"
%BCeV<?P,N8[4Q1![dj.D.S'G^I-Vq>Rm.heMYO5j]pmVA/sIreF']CI3Is[F?P,NHCWE@Co[9W7e#/NRij8;^)m?(KY9`kM[&4($
%"g$l^SF8SYBBr&4?P,N:<A]Cnh'KH#pn_3mn>1es7e+bDNI40BCZHT3HWdkY)q=VZ&@V@":B3699S%DIHprEu`&9-RSJEVj#$:K%
%=h"07Z[ss?V7/?h991G!iBY.la9>bR(&0u*F,M-t8K(jhW5c;9^*:9KZ8[bs,O\rbgY-j)4iD"![l.Pc+(!Wk2s0(i9&?-/nXYI1
%D#J&./)l>n%e<7,\[Zu:p$PjMH2#lWHo?I2neL]dn@IJd>=_2n(\r%oh8EJPI6K-QYD=9eOq@LpIXE[!jro](\),&Ic/0H8MYR1Q
%s75Z'r*dn/%Kt5ldXcE[o.Yq(3B7p>Oc-IFAG&Q#+OT5JjQ=iRXkTE0ZUB?qP^/-_GK[AVY('!-BYSlL$Rlf')6?g5e>X209"dW2
%laKL(D5WWT"BFWG6eWs&M\>ED*292eLD2[@=Im"17d978aQ'BTTe!S^\r`MV5F!:>r>*aVH.7s54MY6eQJ#X'(]Z2ns8Dim,/DHg
%)?!GOaWg[mdV="9;r6p6#n^_(-CSJ?!h\.=pX5uO%D!dH:1fki;`W.7R&Le"hdd"U@A`6E7Q40u-V>\1aBV#1Nm6c@.Ca*b?rJr=
%1sA31-1$Mji$B(`WUf`3ATEkDp"VZ\G*$=*/H*gXC]m+lk1c>5Y,W+U=\pHFLZAsbWL1Q4HVT)!(EcRpdJYJC^6u/r<VG6A;eN>J
%I7b6Lf)\JkC6%__lI4%l;[V<oq=7k!CT@MLC,+W`'rG,IPX]bBb6=!)U$X#Zj^CP*eeU`>b8+Y%nI8(?MNeEs`G6$cBLn3hY^Xlh
%6<i!gK;`mm(-eX2gmcuSk9h^?efUaF_Ln(^YI/We.77%.!J(TP@;qE/#]/00E?X;`9B?Ms9gm+=Po)?6O'[d?"V,ECKoC#/4hf]'
%W@^9a*bCI!+8g$Bee]d`>jXgab%"V(gTflM3NV[,^\7qtESV\k3s]knGdl/QEbXe3;r<`LTS2k"fX@OHZ(LI?m38/Rf*(^lgM(r3
%%&Dh\*/XoA/#jGH]g7M$bgr3:-3BTgHHBZt?/tZ9cF0j*5OR?H.mTCZKVLr\iU$B%$B;P6aomTcj[`F>jYT4hfNfS\hb]Q:];9m`
%##OmY`r`]^Hc&c`]T9P`WO'M@>)*fQLt2/?RmHKA0OIAgGhaKuoH-$#7*ni$+YIo;Z-DR#e4PS,<3MsVhT?Iu@c-G\%Z&R6qH-/5
%l;srlZA_[>8"TZ+o=jnSbP>@Ws3(?[a?^UUa41pY6Yb8VB*UjmlfE3ti.Rm/1PH&6mj&)2&:m8A:n&bSP7lLkj]HjZDPZYLc$%@h
%-.;>eMenn]_0?m2cIL]EFM@Jr]fN[KmnaGsCk'Ir/A7TEL'Vr[il+`5[<U:%:)fEQ3/h8IHJ9Qt:+:n_?=DtJ]YA:7Nsmb)BWH\V
%SD6dLQ^\<kackA4&W'ZHHdP.5Q?8:#la;59>2Ve>h+D@mQXX!pC1c.uam4J@JC1\>-^JN"!D&!r8a<\QF[j'X6/n%AB6R8In2*gW
%5l61:?-cm??X-.U*q:)U0.%,<J:.hQBqn:0^)P9_)6$['Sb/o;pF"MrmAT)CTLl#J+!<;`IRnS_Go8D<hQbf96?<(t>3LL6f7DLs
%Gr0Ilm)>AO&ko=]%fqr;G*?t%8RdOajE)a_A:J'!@q:kOO_VtHS+auQ?l5T`FR*ddGTE!\D$+9m/U*0Yg*M@q#CgN_PY'$slA,^E
%>ShZmP/hg0c;5OZ8Q`tFH.DSpo3S/W]Kj2RK,p+3G<bj9E7nDrDS5@FJ!usWmJrb,B*DEkeK@iXO?$jc8S5AlX@l^h.45?78e&*=
%fN1-r5e*t7?t4Xs$g1ql\da>U_a[k\Un?;um;2g5F)Tr[c+A4DSIQq101s19?F>^e8inob65;mDT3NO]OG7PfHAb5p-C?e.$4d^\
%D:+gVql5aR/h-d6[[k_C9?Iu-0hSpA+Nd0&[<qN@AKS)XdDNgiL]oIV&^u`q_]^9rBDYi*:nOQW%[<Dgg$<spjirj0LmXo3WGJc)
%e98QFhe+sFW;EQoAq*C9a:uD``[78QDAB!IfTMfM&SY.f%65"@\%!-D+K6ll-r+)8e@lq9`jl`>a.)6iO6+GM(_<U_4+\LCGH>e_
%i0NUpX>;mNT1AEUGL6@[WDmXW^H9(+-V,DK90lCX^2\QrA'],9H^X.AcJjZp^KXEeOO">:V&*J_TAbX3ZDD-Yn?hlI6H[`O8rWZg
%2WmG=6f&\ZK7He]WVQ$tpB`b7TQRPk7lN9@8H=jpK-?4LFndDU,0b*!<'HZF$l:`l3M]>]YP*$DZ?@[k.-+1mc*/(7)TIi/i[=[k
%olF#7i&Y1q>-tE2RV6[i;Mt^bSuT^4U/4hkaOUbd;!=7e7Ko?^/)V`(PuWUWeJt<8Oah^2F$s\HQ`CIP)I,TEX4C>0hSA*9<GZ;D
%\`gARRg&M24@o0f,]N%nohR6TpRA-q5<?[=bT?YTQ;5HFn"ppW\>W7m5A!T#UmS<g'NM@lP!/h2X?p(OU!qSa3#97k8ir%D;/_9E
%U5HH!3%(!k@Lc_=26$aBW-dd@8[Bh$0'P-I_3&EO9C>76NEU^m^>DQgpj0;l]qd&@[!k&^ZUJdB$$\+O\$,L$gsU6dr$=!cm-Wmo
%^>EqPrHTtVMCRAEojLT'!"Y?&EB,S8UhbT`-U5>&aVG?+3A[C%jOR'UfYrB#%94\Db9k.Z,7FQW:fhi8$YshEGG"qiCrX(++<H0I
%7<)V`iqdkVp:'U]QG-.ePFhj@(=4qF5lg+N)A-?<cp68-NMr[:2-#pM7Vl6K;OCpSE_-<3U.S.Y[(IXjkd1V\F._u/GktnIhX?gL
%s7GFkN;U*5[:$`(9:+&AAK=VnGugZZl591t^0@DIc>3$]o\H=)R3'*q!n;&L3t>,t<r*3gqkI+]9#j#rrAbrY1(><'5.:4UJc"VS
%K4F@p*j<&>UM06TRQ?NPLA-et:ZmI8F`:UgeBS*+L0$=hrS)+4\Kd/P9_crO0g#AtE.%H2q.JshUX[$VGf_##UGp3n[rZGi!Br^;
%qY<-6rfX/kH[@c5mh\+FHs4:_eA$F3ddV.)%?p[/J:S(Y:[?W+B[6\pY2]B[T;#QQ?V'&rV>BoW-2W3bY7@M;kI1IU5OgelcJc$p
%4HJ.LbAk1B%mP#h0DgTp>1!$G"mPrY!dUaiiqcjr@`lf+50d^V?JR%6_nHfcc,;<B.o+He)b'S&@_P60Wb:;0SI`FZXkO!8dOK"Q
%glIel,4EdGrUrPRIP8\/!E@J6-)_g]In+FcLh_TIcaWQ&^=kek9@&1YQb40?\!Q-bO6oH,\O(SC@UED$Jn8Sd;F"]Wm><;?I">s-
%cN?m\%^dB&#)IYC"ahpO"!el7F?Wo_-!94'P!e<DH*cBl8Dim4paXkg4'rU/#4Uu=MeMYE\P(iIX7n"0T-"0??h-<gD_K0$a#AqJ
%@1+&P7sBaB#P4stI5m??lUp6jS"c66EYC8@^/"NWY([`_)fsU)Y'O@+&'7GEHWSXsbSq2GQJ'cS3mHfAfcjdm!t`G@<,7\T#!#eo
%'Ps3e0FD-L]-)s/T%)jN/&THn^9X\[Z.uR!VA6Na*J+nURJMI9XAd).ab.OHiVRAX_T-ARj=FCRStE+XGg+sXSW!un[388[7!6Rl
%KO\>mg=C^>@LSerUibahHlbZ44$R0?0'eC5H(#R9A'V]CfqH@=`5(@[]XRcp!CSl3a,*qXZZnD\T\4!]hPQ"Tmef$p:s4mm3%JQ'
%JU)UdMAV6)3@j#T!5s(G/YFg*1?O$l-t;<8Nd3o>iiK`9$e7g(mdK<"BagV>iB,*@;9dp\<q?o%(n(W\%q9LJ1Mkj'QY'r*.PVC3
%0gY9$i=ftfDi?Hur`[rHR\iP9$(+WY"7?p)cqpPhn8KkQ,3>CAJRn=I7Q^lY+uo+Y8H/6W0D]<6iso8NXST>OeQ>=='em3@-"Ct,
%Vc7'+1ipOAU>s31#*uV7.V\4c?-k3&Kj4H(.0Qri6i%'-No='"WEoX8#rVr;1CHX?aW+DE008n(CFmqYK[H@`N/=eD+&J]7UV@14
%FZ9[`BPAJO%!`"L`79ll$Fre7!N80!$C89GLLh!I&4:u#%njbs/kV5a[g%(XY1Lh@h5S>pqMHoZKXb>T!/+Qud>4pjGYc]kH\k;E
%0Da6p=`2^P/OcB^8f,FXm]S=C;<n#;F$J/sF0RNF!1>^4Q!-YMrYS]B$Ri=[Kj$HEs!YDaX;$7:Qa@EPYmXMc[`4%?%DaX==_u#[
%,nW6\6IZ5cSZSeWg+'$?gZ7c;I<::.;1GfGm\F#j'(tJVek';a7,fbZ+m1`Q4u&t"YL=93m>s(_>sOJ&i4Ko1\#oYEhiR6Ip$]es
%?iIV:M-BNq3j@8]a6HPL+uXL4&3d-5osM%&@\Gd8RglTolr@@'3s8r;YNZVtIl?T6*0^u/SkAD]UHV[WHT14#j7W,A2LaGE3_ZQ8
%#Dj"2ULD)0Z^WHE,hFJQ>NMgQ?i^"\,&Lr?o,XlrCU9aaj\cR#>+tg]%bGnO-mfl%/5X8T@T\cs+\Enn5dAAVQ*8RGfpbkoWP'p>
%e.OSW%+XaJJQ>?Z9Qr.)eO_a(5$=Xco,-r^$i]tu_iE4W+Oq-KEtDuHr'h+G1,Yi/rUnJpT>sLtmn[Er%rdEjEK'BNY0T7d#\PNm
%p#cm'g&2J!l,+(g)Rp7(oq'nDm2eENOSAcpKNu/a_*>])Pb?6s]!.)`ant).][P0"/[itL33=tQn;TQ5O,YW1Q^@n*afP8t0,)=g
%rD63Yb;ajQ`UBulG4/6)o@EB956[NRC`k*<k*H<-kAao>.s.an(Xqd"I@?`OB]Mg`%tUcR?JJ1ib6t8-s0oLZ=g]MHcLniDhdK<,
%,07XiQ_Cc4_1<'D5W#LgTh#nM5ugQWM\^X9'Am`j&KY_i/6#n(:6%+0>iB,ZiGNOWC[!_Y2?),[D0s`d3Do8Ep]LHa"=J*(gRG\e
%VquM-jk/9qCC1Q$p^4+USg3#+bMVs)JFB\nok'eF&qdU<>*lJ<i-bdF=8,?>o]#ru_s@`r?R+?'[2D,)5p=tI2"%c!a.2)6rq$@q
%JeW)I)GMl@IsFV%b.o[k@_q`f,.hdeZl6M]W9iXQ0.rR@?)A0WfrW>e%l0[\VrLZ3:0'r>2nhtH1>6bsF"#+T_qmQF5kX/5o]%f?
%VbYs+[GY#E0aMt8-Ye91:Y@8F8LW=pANj3YLl.tkM>)kT^6b:=%kks*D;*V_DVqB^lo$6dP)KS!h!$u'kb<-dhH0,sIX,/HB>W4^
%CML@LOQg6hpZXt89=QSe[/m4e.74BB)!3'g)[Q`AX^@$@*gBKI26=0K6jFe/NE"on=1m0;npi(5Tg+>-GWkUAqq1bQb&!iEIR/Zs
%U](luQSb*?;5i`J32F,<WXF;\heIHuq]`uP,dm*JqD[sn#>(0"SNN>lb6R_@5E:,ool4WBU&>Y)3^D&Y,K]jO,=+>TC83?DBmk;0
%l`TMerIJ^;6-Sk.q7=3i%rh+9osZqFNVpp)nBCW?!@g0U+_n>Z^O^(B9YGhi.GMP_LsosA."=nRp?d&0j;'8ArLbJJ#E7B`@FZlD
%Y>>RbicF#F\U5#c]]H+f>Yks#0>V?6St"$OH[J?/-RKgJo"CLDT7<.SrdP`_WR?s)@_8R,?ED7d;7]6fBW"_0U+BuT7(.2uK*Sfn
%6895,.?jEC-u/<r.P8VA%''$b[i[@L,&+Xe(+@9%EkMU>@V^+]7TF*$Za,ec+(!7U0,12UOm$@kELbe+W'PsA8D7*6`<PLBALLE?
%O+lIlAjQ0V=m19FcH!,R3F?g/bbF6.AXr<5?I%`cMU1'$NBE_@86W>675>Zj\=+?)W)"i9jI1J]<WcGT-5`^gcBe.-g4DQmQhh'.
%$[KM%gVAl:"FVl$)5C)n$'1("RI/$bE+$O41^:2Z-E><3RgEVI"o:7MDI6m%Z"&?04KR"A^-IWgdGiF%$gpiuR_6u)`uQEM""2gr
%L.^CcgJ3PJg-HOs#(@E!AnKsbI=K*)1;1G+]:YFJfg/KT9oV6YAR$e2VJbV<*UV_m086coYbQ;@YAlp\9"+ugKV4A2#\lTYUC3kr
%k&F`%d@?dEKRZ^a(nT0V_H*COQDUo4\Vg6<Ib8R5>F)\#R@IA[9+H#3;DK#j1ja1We=\#n:p;ps"n<<Vraere$iP<Ae#s=;Mf*]@
%bOuh5PE;Y]HSaYg=PiuaNRikuRgr-SN&J+9@i3O+?QEdLF4qGd<q;ZUY9jH`d'!4ePg]8I*d1DO@\?<K%rLo5p!51MBYt-:[h1f1
%%K!OY@-s7BG1qC%g-QFMH(Z`;HL+*?I9"P-H:+=ErG(mV+0_5[IA[t!18^t7UQKkJ6</^/EUBC=I3JRgRQF#BNTR45Ej=i2C8<6#
%&2j@U0d=tDT0$:h$;T?*Ku.Y[.WKkOo`8_!RC(*le42NfQ8mQ*h_MTn9)PW:=]>+']uJ!GBBi,0RL4[[M3J,74I,pe_>%c;LQaOY
%"<N^i/Pq8N+*`.^3H'a1=b#;hfN]@BOX<W$%C,Fps#)VWip(t\LgS5hMa/Um(b<ZNPJogo>Nj>,cGNUj)](m+)s#Zp,Mc0c`6#d2
%f^3B.]6\8i4)eZJS2Oj5/K^u3MoM=P(@,K_>.^I8<(T*69j.tjO]58l`G-R!?Zf!N_Vo5!)Yd@<CFdrf+t<n<--MG;:9/eFEMUQo
%k1KnGZU[[+)G6GlSs#;fJqb9%b\Vo!Q$bj1=116+<U(-DF9YZK:6_i,$qD/tB[3$D(JEqHOeVX&fDBgg9pZF^\$e\jOB^9+,'rfU
%=[G*UU\aJu;>$:AL8ocQ;F:m&:6$nA1M2_J**H*uT&(/a'1Z&.P;T=3r):6:h3,m])^PqtcYf!\PPi'/$%^OJVoZf`la9p"@O\@q
%oFhfJm+K&B`BZ5u_189%9g#K(T%;iB1#gCs2d\#<-lS\ZF0lc;Q["2R2EO6AGY:n"%nd["7RbU?Oo>a],F&'4M&p"##.,oFOGKr'
%0,b=$*co<ld0A>9edfAtg*C5N0(@mI8KXQ"7IB,!*b\Qcj&mI;V9N1!_'/B0EZWp%!et0M33p\;&G;$OWBaGem`oO\^O5iGePJi*
%WfBNnK^uL!N)C8!S\6";/0L]D$r?(oGA6Ep$rFK\C=^Zo.o_R1#%u@lA=nH9^\%J(T77#7NV$^RdTm0JcIO3_;O*m[cgJr_DFl!s
%pC6pf1Gp&OhRBi?C)o_d1n(<)i.ml+(iIYL6p0;^:aG,PNKj1("J.>o^MMq/d'CUe6ka9_C&iLQbe;,+I6q&5W*!G13nK897AZm9
%MNGoj$o)NdaJ,*G1V?bA"'<h98tj19!e9Z!ZcTe$gaQ=HP3MK?#Jj-),M3;$U>HoFBsE^,9R6A3K7%I6P>P>'[nfDGN:R+Y:IP-'
%r<'_Umn5s2/F@G$39O,bO([AdO.C7^_lFj^,r-+9hRtVZ:h3a0_XL/`r?(GFd&-(qrqN2^cp'MOGePH<]qFmu;bVkm8/i^M`lb_9
%ZAcq`:T1"JL-/$g!6LqGb[D"LjNa'Cqq9HpeNQU:'=s;u40,7c>"=);G9YAph&^Ccic8"`q[JQuT!F3%k@H9Cq'Ci%RWaae//+;G
%Cr=&g5#(=W]qb^1,Fo(^!ml579.G&&(fks7d,8+S0e<g'HCApl:KEK_$UB9mlB`R.131uA>s$`9VWp@1:*B<(/>5;EHen;2&Z-gU
%of@5(,KR!;GcM`,1ifR]fU91J2`/7sr`)[<eYs]r;9+d$EDa3]dsTINn<Z\X#93*.,t7L*JnsUW!,;'Oji&o*e>6YZ%OIg=%AQ#%
%S6VfD6cEWn:,$*ZgnMC($[V%,IUi]SBJ4*l[.l@R/%(po?89IMAR<M"'ha*_-mMdL)>C$ZrfEBPB()B@ArLFKL&pg<k3b"nFIBVu
%7uGPki/#Sb1tC]p.R^QEd;Z1t[MM[#<Tn;a0(UR_R5iQZK?Lp-qEeG%Z`#3nJ2<VF@S!n6'cD4O3X#0uHCkST*LXCGIU:B7f-^*4
%)H*V=T?nbXPgS=r9$"Y1;)N9BMT`Z*h1YOqofc]2dnSt94[KE,'X%/"a!FJUQcm%jAR<Bc3'YcEbR:u4k152q^)=o0eN$'[bIkM%
%r=U+cn*1qP;ZT?-"(Y`(W>&Xp)>gX,mu`N6okgOrn0poN<J2Vs\"Hi;]!neuFI.:K[T/ned"0EaN4YN(lIfluiaE9SR?os@6Un(c
%0+UW<a'DlFbVsiMktoKP`E?AbNuoe+/E0TI4I7Os':+8b0ol*]RQ^KFP$J.W`!GN^SItkE0q2\/T**3dO4b#J+h3YHh8#)<,h[WS
%"\5QPJQ>AIc<_T+,ubuj(Fcpg^cK9eKp7Gth!;0m9FKb@5J$tBQHYOu!e0\172>ZqPZ54q\cg4](iI3f/;[-]N(W,$1h6q\;!?)S
%em&:='WY]6,iFL^bcV<h?B4Xdo)-p1!rg_TQJ3`d:F!t6A9EV!%pu>f#h62l[(/;a&<p-j/sqre#tnW`f43UO%m+d&[()^HTO5V(
%%3;dPAJdBUmk4uPG.:n%(sm<oI$h?g8$/jfTuZ/e[.Xt*(8=@!*:[HcXInfqI9N'3^-6Xj*+s"a4cB!pH>[/eib&<e.di22Ll[cZ
%XBF@:NJLOB-Y\lRmP"FMnXr6W)]-Ti$>l^(>8s_L')V@<<#2.a4rA*R4FF>FqS"3jo4c1S4c.b.@NC`fdY<2fRR?e8Fi7a^19-8O
%&j1Zc(/j4-cKT`S=:6#`VtL!M@dsgET>ffMqA`a\l7NlsFG>rAAlV_jr3NC#?)8(7/pns`-^TbS>_OWcWl=(/q$\[#=m;4G$/=qI
%hd"VW(K8`P&-?,i-M4??N(_^\5VmG#[pg@#FDj(JR,N(c/f.SKqX^d^0G_E?lT_6S`fQ^s3DM#c&n/<(bK7b_#f]]i6Zg.h\mR)'
%?H+g!4WtZ3BU(`X2'EfDcQX3-(Q:G<Eu$kq#`l,@OTYiH*--3g0]lG2Xc=eu&m[3Z$36=3'S^260Y*9tqgWD2-1NhL?R6O2JeV'#
%kj3!l1=U3mMGoT!hdPd=_<^^@9IF$W?6Yki-LdX@+A_eT1ili=IDVb1FGO\f<TRtq,G?q#Ra;2WUA,i##dQk`^)NHmMQ,[9+kT\.
%W`gGfQ4QKH%X$C_=1E0N<3iLgEA,L=TVhBAf:-V/1e[/Lg!pR[l=WCp1S*ga1t7W\M.\_L['OKo*@IV_^MK+bWd)Q[NG-r(MpOLt
%-</_h;u#]_0Pt-('jSu<NcD?p@&?KCW:n_u<Q@"N[qqo?i_[#^JJ#G9#]u2>,i+'nF41-TKSu)G/>"YWkl'&$H:+R=87Z`S<J]rG
%<KqcgFFj[ah5\3-:A?LOU<s5(:r0aNHU/C:m9#?=[5Oud$Bqfr>*7L=:OD^2YXijlEXr[%?fiJ^,G<J##bAd5<8p3Ooau#3[hYkU
%,C-qa5sbj!jj<$d3*%@@PMIElP&+MHFnOCO+@24Z>T1ZOGu+OjHrH=*JQ.X>)hUp.8KEYlM1j[0AmgNcr1.S<#@D8tGs#Q2<65gU
%8n`JcOWSRWC9n?b<?`A%B2jfB'rg$oMS6*YP"=(4<BNL*@D2A"RL3Y#<-TWe'q132B=;PU&bAuOO/hlAidF`+,?,&1-7asMj_N+T
%bROtL_DDiZ*B$3=gruDr7.+$A7OjC/eH(PFWpE%fn_h:/TN[0"Au-7&*N>sSrmDhn?=c.6\IQUkiLsL3T:u`-_`hsJ%3o_Rd4Vd4
%3))]R/)8Wj(9Pq?B]*ul'EOA-)QC54.]D4HVa[hL1j1"b6sEFl(T:7N,8(Qf]VjeEZi5/pn*mD57LU--8.TK!)LWWA`1c[(6CB5.
%Ufd0@Y3(#IcqLB*`1O,UGYpepU/%7o/&jqkDq-=9l#b3*%4sR<3Q)7oK"Oj>:$O=^@2(Zd/YttLGFQuqBkJm'Td!8`Ei0L#]Hm_c
%!-FqiNTVT`j,<3hb/p+&X$"Be;,FMj[73g_Ci,JR)6GL%4^-NXE5u[8T]mj10819V,nrfeP#"#pW<`C'[eBhS+j/-QFKHbSI!`S$
%56#GO3]QFK*gL*^3>s5%K?A4EC+e)T=?DM^Xq3BCTsMEIVt5a!@4Ve&]em:HC"H@UjWQj-#V^;Wa].6c^liecaV%E6nEFrEZ!D+Q
%c_+rJ^Q5m*\M96Kj+`4NID7?%VH1U7mmWbfePBeRaB>=2&7"CK<#,2q`=0NL3rWBZ^L'+S&jP$u=e\rmjZ(8P+)S_ASd-\<3(R-4
%Rc>_X^)7/lW(8\bEGi(IZIO2Bl???2]aMkWff9-:@O3Bliap%2`2NemgPhfn.8CTOV6HA]hY*.o'V[b9S]lULg&M^X5DC)J4jKRH
%"ZoN*!<s93dm?3$G&Zulk%G>;:o,B;;+tRM2bgZPZj!@(eQ9/1pm\o"c%.cQUQ"c*MO[.$40MJ1gX'fUWd,/dRp&u0*g3a(m'CT<
%LFH*h<+o6+$=?'c.jA8<$'PB^<@;+pMLMrQ2r\g7(AhO:#b+;Z(FU(:kY.dLW0XBJ$j[4DkGTYU7nqeE7!,Zj;-hC4YYd-n]i)6d
%a/E)f]s_$O9TZ8D>gY$sou33X0L*qEZmSX^,4S=(4CYlLR1cC"C7-2sb"cF;El8'Z:;(0eU]XW/a%.&kA-6S\'OFPG!(`2K&"3TZ
%7jhN+$%V"D4s9/0*;*)"88M9e0VEHZOP.4N)M&P"`IU_:jK5Oer=uKD0l2L#6L[/eLeeA'kI35#7b(g9rcfI&`B_$8+gJ11_r@_H
%c<)Wn&@=i0+"C6rD&<kSJp*;@.3nP(dmFcA)m:JHfSK05Y"iKri-)PP_'T?S)o625MOf*U!^6te!NL:6[sgq1HtnZ-l\L3*Zu]oC
%NOf9mK-N16P]\*/$pT/gR.eCI=b<Ol;enHIiF6n!o9<WL&>BY7<p?^i8\1RA>.5,P6N('`1\dc"Q>(`FiG(.T#1kG3Xl+:62,._J
%8n`,-']jL>&@X?qJip!5_r@:U_Cu-TZOs!6][]N2`eeJTNM`[k]VBIK`GWE5EW7;2qN(^0NOZj+o5P,%n4A]$jfEl@s"%\a=Dq&'
%CKd4jekliN`#h8W18*Z<1Ese6`7ER8WWWXXcAg;RGTssK0q;I13pd!jIf[WJ?iZT_#m0doHNpr02R(MN/EH(0>/[C:$n7>fL^GOk
%BMnU=d(tS:=<&\DM,b:NS>V9Q<QYqfM_l!*"_qsqU-k4.L/CBKjT3?ZH#t<;ko/L-mceXq+3FhiGRVNZ'Ysi6TbJ/4O#&kfl;R:!
%)FU;LF^^?7ZIkd,9c$E9+S]J@p-l1e2e0+J5jQ1BaNr..LU-@@l<[6jh:/G>)GAJK7a.t1mhU9]#c=VUU4%]C^Lh-+a#=C77Atr$
%f+!o1Qt"(:S?nn;Np[HqR":^c9(ZfAle3niR1SI>YG\$)AO=sDLWSOM?'_6J@*!0>eZuWh>P!-\4\7CN?a\:eag$K(=k\^#-)%pK
%B\24-F]Pfp9NA,qWb+SOB'^')<2Ro[]Nl$ld'qWG1.j^EI@gm!"H*:Tq6-PcFMqqK5mCnfde%"A65>FqeM<Cg"Z2!-;8[<a/+a1s
%LF$Od];@?q]V@*q@qC?bUm()%9V@1XEAXXg:[@TCddJhpI@YR.b/4.Yk5blH"VI!:-HHm.+O[M[\kR_EC<m;YFbmJNA<-JZlRJ4_
%f0l&UL_utG/Y8u;Fb?FE&:p\JlZ]:0$L%$/Z$>+6p(iU,*+F;R8iG&XK[TR'EaO1dYbOh?@h.Y"&g%Ks!Ldm2<Mn#Z94Bg><@l,N
%CAFhn)ojut<\]hl1:CglQO]mraBa7*7TT4bW-ta;&ThmMj^^]FHu6<O0i:2>:I["&0\<'&Cj+_)Oi<&B>Pi*I<Z0:\F8a6s3U$)"
%ZRTI)!+Ir^IjjHaEJ@]BCna?if`^6i`nENfj!3]tZo6RB<1q!,f2LD1<$;q%ZgU]?5luompi``L-9[Rfrmd>X\*.H599Lqo:^2d_
%?:h^6nKU,amE.c'[gs`-U'f%Wpc0BTj8B`DG#AV#/]2jD,"0O@_q=@nR_DpL=aGFlmq^66=>Yi0fP1jNf\!agR>=8L`?c<o=)/DB
%;U^)5Bi,]:XT2K@TRIW'$ZHH)VFlQV<)5*C.39;4#9=U\nfIeJ+@YUY`36fV$7+#EVs%%Qp5[dJIHO$kcMJM:?2O=QK(KMHo"33a
%CTeGR[e>Qb%N"!-o,02Fq-iK'`SWh_L.:8c"c"ko]V+b00*,sUmRE.gm.@(/+F.ML'Z)?EU%GGEkcm(pRpSF/?,>?iK1Ro3=+g6g
%P91p8&jT[%0UA_@e1:_Z+I#NG*75j0q;iDLIdKQH>1<*nFHJK-78W%gBY^<U&pIR&c'Ti^qaVl-]UI6rKPk:I%=rr14k+k/@.gI1
%oBXqUfW>USm53::<+.ALpI8L_74>^2r/gl$BkY-*)e/SU\LpTGI2eAEA=T)^>Cps_^#(q5b!$%Z6\<D.b'`SLI@(mU0:8Rq)hL3U
%h^rE@,D3::H63=/A=(+-]mf08Am.,M>8D-o.)m=*:ZT$jgLBMA@2IWP6Ki0.D0*jspIsPth0hM#'E+b;rG;<+itCao5Z7r,s84Ob
%rCpK+?gD5#%tC:^G>]eUkrLTB26Tc9M_:A/8>/cND)U%%RBAS6d>"=\jr]Ni_oms:#KSo89r;u*S\Z6PFR8;O[g6+:K$9cSjAN=g
%6D7ht+]GX`K)Fnk=AGa$6V@W;&C2_>4H5nB"&EW$b<DaP2aGj!r?Qg<C)@WVkAMYhJnG7T!R7<&gCJYqoCbOfAH$7n!PDOscW=$r
%QE7"BQFU6ps4C2=J>QuN\tBNb1)>2V`#VS5^t<Rta#18i1@BU"TUo8/s!7BE#/=Ml[]9E#@&(n%`XVteF^;4Lg@YBKbh(;4I1=)n
%6'^GFk_(.PU`2QuE]kN:kmY(1J!`u3:&4=<p/)nt`.H(m+p9($'cu8#lJ"6bZ6dr3gY*pZ04gEh?WHRLdUmIi5Hg_7T7)dIfZEF3
%m$l,EIFfK;$FT67[2llf-aIL/Du1lAQBecEG"aHhTBF.0eN'Y,piUOH69&khrIiS^AR81/;+/r0p?XiE`4Uj([N00Sr(AU_J7t5"
%DHsh@AW6"I/<1o7/`4hVW@Q*9ludK'8[A3o>Dr6gb'':%mWN0iapo9d,Z09b[&OG'"Sd'paKZZo`I$0R@I,cJ'Y!e^JjIZjIuZ9O
%@^&3l\&V):O]1FhaV-O,k-[@on71_o#G0TEn9D=8!q5[fPS$)cNr*g3Tf?W(fCGs6J[NAtNV7'&W`RQl:fh_"jj;RABCh/L.onA,
%=#_TY:s=%,nRtfo(?j8m@P7WP[)=,-Qh)5f7?ustM0ZQ3nBkDmmj+'0-G)FsH&J]Z',aX.i[s5ASA:i,NG6)S:970JOjejo]bR0a
%TbC\'DBZ_QB8dch0kqi_SKf^oJ).t:RQ;$=*6aW5kO7uUh%'ZVR*H?O0GsV8Zp#O0KsTm]>hkG4#[>tJ$P0>no,fVU?+7]s.hD3j
%2r;)Y<pZF!GW>E0,;7tpW3\M6Hh%&,#(`(Ji%;E6:Q6qpb3TrlrGGC&<*`>)hBb(Z337uci5$S7@Y/q!'7^ism>&NJKUg2\rp8k4
%B%2'oN6fnG:?T#[58ncO"6I7APlFX=`GP,`I-5K<T*G7=MVlo8]*oQlcF0n4\NIesFhuS?/59*<qUWql%=U6Y,%u+)\atWg:;s@d
%9.C$)GeEE1$-pAh=`HDk?g_L*W4-Tib\gFD]Y9t3DW6YcWHh!/`M&/""DF/;ImNNrIV<Ubnf!oph9!nWG^q(8_HN[SBLEo89[7M1
%^,^t,K2(c1TA9eH]BVjR"h"\MeZGi3=mK7b\b_l!13.\T?62:7pS[K?/=T?)\@cC(pZbk"N@ZADW1OI`ST1B?p>UhEDKaAurf%8_
%8XXMZ/t5:\XKH36F([#'WnHEr0U#(*lPSpdP%P]js2U*3s(^@%9bfX00%p'/6Q<`Zq/mM+Lg*`r%TYRCPr4T'XOJr=A@5ncKhE0&
%VAKDN$f%uV_sG?:.'2.(-AaJ&KPoVAP`H2[Ybp[c)q[](P'q3t*,.oP:^rXt:S&sTS8_mj=Au1]KSWB9$Jq29l#T1[!hN/lcgupZ
%8k\hR081FP*n+BG;9bZ>ko(^LF81`bZ<;#=D(Fba<^3R9RWF#pomlEFC6E<aS<.?79/>W-LW;#0<(OcV"4m/T,!%6BKQNp__WWDm
%BX4\1TCqI7Im1=Q>GTYr>Z$e8rQS8#aRH5Lpp#I_$HlFW3qV%V*#?SqLM?AipNm2Z"dQ,[($FV\6"Q6+HX(`p08%fFc6(dd?\3'V
%5MR$/,`9^B\!8,GWQ'$eRH$bV:KX9JVD[:0b*E27.::?4TM!Yuobh"!Kp.dtAA6\BrWgAD-%&u0Z@4kk_[P?MC'0enrrT^6Jl4c.
%HpimED^Eb`]!,S.)T$!"o8el=W:7hH8<Iut[UPmVrZ;)Wdr5oXEr?sAB[R7]ZY-bS#<L.kn/D8BVka$F8g^WVWSA%9T8G;Zp?Ds%
%$T2Ctprq@Jr\t(>EdE`$-pB)+NNVI5o/O2!2kf"b+Ka=c$6SWAS_uuX+H4G[odauCL\.Lf9`j]4E'K-0o3XbdP;pVjEW,GSGcelP
%k:>ol(ER+)[i)Yf=Ia74T3V7!(7I!Xs17>GUAJ06:`mI/L$jlU0d?8d!%r8,JV1!h%#HNX"G$rKOANlX2\?#,E?-#Xh/T*09*M'T
%NrL&Hj]bn>G\Qkb\%gg7IU8]i/e)>u'10u7>E.WG[d[]q25aqOX&Rr4%Z(HB1rTG+pGQQSe,g4#W;V4*V8>gE6='%baQK,,"b++[
%q:ZOp8A5HreqJ@8F4:tO`Bl2=0"P3I[[6KI#Ud+.s%E,Y?,_Kf:&(EgDF0.=KqBVV2d]IBqS]j_(OcuHl#;Yl5=:&r3FBYLL$Z\&
%L+_F4.9"&@J]fm_2#==u#sZefeB;n0+e<a%,q\(GIA<]V1n3uu8C%PWs*k>>r3hiU2rWq'i)?M(RS_54F9t2(TJ*/WSNfO0;#AL9
%pt;<7ppn`tr%OSqUZZiLqYYR%-ZMiQ@C3`R&_\<S8f3%hH21+djXOI'[c/Z_NLX#CZYr(Oe@nn1-&>N1h$'<ee:T+eSIo+:>t]7Q
%o<sB$D:]<%Bs$?#b]L0nkEme6ijK=58t\7(<*BV>GuN$PHd]9>D=(\8eE>.+-6.lD>=2];:=+_bOof>]Ih$YhfPMe7XaLe*U>*?3
%E%e)7h\4ug=k0b=]Nr5ho9?9AD(InaKg?YR%Mq#T?BaY4"R0O;=6VoFh%*j:B>quZmG'E(H"^.1:lS#&Pu_d`:I:(!&]gY73lZeM
%g-s4uCPUd;]\d&fjOX.@@7k(3pSj6bU!d:o$a.0:6KG+m)(c:L=0&Q$KiC#&m-[ed"@(!\HTb+S1&8Z3WQ5PuVo1KY2D*Y_7Q/P$
%KuE>NZJ!*IaNk9q\k:dUic2QcB%`pe1Wa$%aX%(_*We7@\V8"n1F^.PT5)q.8'=UPVi/Xu),6YhC>,;&q>VAJ1ikr6.^U'go?C$L
%QD=E[I+kiLOXUrcPo^FF@uJTCU*Z.JC&I9.8*!"kfj'@@%,QG6Nr,KJ<iiX<$eS8.L+^2^NHK9Fl^^,,]4eg*\>FB=bf;_]/?ZpV
%4h.]2KeC)=d,F!(cRs5r%[SQjJNMW0"!_dAGi]!EN;`rUIWUTlENO'Y0(sH$G(SJ5en?^Kq1?6+&Yt]#T+9G(@,rMqh'OQ!c7PJp
%lSZ9@60cn])SV#F#?:Zce9H<FYnlX6/?gOh>Pb1ScPNlYRN(JMF&Dre\PAIc>h$!'Z'6Ou(Qo[g$tQ:3H%e0HH!cb.I&;2F<'e<*
%I&>6JZJ7F^i.91#VtdnJqkP";`91p;,o9qWgr/B6]M3d&61YU?G",Ohn%7,&.KMh(8bR(FJsJ''0ruk3ASEbY8tl(=K%V&m1/f?T
%4%O\3Jk@A<UWaT^eQ]5<LG(L]$ZcLU=fnq_q`g6KH)FY*^s$f4U&,,Y$G8i8F&t-r7r.jAUGunUj*idii'./5r+kp4DrkM$Eo5cS
%2N[NZgf/aQ"HpqrF^05l5>??;'PNN+5,7GQDPO5sG@Uc2gSf;ZZ;Fok:(\7H`Eg1\Dp*)^+61h5AS(,URurTV8js/3ZUY%264]G?
%Vpe*=1/oE1=fF#a[o7/-:<iS`?DCm&J<Sp?ZmcE25hNhfC8VZ1mYT(&-+o-+eH[0C^Gk%eo-%?#cHS6XkqZBc>*C:1.G(K=m<*V=
%7`jmI`)kK(kaMmnG(o+d98^9A>sI/lV4UdJ;;3`WhH;uPm(27-f!A3Mm=u`+-EXUQfs:k3e)KM9e`G?R:R!mTalZsn.>3-N785[1
%:U=4Lj,5;p=M*+C41H!$,$aMP3.@MWe0UJR7,^;(LBj;u*FZp&T0L8,YJObHg:KY?g3]MdmB(2^<];?!H!>]GBdrlQS)=5-GCTR@
%lMpgp5Q8jHGQ7X?:S0fk_!h9m]0C]C:Hs:%Da/XLdr0a-LHg4]kO7<Bqr8b)?i0geNrOG&_b]1iks,4HVsiOBoWS;o?Q_IQ54H2A
%rS9^9rGR2Wrr=-OA"E~>
%AI9_PrivateDataEnd
